#![cfg_attr(not(feature = "std"), no_std)]

extern crate cfg_if;

pub mod types;

pub use esp_idf_sys as sys;

pub use sys::mbedtls_aes_cmac_prf_128 as aes_cmac_prf_128;
pub use sys::mbedtls_aes_self_test as aes_self_test;
pub use sys::mbedtls_aria_crypt_cbc as aria_crypt_cbc;
pub use sys::mbedtls_aria_crypt_cfb128 as aria_crypt_cfb128;
pub use sys::mbedtls_aria_crypt_ctr as aria_crypt_ctr;
pub use sys::mbedtls_aria_crypt_ecb as aria_crypt_ecb;
pub use sys::mbedtls_aria_free as aria_free;
pub use sys::mbedtls_aria_init as aria_init;
pub use sys::mbedtls_aria_self_test as aria_self_test;
pub use sys::mbedtls_aria_setkey_dec as aria_setkey_dec;
pub use sys::mbedtls_aria_setkey_enc as aria_setkey_enc;
pub use sys::mbedtls_asn1_find_named_data as asn1_find_named_data;
#[cfg(not(any(esp_idf_version_full = "5.0.2", esp_idf_version_full = "5.1.0")))]
pub use sys::mbedtls_asn1_free_named_data as asn1_free_named_data;
pub use sys::mbedtls_asn1_free_named_data_list as asn1_free_named_data_list;
#[cfg(not(esp_idf_version_minor = "0"))]
pub use sys::mbedtls_asn1_free_named_data_list_shallow as asn1_free_named_data_list_shallow;
pub use sys::mbedtls_asn1_get_alg as asn1_get_alg;
pub use sys::mbedtls_asn1_get_alg_null as asn1_get_alg_null;
pub use sys::mbedtls_asn1_get_bitstring as asn1_get_bitstring;
pub use sys::mbedtls_asn1_get_bitstring_null as asn1_get_bitstring_null;
pub use sys::mbedtls_asn1_get_bool as asn1_get_bool;
pub use sys::mbedtls_asn1_get_enum as asn1_get_enum;
pub use sys::mbedtls_asn1_get_int as asn1_get_int;
pub use sys::mbedtls_asn1_get_len as asn1_get_len;
pub use sys::mbedtls_asn1_get_mpi as asn1_get_mpi;
pub use sys::mbedtls_asn1_get_sequence_of as asn1_get_sequence_of;
pub use sys::mbedtls_asn1_get_tag as asn1_get_tag;
pub use sys::mbedtls_asn1_sequence_free as asn1_sequence_free;
pub use sys::mbedtls_asn1_store_named_data as asn1_store_named_data;
pub use sys::mbedtls_asn1_traverse_sequence_of as asn1_traverse_sequence_of;
pub use sys::mbedtls_asn1_write_algorithm_identifier as asn1_write_algorithm_identifier;
pub use sys::mbedtls_asn1_write_bitstring as asn1_write_bitstring;
pub use sys::mbedtls_asn1_write_bool as asn1_write_bool;
pub use sys::mbedtls_asn1_write_enum as asn1_write_enum;
pub use sys::mbedtls_asn1_write_ia5_string as asn1_write_ia5_string;
pub use sys::mbedtls_asn1_write_int as asn1_write_int;
pub use sys::mbedtls_asn1_write_len as asn1_write_len;
pub use sys::mbedtls_asn1_write_mpi as asn1_write_mpi;
pub use sys::mbedtls_asn1_write_named_bitstring as asn1_write_named_bitstring;
pub use sys::mbedtls_asn1_write_null as asn1_write_null;
pub use sys::mbedtls_asn1_write_octet_string as asn1_write_octet_string;
pub use sys::mbedtls_asn1_write_oid as asn1_write_oid;
pub use sys::mbedtls_asn1_write_printable_string as asn1_write_printable_string;
pub use sys::mbedtls_asn1_write_raw_buffer as asn1_write_raw_buffer;
pub use sys::mbedtls_asn1_write_tag as asn1_write_tag;
pub use sys::mbedtls_asn1_write_tagged_string as asn1_write_tagged_string;
pub use sys::mbedtls_asn1_write_utf8_string as asn1_write_utf8_string;
pub use sys::mbedtls_base64_decode as base64_decode;
pub use sys::mbedtls_base64_encode as base64_encode;
pub use sys::mbedtls_base64_self_test as base64_self_test;
// pub use sys::mbedtls_calloc as calloc;
pub use sys::mbedtls_camellia_crypt_cbc as camellia_crypt_cbc;
pub use sys::mbedtls_camellia_crypt_cfb128 as camellia_crypt_cfb128;
pub use sys::mbedtls_camellia_crypt_ctr as camellia_crypt_ctr;
pub use sys::mbedtls_camellia_crypt_ecb as camellia_crypt_ecb;
pub use sys::mbedtls_camellia_free as camellia_free;
pub use sys::mbedtls_camellia_init as camellia_init;
pub use sys::mbedtls_camellia_self_test as camellia_self_test;
pub use sys::mbedtls_camellia_setkey_dec as camellia_setkey_dec;
pub use sys::mbedtls_camellia_setkey_enc as camellia_setkey_enc;
pub use sys::mbedtls_ccm_auth_decrypt as ccm_auth_decrypt;
pub use sys::mbedtls_ccm_encrypt_and_tag as ccm_encrypt_and_tag;
pub use sys::mbedtls_ccm_finish as ccm_finish;
pub use sys::mbedtls_ccm_free as ccm_free;
pub use sys::mbedtls_ccm_init as ccm_init;
pub use sys::mbedtls_ccm_self_test as ccm_self_test;
pub use sys::mbedtls_ccm_set_lengths as ccm_set_lengths;
pub use sys::mbedtls_ccm_setkey as ccm_setkey;
pub use sys::mbedtls_ccm_star_auth_decrypt as ccm_star_auth_decrypt;
pub use sys::mbedtls_ccm_star_encrypt_and_tag as ccm_star_encrypt_and_tag;
pub use sys::mbedtls_ccm_starts as ccm_starts;
pub use sys::mbedtls_ccm_update as ccm_update;
pub use sys::mbedtls_ccm_update_ad as ccm_update_ad;
pub use sys::mbedtls_chacha20_crypt as chacha20_crypt;
pub use sys::mbedtls_chacha20_free as chacha20_free;
pub use sys::mbedtls_chacha20_init as chacha20_init;
pub use sys::mbedtls_chacha20_self_test as chacha20_self_test;
pub use sys::mbedtls_chacha20_setkey as chacha20_setkey;
pub use sys::mbedtls_chacha20_starts as chacha20_starts;
pub use sys::mbedtls_chacha20_update as chacha20_update;
pub use sys::mbedtls_chachapoly_auth_decrypt as chachapoly_auth_decrypt;
pub use sys::mbedtls_chachapoly_encrypt_and_tag as chachapoly_encrypt_and_tag;
pub use sys::mbedtls_chachapoly_finish as chachapoly_finish;
pub use sys::mbedtls_chachapoly_free as chachapoly_free;
pub use sys::mbedtls_chachapoly_init as chachapoly_init;
pub use sys::mbedtls_chachapoly_self_test as chachapoly_self_test;
pub use sys::mbedtls_chachapoly_setkey as chachapoly_setkey;
pub use sys::mbedtls_chachapoly_starts as chachapoly_starts;
pub use sys::mbedtls_chachapoly_update as chachapoly_update;
pub use sys::mbedtls_chachapoly_update_aad as chachapoly_update_aad;
pub use sys::mbedtls_cipher_auth_decrypt_ext as cipher_auth_decrypt_ext;
pub use sys::mbedtls_cipher_auth_encrypt_ext as cipher_auth_encrypt_ext;
pub use sys::mbedtls_cipher_check_tag as cipher_check_tag;
pub use sys::mbedtls_cipher_cmac as cipher_cmac;
pub use sys::mbedtls_cipher_cmac_finish as cipher_cmac_finish;
pub use sys::mbedtls_cipher_cmac_reset as cipher_cmac_reset;
pub use sys::mbedtls_cipher_cmac_starts as cipher_cmac_starts;
pub use sys::mbedtls_cipher_cmac_update as cipher_cmac_update;
pub use sys::mbedtls_cipher_crypt as cipher_crypt;
pub use sys::mbedtls_cipher_finish as cipher_finish;
pub use sys::mbedtls_cipher_free as cipher_free;
pub use sys::mbedtls_cipher_info_from_string as cipher_info_from_string;
pub use sys::mbedtls_cipher_info_from_type as cipher_info_from_type;
pub use sys::mbedtls_cipher_info_from_values as cipher_info_from_values;
pub use sys::mbedtls_cipher_init as cipher_init;
pub use sys::mbedtls_cipher_list as cipher_list;
pub use sys::mbedtls_cipher_reset as cipher_reset;
pub use sys::mbedtls_cipher_set_iv as cipher_set_iv;
pub use sys::mbedtls_cipher_set_padding_mode as cipher_set_padding_mode;
pub use sys::mbedtls_cipher_setkey as cipher_setkey;
pub use sys::mbedtls_cipher_setup as cipher_setup;
pub use sys::mbedtls_cipher_update as cipher_update;
pub use sys::mbedtls_cipher_update_ad as cipher_update_ad;
pub use sys::mbedtls_cipher_write_tag as cipher_write_tag;
pub use sys::mbedtls_cmac_self_test as cmac_self_test;
pub use sys::mbedtls_ct_memcmp as ct_memcmp;
pub use sys::mbedtls_ctr_drbg_free as ctr_drbg_free;
pub use sys::mbedtls_ctr_drbg_init as ctr_drbg_init;
pub use sys::mbedtls_ctr_drbg_random as ctr_drbg_random;
pub use sys::mbedtls_ctr_drbg_random_with_add as ctr_drbg_random_with_add;
pub use sys::mbedtls_ctr_drbg_reseed as ctr_drbg_reseed;
pub use sys::mbedtls_ctr_drbg_seed as ctr_drbg_seed;
pub use sys::mbedtls_ctr_drbg_self_test as ctr_drbg_self_test;
pub use sys::mbedtls_ctr_drbg_set_entropy_len as ctr_drbg_set_entropy_len;
pub use sys::mbedtls_ctr_drbg_set_nonce_len as ctr_drbg_set_nonce_len;
pub use sys::mbedtls_ctr_drbg_set_prediction_resistance as ctr_drbg_set_prediction_resistance;
pub use sys::mbedtls_ctr_drbg_set_reseed_interval as ctr_drbg_set_reseed_interval;
pub use sys::mbedtls_ctr_drbg_update as ctr_drbg_update;
pub use sys::mbedtls_ctr_drbg_update_seed_file as ctr_drbg_update_seed_file;
pub use sys::mbedtls_ctr_drbg_write_seed_file as ctr_drbg_write_seed_file;
pub use sys::mbedtls_debug_print_buf as debug_print_buf;
pub use sys::mbedtls_debug_print_crt as debug_print_crt;
pub use sys::mbedtls_debug_print_ecp as debug_print_ecp;
pub use sys::mbedtls_debug_print_mpi as debug_print_mpi;
pub use sys::mbedtls_debug_print_msg as debug_print_msg;
pub use sys::mbedtls_debug_print_ret as debug_print_ret;
pub use sys::mbedtls_debug_printf_ecdh as debug_printf_ecdh;
pub use sys::mbedtls_debug_set_threshold as debug_set_threshold;
pub use sys::mbedtls_des3_crypt_cbc as des3_crypt_cbc;
pub use sys::mbedtls_des3_crypt_ecb as des3_crypt_ecb;
pub use sys::mbedtls_des3_free as des3_free;
pub use sys::mbedtls_des3_init as des3_init;
pub use sys::mbedtls_des3_set2key_dec as des3_set2key_dec;
pub use sys::mbedtls_des3_set2key_enc as des3_set2key_enc;
pub use sys::mbedtls_des3_set3key_dec as des3_set3key_dec;
pub use sys::mbedtls_des3_set3key_enc as des3_set3key_enc;
pub use sys::mbedtls_des_crypt_cbc as des_crypt_cbc;
pub use sys::mbedtls_des_crypt_ecb as des_crypt_ecb;
pub use sys::mbedtls_des_free as des_free;
pub use sys::mbedtls_des_init as des_init;
pub use sys::mbedtls_des_key_check_key_parity as des_key_check_key_parity;
pub use sys::mbedtls_des_key_check_weak as des_key_check_weak;
pub use sys::mbedtls_des_key_set_parity as des_key_set_parity;
pub use sys::mbedtls_des_self_test as des_self_test;
pub use sys::mbedtls_des_setkey as des_setkey;
pub use sys::mbedtls_des_setkey_dec as des_setkey_dec;
pub use sys::mbedtls_des_setkey_enc as des_setkey_enc;
pub use sys::mbedtls_dhm_calc_secret as dhm_calc_secret;
pub use sys::mbedtls_dhm_free as dhm_free;
pub use sys::mbedtls_dhm_get_bitlen as dhm_get_bitlen;
pub use sys::mbedtls_dhm_get_len as dhm_get_len;
pub use sys::mbedtls_dhm_get_value as dhm_get_value;
pub use sys::mbedtls_dhm_init as dhm_init;
pub use sys::mbedtls_dhm_make_params as dhm_make_params;
pub use sys::mbedtls_dhm_make_public as dhm_make_public;
pub use sys::mbedtls_dhm_parse_dhm as dhm_parse_dhm;
pub use sys::mbedtls_dhm_parse_dhmfile as dhm_parse_dhmfile;
pub use sys::mbedtls_dhm_read_params as dhm_read_params;
pub use sys::mbedtls_dhm_read_public as dhm_read_public;
pub use sys::mbedtls_dhm_self_test as dhm_self_test;
pub use sys::mbedtls_dhm_set_group as dhm_set_group;
pub use sys::mbedtls_ecc_group_of_psa as ecc_group_of_psa;
pub use sys::mbedtls_ecdh_calc_secret as ecdh_calc_secret;
pub use sys::mbedtls_ecdh_can_do as ecdh_can_do;
pub use sys::mbedtls_ecdh_compute_shared as ecdh_compute_shared;
pub use sys::mbedtls_ecdh_free as ecdh_free;
pub use sys::mbedtls_ecdh_gen_public as ecdh_gen_public;
pub use sys::mbedtls_ecdh_get_params as ecdh_get_params;
pub use sys::mbedtls_ecdh_init as ecdh_init;
pub use sys::mbedtls_ecdh_make_params as ecdh_make_params;
pub use sys::mbedtls_ecdh_make_public as ecdh_make_public;
pub use sys::mbedtls_ecdh_read_params as ecdh_read_params;
pub use sys::mbedtls_ecdh_read_public as ecdh_read_public;
pub use sys::mbedtls_ecdh_setup as ecdh_setup;
pub use sys::mbedtls_ecdsa_can_do as ecdsa_can_do;
pub use sys::mbedtls_ecdsa_free as ecdsa_free;
pub use sys::mbedtls_ecdsa_from_keypair as ecdsa_from_keypair;
pub use sys::mbedtls_ecdsa_genkey as ecdsa_genkey;
pub use sys::mbedtls_ecdsa_init as ecdsa_init;
pub use sys::mbedtls_ecdsa_read_signature as ecdsa_read_signature;
pub use sys::mbedtls_ecdsa_read_signature_restartable as ecdsa_read_signature_restartable;
pub use sys::mbedtls_ecdsa_sign as ecdsa_sign;
pub use sys::mbedtls_ecdsa_sign_det_ext as ecdsa_sign_det_ext;
pub use sys::mbedtls_ecdsa_verify as ecdsa_verify;
pub use sys::mbedtls_ecdsa_write_signature as ecdsa_write_signature;
pub use sys::mbedtls_ecdsa_write_signature_restartable as ecdsa_write_signature_restartable;
pub use sys::mbedtls_ecjpake_check as ecjpake_check;
pub use sys::mbedtls_ecjpake_derive_secret as ecjpake_derive_secret;
pub use sys::mbedtls_ecjpake_free as ecjpake_free;
pub use sys::mbedtls_ecjpake_init as ecjpake_init;
pub use sys::mbedtls_ecjpake_read_round_one as ecjpake_read_round_one;
pub use sys::mbedtls_ecjpake_read_round_two as ecjpake_read_round_two;
pub use sys::mbedtls_ecjpake_self_test as ecjpake_self_test;
pub use sys::mbedtls_ecjpake_set_point_format as ecjpake_set_point_format;
pub use sys::mbedtls_ecjpake_setup as ecjpake_setup;
pub use sys::mbedtls_ecjpake_write_round_one as ecjpake_write_round_one;
pub use sys::mbedtls_ecjpake_write_round_two as ecjpake_write_round_two;
pub use sys::mbedtls_ecp_check_privkey as ecp_check_privkey;
pub use sys::mbedtls_ecp_check_pub_priv as ecp_check_pub_priv;
pub use sys::mbedtls_ecp_check_pubkey as ecp_check_pubkey;
pub use sys::mbedtls_ecp_copy as ecp_copy;
pub use sys::mbedtls_ecp_curve_info_from_grp_id as ecp_curve_info_from_grp_id;
pub use sys::mbedtls_ecp_curve_info_from_name as ecp_curve_info_from_name;
pub use sys::mbedtls_ecp_curve_info_from_tls_id as ecp_curve_info_from_tls_id;
pub use sys::mbedtls_ecp_curve_list as ecp_curve_list;
pub use sys::mbedtls_ecp_export as ecp_export;
pub use sys::mbedtls_ecp_gen_key as ecp_gen_key;
pub use sys::mbedtls_ecp_gen_keypair as ecp_gen_keypair;
pub use sys::mbedtls_ecp_gen_keypair_base as ecp_gen_keypair_base;
pub use sys::mbedtls_ecp_gen_privkey as ecp_gen_privkey;
pub use sys::mbedtls_ecp_get_type as ecp_get_type;
pub use sys::mbedtls_ecp_group_copy as ecp_group_copy;
pub use sys::mbedtls_ecp_group_free as ecp_group_free;
pub use sys::mbedtls_ecp_group_init as ecp_group_init;
pub use sys::mbedtls_ecp_group_load as ecp_group_load;
pub use sys::mbedtls_ecp_grp_id_list as ecp_grp_id_list;
pub use sys::mbedtls_ecp_is_zero as ecp_is_zero;
pub use sys::mbedtls_ecp_keypair_free as ecp_keypair_free;
pub use sys::mbedtls_ecp_keypair_init as ecp_keypair_init;
pub use sys::mbedtls_ecp_mul as ecp_mul;
pub use sys::mbedtls_ecp_mul_restartable as ecp_mul_restartable;
pub use sys::mbedtls_ecp_muladd as ecp_muladd;
pub use sys::mbedtls_ecp_muladd_restartable as ecp_muladd_restartable;
pub use sys::mbedtls_ecp_point_cmp as ecp_point_cmp;
pub use sys::mbedtls_ecp_point_free as ecp_point_free;
pub use sys::mbedtls_ecp_point_init as ecp_point_init;
pub use sys::mbedtls_ecp_point_read_binary as ecp_point_read_binary;
pub use sys::mbedtls_ecp_point_read_string as ecp_point_read_string;
pub use sys::mbedtls_ecp_point_write_binary as ecp_point_write_binary;
pub use sys::mbedtls_ecp_read_key as ecp_read_key;
pub use sys::mbedtls_ecp_self_test as ecp_self_test;
pub use sys::mbedtls_ecp_set_zero as ecp_set_zero;
pub use sys::mbedtls_ecp_tls_read_group as ecp_tls_read_group;
pub use sys::mbedtls_ecp_tls_read_group_id as ecp_tls_read_group_id;
pub use sys::mbedtls_ecp_tls_read_point as ecp_tls_read_point;
pub use sys::mbedtls_ecp_tls_write_group as ecp_tls_write_group;
pub use sys::mbedtls_ecp_tls_write_point as ecp_tls_write_point;
pub use sys::mbedtls_ecp_write_key as ecp_write_key;
pub use sys::mbedtls_entropy_add_source as entropy_add_source;
pub use sys::mbedtls_entropy_free as entropy_free;
pub use sys::mbedtls_entropy_func as entropy_func;
pub use sys::mbedtls_entropy_gather as entropy_gather;
pub use sys::mbedtls_entropy_init as entropy_init;
pub use sys::mbedtls_entropy_self_test as entropy_self_test;
pub use sys::mbedtls_entropy_source_self_test as entropy_source_self_test;
pub use sys::mbedtls_entropy_update_manual as entropy_update_manual;
pub use sys::mbedtls_entropy_update_seed_file as entropy_update_seed_file;
pub use sys::mbedtls_entropy_write_seed_file as entropy_write_seed_file;
// pub use sys::mbedtls_free as free;
cfg_if::cfg_if! {
    if #[cfg(esp_idf_mbedtls_hardware_sha)] {
        pub use sys::esp_aes_gcm_auth_decrypt as gcm_auth_decrypt;
        pub use sys::esp_aes_gcm_crypt_and_tag as gcm_crypt_and_tag;
        pub use sys::esp_aes_gcm_finish as gcm_finish;
        pub use sys::esp_aes_gcm_free as gcm_free;
        pub use sys::esp_aes_gcm_init as gcm_init;
        pub use sys::esp_aes_gcm_setkey as gcm_setkey;
        pub use sys::esp_aes_gcm_starts as gcm_starts;
        pub use sys::esp_aes_gcm_update as gcm_update;
        pub use sys::esp_aes_gcm_update_ad as gcm_update_ad;
    }
}
pub use sys::mbedtls_gcm_self_test as gcm_self_test;
pub use sys::mbedtls_high_level_strerr as high_level_strerr;
pub use sys::mbedtls_hkdf as hkdf;
pub use sys::mbedtls_hkdf_expand as hkdf_expand;
pub use sys::mbedtls_hkdf_extract as hkdf_extract;
pub use sys::mbedtls_hmac_drbg_free as hmac_drbg_free;
pub use sys::mbedtls_hmac_drbg_init as hmac_drbg_init;
pub use sys::mbedtls_hmac_drbg_random as hmac_drbg_random;
pub use sys::mbedtls_hmac_drbg_random_with_add as hmac_drbg_random_with_add;
pub use sys::mbedtls_hmac_drbg_reseed as hmac_drbg_reseed;
pub use sys::mbedtls_hmac_drbg_seed as hmac_drbg_seed;
pub use sys::mbedtls_hmac_drbg_seed_buf as hmac_drbg_seed_buf;
pub use sys::mbedtls_hmac_drbg_self_test as hmac_drbg_self_test;
pub use sys::mbedtls_hmac_drbg_set_entropy_len as hmac_drbg_set_entropy_len;
pub use sys::mbedtls_hmac_drbg_set_prediction_resistance as hmac_drbg_set_prediction_resistance;
pub use sys::mbedtls_hmac_drbg_set_reseed_interval as hmac_drbg_set_reseed_interval;
pub use sys::mbedtls_hmac_drbg_update as hmac_drbg_update;
pub use sys::mbedtls_hmac_drbg_update_seed_file as hmac_drbg_update_seed_file;
pub use sys::mbedtls_hmac_drbg_write_seed_file as hmac_drbg_write_seed_file;
pub use sys::mbedtls_internal_ripemd160_process as internal_ripemd160_process;
pub use sys::mbedtls_internal_sha1_process as internal_sha1_process;
pub use sys::mbedtls_internal_sha256_process as internal_sha256_process;
pub use sys::mbedtls_internal_sha512_process as internal_sha512_process;
pub use sys::mbedtls_low_level_strerr as low_level_strerr;
pub use sys::mbedtls_md as md;
pub use sys::mbedtls_md5 as md5;
pub use sys::mbedtls_md5_self_test as md5_self_test;
pub use sys::mbedtls_md5_starts as md5_starts;
pub use sys::mbedtls_md_clone as md_clone;
pub use sys::mbedtls_md_file as md_file;
pub use sys::mbedtls_md_finish as md_finish;
pub use sys::mbedtls_md_free as md_free;
pub use sys::mbedtls_md_get_name as md_get_name;
pub use sys::mbedtls_md_get_size as md_get_size;
pub use sys::mbedtls_md_get_type as md_get_type;
pub use sys::mbedtls_md_hmac as md_hmac;
pub use sys::mbedtls_md_hmac_finish as md_hmac_finish;
pub use sys::mbedtls_md_hmac_reset as md_hmac_reset;
pub use sys::mbedtls_md_hmac_starts as md_hmac_starts;
pub use sys::mbedtls_md_hmac_update as md_hmac_update;
pub use sys::mbedtls_md_info_from_ctx as md_info_from_ctx;
pub use sys::mbedtls_md_info_from_string as md_info_from_string;
pub use sys::mbedtls_md_info_from_type as md_info_from_type;
pub use sys::mbedtls_md_init as md_init;
pub use sys::mbedtls_md_list as md_list;
#[cfg(not(esp_idf_version_full = "5.1.0"))]
pub use sys::mbedtls_md_process as md_process;
pub use sys::mbedtls_md_setup as md_setup;
pub use sys::mbedtls_md_starts as md_starts;
pub use sys::mbedtls_md_update as md_update;
pub use sys::mbedtls_memory_buffer_alloc_free as memory_buffer_alloc_free;
pub use sys::mbedtls_memory_buffer_alloc_init as memory_buffer_alloc_init;
pub use sys::mbedtls_memory_buffer_alloc_self_test as memory_buffer_alloc_self_test;
pub use sys::mbedtls_memory_buffer_alloc_verify as memory_buffer_alloc_verify;
pub use sys::mbedtls_memory_buffer_set_verify as memory_buffer_set_verify;
pub use sys::mbedtls_mpi_add_abs as mpi_add_abs;
pub use sys::mbedtls_mpi_add_int as mpi_add_int;
pub use sys::mbedtls_mpi_add_mpi as mpi_add_mpi;
pub use sys::mbedtls_mpi_bitlen as mpi_bitlen;
pub use sys::mbedtls_mpi_cmp_abs as mpi_cmp_abs;
pub use sys::mbedtls_mpi_cmp_int as mpi_cmp_int;
pub use sys::mbedtls_mpi_cmp_mpi as mpi_cmp_mpi;
pub use sys::mbedtls_mpi_copy as mpi_copy;
pub use sys::mbedtls_mpi_div_int as mpi_div_int;
pub use sys::mbedtls_mpi_div_mpi as mpi_div_mpi;
pub use sys::mbedtls_mpi_exp_mod as mpi_exp_mod;
pub use sys::mbedtls_mpi_fill_random as mpi_fill_random;
pub use sys::mbedtls_mpi_free as mpi_free;
pub use sys::mbedtls_mpi_gcd as mpi_gcd;
pub use sys::mbedtls_mpi_gen_prime as mpi_gen_prime;
pub use sys::mbedtls_mpi_get_bit as mpi_get_bit;
pub use sys::mbedtls_mpi_grow as mpi_grow;
pub use sys::mbedtls_mpi_init as mpi_init;
pub use sys::mbedtls_mpi_inv_mod as mpi_inv_mod;
pub use sys::mbedtls_mpi_is_prime_ext as mpi_is_prime_ext;
pub use sys::mbedtls_mpi_lsb as mpi_lsb;
pub use sys::mbedtls_mpi_lset as mpi_lset;
pub use sys::mbedtls_mpi_lt_mpi_ct as mpi_lt_mpi_ct;
pub use sys::mbedtls_mpi_mod_int as mpi_mod_int;
pub use sys::mbedtls_mpi_mod_mpi as mpi_mod_mpi;
pub use sys::mbedtls_mpi_mul_int as mpi_mul_int;
pub use sys::mbedtls_mpi_mul_mpi as mpi_mul_mpi;
pub use sys::mbedtls_mpi_random as mpi_random;
pub use sys::mbedtls_mpi_read_binary as mpi_read_binary;
pub use sys::mbedtls_mpi_read_binary_le as mpi_read_binary_le;
pub use sys::mbedtls_mpi_read_file as mpi_read_file;
pub use sys::mbedtls_mpi_read_string as mpi_read_string;
pub use sys::mbedtls_mpi_safe_cond_assign as mpi_safe_cond_assign;
pub use sys::mbedtls_mpi_safe_cond_swap as mpi_safe_cond_swap;
pub use sys::mbedtls_mpi_self_test as mpi_self_test;
pub use sys::mbedtls_mpi_set_bit as mpi_set_bit;
pub use sys::mbedtls_mpi_shift_l as mpi_shift_l;
pub use sys::mbedtls_mpi_shift_r as mpi_shift_r;
pub use sys::mbedtls_mpi_shrink as mpi_shrink;
pub use sys::mbedtls_mpi_size as mpi_size;
pub use sys::mbedtls_mpi_sub_abs as mpi_sub_abs;
pub use sys::mbedtls_mpi_sub_int as mpi_sub_int;
pub use sys::mbedtls_mpi_sub_mpi as mpi_sub_mpi;
pub use sys::mbedtls_mpi_swap as mpi_swap;
pub use sys::mbedtls_mpi_write_binary as mpi_write_binary;
pub use sys::mbedtls_mpi_write_binary_le as mpi_write_binary_le;
pub use sys::mbedtls_mpi_write_file as mpi_write_file;
pub use sys::mbedtls_mpi_write_string as mpi_write_string;
pub use sys::mbedtls_net_accept as net_accept;
pub use sys::mbedtls_net_bind as net_bind;
pub use sys::mbedtls_net_close as net_close;
pub use sys::mbedtls_net_connect as net_connect;
pub use sys::mbedtls_net_free as net_free;
pub use sys::mbedtls_net_init as net_init;
pub use sys::mbedtls_net_poll as net_poll;
pub use sys::mbedtls_net_recv as net_recv;
pub use sys::mbedtls_net_recv_timeout as net_recv_timeout;
pub use sys::mbedtls_net_send as net_send;
pub use sys::mbedtls_net_set_block as net_set_block;
pub use sys::mbedtls_net_set_nonblock as net_set_nonblock;
pub use sys::mbedtls_net_usleep as net_usleep;
pub use sys::mbedtls_nist_kw_free as nist_kw_free;
pub use sys::mbedtls_nist_kw_init as nist_kw_init;
pub use sys::mbedtls_nist_kw_self_test as nist_kw_self_test;
pub use sys::mbedtls_nist_kw_setkey as nist_kw_setkey;
pub use sys::mbedtls_nist_kw_unwrap as nist_kw_unwrap;
pub use sys::mbedtls_nist_kw_wrap as nist_kw_wrap;
pub use sys::mbedtls_oid_get_attr_short_name as oid_get_attr_short_name;
pub use sys::mbedtls_oid_get_certificate_policies as oid_get_certificate_policies;
pub use sys::mbedtls_oid_get_cipher_alg as oid_get_cipher_alg;
pub use sys::mbedtls_oid_get_ec_grp as oid_get_ec_grp;
pub use sys::mbedtls_oid_get_extended_key_usage as oid_get_extended_key_usage;
pub use sys::mbedtls_oid_get_md_alg as oid_get_md_alg;
pub use sys::mbedtls_oid_get_md_hmac as oid_get_md_hmac;
pub use sys::mbedtls_oid_get_numeric_string as oid_get_numeric_string;
pub use sys::mbedtls_oid_get_oid_by_ec_grp as oid_get_oid_by_ec_grp;
pub use sys::mbedtls_oid_get_oid_by_md as oid_get_oid_by_md;
pub use sys::mbedtls_oid_get_oid_by_pk_alg as oid_get_oid_by_pk_alg;
pub use sys::mbedtls_oid_get_oid_by_sig_alg as oid_get_oid_by_sig_alg;
pub use sys::mbedtls_oid_get_pk_alg as oid_get_pk_alg;
pub use sys::mbedtls_oid_get_pkcs12_pbe_alg as oid_get_pkcs12_pbe_alg;
pub use sys::mbedtls_oid_get_sig_alg as oid_get_sig_alg;
pub use sys::mbedtls_oid_get_sig_alg_desc as oid_get_sig_alg_desc;
pub use sys::mbedtls_oid_get_x509_ext_type as oid_get_x509_ext_type;
pub use sys::mbedtls_pem_free as pem_free;
pub use sys::mbedtls_pem_init as pem_init;
pub use sys::mbedtls_pem_read_buffer as pem_read_buffer;
pub use sys::mbedtls_pem_write_buffer as pem_write_buffer;
pub use sys::mbedtls_pk_can_do as pk_can_do;
pub use sys::mbedtls_pk_check_pair as pk_check_pair;
pub use sys::mbedtls_pk_debug as pk_debug;
pub use sys::mbedtls_pk_decrypt as pk_decrypt;
pub use sys::mbedtls_pk_encrypt as pk_encrypt;
pub use sys::mbedtls_pk_free as pk_free;
pub use sys::mbedtls_pk_get_bitlen as pk_get_bitlen;
pub use sys::mbedtls_pk_get_name as pk_get_name;
pub use sys::mbedtls_pk_get_type as pk_get_type;
pub use sys::mbedtls_pk_info_from_type as pk_info_from_type;
pub use sys::mbedtls_pk_init as pk_init;
pub use sys::mbedtls_pk_load_file as pk_load_file;
pub use sys::mbedtls_pk_parse_key as pk_parse_key;
pub use sys::mbedtls_pk_parse_keyfile as pk_parse_keyfile;
pub use sys::mbedtls_pk_parse_public_key as pk_parse_public_key;
pub use sys::mbedtls_pk_parse_public_keyfile as pk_parse_public_keyfile;
pub use sys::mbedtls_pk_parse_subpubkey as pk_parse_subpubkey;
pub use sys::mbedtls_pk_setup as pk_setup;
pub use sys::mbedtls_pk_setup_rsa_alt as pk_setup_rsa_alt;
pub use sys::mbedtls_pk_sign as pk_sign;
pub use sys::mbedtls_pk_sign_ext as pk_sign_ext;
pub use sys::mbedtls_pk_sign_restartable as pk_sign_restartable;
pub use sys::mbedtls_pk_verify as pk_verify;
pub use sys::mbedtls_pk_verify_ext as pk_verify_ext;
pub use sys::mbedtls_pk_verify_restartable as pk_verify_restartable;
pub use sys::mbedtls_pk_write_key_der as pk_write_key_der;
pub use sys::mbedtls_pk_write_key_pem as pk_write_key_pem;
pub use sys::mbedtls_pk_write_pubkey as pk_write_pubkey;
pub use sys::mbedtls_pk_write_pubkey_der as pk_write_pubkey_der;
pub use sys::mbedtls_pk_write_pubkey_pem as pk_write_pubkey_pem;
pub use sys::mbedtls_pkcs12_derivation as pkcs12_derivation;
pub use sys::mbedtls_pkcs12_pbe as pkcs12_pbe;
pub use sys::mbedtls_pkcs5_pbes2 as pkcs5_pbes2;
#[cfg(not(any(esp_idf_version_full = "5.0.2", esp_idf_version_full = "5.1.0")))]
pub use sys::mbedtls_pkcs5_pbkdf2_hmac as pkcs5_pbkdf2_hmac;
#[cfg(any(esp_idf_version_full = "5.0.2", esp_idf_version_full = "5.1.0"))]
pub use sys::mbedtls_pkcs5_pbkdf2_hmac_ext as pkcs5_pbkdf2_hmac_ext;
pub use sys::mbedtls_pkcs5_self_test as pkcs5_self_test;
pub use sys::mbedtls_platform_gmtime_r as platform_gmtime_r;
pub use sys::mbedtls_platform_set_calloc_free as platform_set_calloc_free;
pub use sys::mbedtls_platform_setup as platform_setup;
pub use sys::mbedtls_platform_teardown as platform_teardown;
pub use sys::mbedtls_platform_zeroize as platform_zeroize;
pub use sys::mbedtls_poly1305_finish as poly1305_finish;
pub use sys::mbedtls_poly1305_free as poly1305_free;
pub use sys::mbedtls_poly1305_init as poly1305_init;
pub use sys::mbedtls_poly1305_mac as poly1305_mac;
pub use sys::mbedtls_poly1305_self_test as poly1305_self_test;
pub use sys::mbedtls_poly1305_starts as poly1305_starts;
pub use sys::mbedtls_poly1305_update as poly1305_update;
pub use sys::mbedtls_psa_crypto_free as psa_crypto_free;
pub use sys::mbedtls_psa_get_stats as psa_get_stats;
pub use sys::mbedtls_psa_inject_entropy as psa_inject_entropy;
pub use sys::mbedtls_ripemd160 as ripemd160;
pub use sys::mbedtls_ripemd160_clone as ripemd160_clone;
pub use sys::mbedtls_ripemd160_finish as ripemd160_finish;
pub use sys::mbedtls_ripemd160_free as ripemd160_free;
pub use sys::mbedtls_ripemd160_init as ripemd160_init;
pub use sys::mbedtls_ripemd160_self_test as ripemd160_self_test;
pub use sys::mbedtls_ripemd160_starts as ripemd160_starts;
pub use sys::mbedtls_ripemd160_update as ripemd160_update;
pub use sys::mbedtls_rsa_check_privkey as rsa_check_privkey;
pub use sys::mbedtls_rsa_check_pub_priv as rsa_check_pub_priv;
pub use sys::mbedtls_rsa_check_pubkey as rsa_check_pubkey;
pub use sys::mbedtls_rsa_complete as rsa_complete;
pub use sys::mbedtls_rsa_copy as rsa_copy;
pub use sys::mbedtls_rsa_export as rsa_export;
pub use sys::mbedtls_rsa_export_crt as rsa_export_crt;
pub use sys::mbedtls_rsa_export_raw as rsa_export_raw;
pub use sys::mbedtls_rsa_free as rsa_free;
pub use sys::mbedtls_rsa_gen_key as rsa_gen_key;
pub use sys::mbedtls_rsa_get_len as rsa_get_len;
pub use sys::mbedtls_rsa_import as rsa_import;
pub use sys::mbedtls_rsa_import_raw as rsa_import_raw;
pub use sys::mbedtls_rsa_init as rsa_init;
pub use sys::mbedtls_rsa_pkcs1_decrypt as rsa_pkcs1_decrypt;
pub use sys::mbedtls_rsa_pkcs1_encrypt as rsa_pkcs1_encrypt;
pub use sys::mbedtls_rsa_pkcs1_sign as rsa_pkcs1_sign;
pub use sys::mbedtls_rsa_pkcs1_verify as rsa_pkcs1_verify;
pub use sys::mbedtls_rsa_private as rsa_private;
pub use sys::mbedtls_rsa_public as rsa_public;
pub use sys::mbedtls_rsa_rsaes_oaep_decrypt as rsa_rsaes_oaep_decrypt;
pub use sys::mbedtls_rsa_rsaes_oaep_encrypt as rsa_rsaes_oaep_encrypt;
pub use sys::mbedtls_rsa_rsaes_pkcs1_v15_decrypt as rsa_rsaes_pkcs1_v15_decrypt;
pub use sys::mbedtls_rsa_rsaes_pkcs1_v15_encrypt as rsa_rsaes_pkcs1_v15_encrypt;
pub use sys::mbedtls_rsa_rsassa_pkcs1_v15_sign as rsa_rsassa_pkcs1_v15_sign;
pub use sys::mbedtls_rsa_rsassa_pkcs1_v15_verify as rsa_rsassa_pkcs1_v15_verify;
pub use sys::mbedtls_rsa_rsassa_pss_sign as rsa_rsassa_pss_sign;
pub use sys::mbedtls_rsa_rsassa_pss_sign_ext as rsa_rsassa_pss_sign_ext;
pub use sys::mbedtls_rsa_rsassa_pss_verify as rsa_rsassa_pss_verify;
pub use sys::mbedtls_rsa_rsassa_pss_verify_ext as rsa_rsassa_pss_verify_ext;
pub use sys::mbedtls_rsa_self_test as rsa_self_test;
pub use sys::mbedtls_rsa_set_padding as rsa_set_padding;
pub use sys::mbedtls_sha1 as sha1;
pub use sys::mbedtls_sha1_clone as sha1_clone;
pub use sys::mbedtls_sha1_finish as sha1_finish;
pub use sys::mbedtls_sha1_free as sha1_free;
pub use sys::mbedtls_sha1_init as sha1_init;
pub use sys::mbedtls_sha1_self_test as sha1_self_test;
pub use sys::mbedtls_sha1_starts as sha1_starts;
pub use sys::mbedtls_sha1_update as sha1_update;
pub use sys::mbedtls_sha256 as sha256;
pub use sys::mbedtls_sha256_clone as sha256_clone;
pub use sys::mbedtls_sha256_finish as sha256_finish;
pub use sys::mbedtls_sha256_free as sha256_free;
pub use sys::mbedtls_sha256_init as sha256_init;
pub use sys::mbedtls_sha256_self_test as sha256_self_test;
pub use sys::mbedtls_sha256_starts as sha256_starts;
pub use sys::mbedtls_sha256_update as sha256_update;
pub use sys::mbedtls_sha512 as sha512;
pub use sys::mbedtls_sha512_clone as sha512_clone;
pub use sys::mbedtls_sha512_finish as sha512_finish;
pub use sys::mbedtls_sha512_free as sha512_free;
pub use sys::mbedtls_sha512_init as sha512_init;
pub use sys::mbedtls_sha512_self_test as sha512_self_test;
pub use sys::mbedtls_sha512_starts as sha512_starts;
pub use sys::mbedtls_sha512_update as sha512_update;
pub use sys::mbedtls_ssl_cache_free as ssl_cache_free;
pub use sys::mbedtls_ssl_cache_get as ssl_cache_get;
pub use sys::mbedtls_ssl_cache_init as ssl_cache_init;
pub use sys::mbedtls_ssl_cache_set as ssl_cache_set;
pub use sys::mbedtls_ssl_cache_set_max_entries as ssl_cache_set_max_entries;
pub use sys::mbedtls_ssl_cache_set_timeout as ssl_cache_set_timeout;
pub use sys::mbedtls_ssl_check_pending as ssl_check_pending;
pub use sys::mbedtls_ssl_check_record as ssl_check_record;
pub use sys::mbedtls_ssl_ciphersuite_from_id as ssl_ciphersuite_from_id;
pub use sys::mbedtls_ssl_ciphersuite_from_string as ssl_ciphersuite_from_string;
pub use sys::mbedtls_ssl_ciphersuite_get_cipher_key_bitlen as ssl_ciphersuite_get_cipher_key_bitlen;
pub use sys::mbedtls_ssl_ciphersuite_uses_ec as ssl_ciphersuite_uses_ec;
pub use sys::mbedtls_ssl_ciphersuite_uses_psk as ssl_ciphersuite_uses_psk;
pub use sys::mbedtls_ssl_close_notify as ssl_close_notify;
pub use sys::mbedtls_ssl_conf_alpn_protocols as ssl_conf_alpn_protocols;
pub use sys::mbedtls_ssl_conf_authmode as ssl_conf_authmode;
pub use sys::mbedtls_ssl_conf_ca_cb as ssl_conf_ca_cb;
pub use sys::mbedtls_ssl_conf_ca_chain as ssl_conf_ca_chain;
pub use sys::mbedtls_ssl_conf_cert_profile as ssl_conf_cert_profile;
pub use sys::mbedtls_ssl_conf_cert_req_ca_list as ssl_conf_cert_req_ca_list;
pub use sys::mbedtls_ssl_conf_ciphersuites as ssl_conf_ciphersuites;
pub use sys::mbedtls_ssl_conf_dbg as ssl_conf_dbg;
pub use sys::mbedtls_ssl_conf_dh_param_bin as ssl_conf_dh_param_bin;
pub use sys::mbedtls_ssl_conf_dh_param_ctx as ssl_conf_dh_param_ctx;
pub use sys::mbedtls_ssl_conf_dhm_min_bitlen as ssl_conf_dhm_min_bitlen;
pub use sys::mbedtls_ssl_conf_dtls_anti_replay as ssl_conf_dtls_anti_replay;
pub use sys::mbedtls_ssl_conf_dtls_badmac_limit as ssl_conf_dtls_badmac_limit;
pub use sys::mbedtls_ssl_conf_dtls_cookies as ssl_conf_dtls_cookies;
pub use sys::mbedtls_ssl_conf_dtls_srtp_protection_profiles as ssl_conf_dtls_srtp_protection_profiles;
pub use sys::mbedtls_ssl_conf_encrypt_then_mac as ssl_conf_encrypt_then_mac;
pub use sys::mbedtls_ssl_conf_endpoint as ssl_conf_endpoint;
pub use sys::mbedtls_ssl_conf_extended_master_secret as ssl_conf_extended_master_secret;
pub use sys::mbedtls_ssl_conf_groups as ssl_conf_groups;
pub use sys::mbedtls_ssl_conf_handshake_timeout as ssl_conf_handshake_timeout;
pub use sys::mbedtls_ssl_conf_legacy_renegotiation as ssl_conf_legacy_renegotiation;
pub use sys::mbedtls_ssl_conf_max_frag_len as ssl_conf_max_frag_len;
pub use sys::mbedtls_ssl_conf_own_cert as ssl_conf_own_cert;
pub use sys::mbedtls_ssl_conf_preference_order as ssl_conf_preference_order;
pub use sys::mbedtls_ssl_conf_psk as ssl_conf_psk;
pub use sys::mbedtls_ssl_conf_psk_cb as ssl_conf_psk_cb;
pub use sys::mbedtls_ssl_conf_read_timeout as ssl_conf_read_timeout;
pub use sys::mbedtls_ssl_conf_renegotiation as ssl_conf_renegotiation;
pub use sys::mbedtls_ssl_conf_renegotiation_enforced as ssl_conf_renegotiation_enforced;
pub use sys::mbedtls_ssl_conf_renegotiation_period as ssl_conf_renegotiation_period;
pub use sys::mbedtls_ssl_conf_rng as ssl_conf_rng;
pub use sys::mbedtls_ssl_conf_session_cache as ssl_conf_session_cache;
pub use sys::mbedtls_ssl_conf_session_tickets as ssl_conf_session_tickets;
pub use sys::mbedtls_ssl_conf_session_tickets_cb as ssl_conf_session_tickets_cb;
pub use sys::mbedtls_ssl_conf_sig_algs as ssl_conf_sig_algs;
pub use sys::mbedtls_ssl_conf_sni as ssl_conf_sni;
pub use sys::mbedtls_ssl_conf_srtp_mki_value_supported as ssl_conf_srtp_mki_value_supported;
// pub use sys::mbedtls_ssl_conf_tls13_key_exchange_modes as ssl_conf_tls13_key_exchange_modes;
pub use sys::mbedtls_ssl_conf_transport as ssl_conf_transport;
pub use sys::mbedtls_ssl_conf_verify as ssl_conf_verify;
pub use sys::mbedtls_ssl_config_defaults as ssl_config_defaults;
pub use sys::mbedtls_ssl_config_free as ssl_config_free;
pub use sys::mbedtls_ssl_config_init as ssl_config_init;
pub use sys::mbedtls_ssl_cookie_check as ssl_cookie_check;
pub use sys::mbedtls_ssl_cookie_free as ssl_cookie_free;
pub use sys::mbedtls_ssl_cookie_init as ssl_cookie_init;
pub use sys::mbedtls_ssl_cookie_set_timeout as ssl_cookie_set_timeout;
pub use sys::mbedtls_ssl_cookie_setup as ssl_cookie_setup;
pub use sys::mbedtls_ssl_cookie_write as ssl_cookie_write;
pub use sys::mbedtls_ssl_dtls_srtp_set_mki_value as ssl_dtls_srtp_set_mki_value;
pub use sys::mbedtls_ssl_free as ssl_free;
pub use sys::mbedtls_ssl_get_alpn_protocol as ssl_get_alpn_protocol;
pub use sys::mbedtls_ssl_get_bytes_avail as ssl_get_bytes_avail;
pub use sys::mbedtls_ssl_get_ciphersuite as ssl_get_ciphersuite;
pub use sys::mbedtls_ssl_get_ciphersuite_id as ssl_get_ciphersuite_id;
pub use sys::mbedtls_ssl_get_ciphersuite_id_from_ssl as ssl_get_ciphersuite_id_from_ssl;
pub use sys::mbedtls_ssl_get_ciphersuite_name as ssl_get_ciphersuite_name;
pub use sys::mbedtls_ssl_get_ciphersuite_sig_alg as ssl_get_ciphersuite_sig_alg;
pub use sys::mbedtls_ssl_get_ciphersuite_sig_pk_alg as ssl_get_ciphersuite_sig_pk_alg;
pub use sys::mbedtls_ssl_get_dtls_srtp_negotiation_result as ssl_get_dtls_srtp_negotiation_result;
pub use sys::mbedtls_ssl_get_hs_sni as ssl_get_hs_sni;
pub use sys::mbedtls_ssl_get_max_in_record_payload as ssl_get_max_in_record_payload;
pub use sys::mbedtls_ssl_get_max_out_record_payload as ssl_get_max_out_record_payload;
pub use sys::mbedtls_ssl_get_peer_cert as ssl_get_peer_cert;
pub use sys::mbedtls_ssl_get_record_expansion as ssl_get_record_expansion;
pub use sys::mbedtls_ssl_get_session as ssl_get_session;
pub use sys::mbedtls_ssl_get_verify_result as ssl_get_verify_result;
pub use sys::mbedtls_ssl_get_version as ssl_get_version;
pub use sys::mbedtls_ssl_handshake as ssl_handshake;
pub use sys::mbedtls_ssl_handshake_step as ssl_handshake_step;
pub use sys::mbedtls_ssl_init as ssl_init;
pub use sys::mbedtls_ssl_list_ciphersuites as ssl_list_ciphersuites;
pub use sys::mbedtls_ssl_read as ssl_read;
pub use sys::mbedtls_ssl_renegotiate as ssl_renegotiate;
pub use sys::mbedtls_ssl_send_alert_message as ssl_send_alert_message;
pub use sys::mbedtls_ssl_session_free as ssl_session_free;
pub use sys::mbedtls_ssl_session_init as ssl_session_init;
pub use sys::mbedtls_ssl_session_load as ssl_session_load;
pub use sys::mbedtls_ssl_session_reset as ssl_session_reset;
pub use sys::mbedtls_ssl_session_save as ssl_session_save;
pub use sys::mbedtls_ssl_set_bio as ssl_set_bio;
pub use sys::mbedtls_ssl_set_client_transport_id as ssl_set_client_transport_id;
pub use sys::mbedtls_ssl_set_datagram_packing as ssl_set_datagram_packing;
pub use sys::mbedtls_ssl_set_export_keys_cb as ssl_set_export_keys_cb;
pub use sys::mbedtls_ssl_set_hostname as ssl_set_hostname;
pub use sys::mbedtls_ssl_set_hs_authmode as ssl_set_hs_authmode;
pub use sys::mbedtls_ssl_set_hs_ca_chain as ssl_set_hs_ca_chain;
pub use sys::mbedtls_ssl_set_hs_dn_hints as ssl_set_hs_dn_hints;
pub use sys::mbedtls_ssl_set_hs_ecjpake_password as ssl_set_hs_ecjpake_password;
pub use sys::mbedtls_ssl_set_hs_own_cert as ssl_set_hs_own_cert;
pub use sys::mbedtls_ssl_set_hs_psk as ssl_set_hs_psk;
pub use sys::mbedtls_ssl_set_mtu as ssl_set_mtu;
pub use sys::mbedtls_ssl_set_session as ssl_set_session;
pub use sys::mbedtls_ssl_set_timer_cb as ssl_set_timer_cb;
pub use sys::mbedtls_ssl_set_verify as ssl_set_verify;
pub use sys::mbedtls_ssl_setup as ssl_setup;
pub use sys::mbedtls_ssl_ticket_free as ssl_ticket_free;
pub use sys::mbedtls_ssl_ticket_init as ssl_ticket_init;
pub use sys::mbedtls_ssl_ticket_parse as ssl_ticket_parse;
pub use sys::mbedtls_ssl_ticket_rotate as ssl_ticket_rotate;
pub use sys::mbedtls_ssl_ticket_setup as ssl_ticket_setup;
pub use sys::mbedtls_ssl_ticket_write as ssl_ticket_write;
pub use sys::mbedtls_ssl_tls_prf as ssl_tls_prf;
pub use sys::mbedtls_ssl_write as ssl_write;
pub use sys::mbedtls_strerror as strerror;
pub use sys::mbedtls_timing_get_delay as timing_get_delay;
pub use sys::mbedtls_timing_get_final_delay as timing_get_final_delay;
pub use sys::mbedtls_timing_get_timer as timing_get_timer;
pub use sys::mbedtls_timing_set_delay as timing_set_delay;
pub use sys::mbedtls_version_check_feature as version_check_feature;
pub use sys::mbedtls_version_get_number as version_get_number;
pub use sys::mbedtls_version_get_string as version_get_string;
pub use sys::mbedtls_version_get_string_full as version_get_string_full;
pub use sys::mbedtls_x509_crl_free as x509_crl_free;
pub use sys::mbedtls_x509_crl_info as x509_crl_info;
pub use sys::mbedtls_x509_crl_init as x509_crl_init;
pub use sys::mbedtls_x509_crl_parse as x509_crl_parse;
pub use sys::mbedtls_x509_crl_parse_der as x509_crl_parse_der;
pub use sys::mbedtls_x509_crl_parse_file as x509_crl_parse_file;
pub use sys::mbedtls_x509_crt_check_extended_key_usage as x509_crt_check_extended_key_usage;
pub use sys::mbedtls_x509_crt_check_key_usage as x509_crt_check_key_usage;
pub use sys::mbedtls_x509_crt_free as x509_crt_free;
pub use sys::mbedtls_x509_crt_info as x509_crt_info;
pub use sys::mbedtls_x509_crt_init as x509_crt_init;
pub use sys::mbedtls_x509_crt_is_revoked as x509_crt_is_revoked;
pub use sys::mbedtls_x509_crt_parse as x509_crt_parse;
pub use sys::mbedtls_x509_crt_parse_der as x509_crt_parse_der;
pub use sys::mbedtls_x509_crt_parse_der_nocopy as x509_crt_parse_der_nocopy;
pub use sys::mbedtls_x509_crt_parse_der_with_ext_cb as x509_crt_parse_der_with_ext_cb;
pub use sys::mbedtls_x509_crt_parse_file as x509_crt_parse_file;
pub use sys::mbedtls_x509_crt_parse_path as x509_crt_parse_path;
pub use sys::mbedtls_x509_crt_verify as x509_crt_verify;
pub use sys::mbedtls_x509_crt_verify_info as x509_crt_verify_info;
pub use sys::mbedtls_x509_crt_verify_restartable as x509_crt_verify_restartable;
pub use sys::mbedtls_x509_crt_verify_with_ca_cb as x509_crt_verify_with_ca_cb;
pub use sys::mbedtls_x509_crt_verify_with_profile as x509_crt_verify_with_profile;
pub use sys::mbedtls_x509_csr_free as x509_csr_free;
pub use sys::mbedtls_x509_csr_info as x509_csr_info;
pub use sys::mbedtls_x509_csr_init as x509_csr_init;
pub use sys::mbedtls_x509_csr_parse as x509_csr_parse;
pub use sys::mbedtls_x509_csr_parse_der as x509_csr_parse_der;
pub use sys::mbedtls_x509_csr_parse_file as x509_csr_parse_file;
pub use sys::mbedtls_x509_dn_gets as x509_dn_gets;
pub use sys::mbedtls_x509_get_alg as x509_get_alg;
pub use sys::mbedtls_x509_get_alg_null as x509_get_alg_null;
pub use sys::mbedtls_x509_get_ext as x509_get_ext;
pub use sys::mbedtls_x509_get_name as x509_get_name;
pub use sys::mbedtls_x509_get_rsassa_pss_params as x509_get_rsassa_pss_params;
pub use sys::mbedtls_x509_get_serial as x509_get_serial;
pub use sys::mbedtls_x509_get_sig as x509_get_sig;
pub use sys::mbedtls_x509_get_sig_alg as x509_get_sig_alg;
pub use sys::mbedtls_x509_get_time as x509_get_time;
pub use sys::mbedtls_x509_key_size_helper as x509_key_size_helper;
pub use sys::mbedtls_x509_parse_subject_alt_name as x509_parse_subject_alt_name;
pub use sys::mbedtls_x509_serial_gets as x509_serial_gets;
pub use sys::mbedtls_x509_set_extension as x509_set_extension;
pub use sys::mbedtls_x509_sig_alg_gets as x509_sig_alg_gets;
pub use sys::mbedtls_x509_string_to_names as x509_string_to_names;
pub use sys::mbedtls_x509_time_is_future as x509_time_is_future;
pub use sys::mbedtls_x509_time_is_past as x509_time_is_past;
pub use sys::mbedtls_x509_write_extensions as x509_write_extensions;
pub use sys::mbedtls_x509_write_names as x509_write_names;
pub use sys::mbedtls_x509_write_sig as x509_write_sig;
pub use sys::mbedtls_x509write_crt_der as x509write_crt_der;
pub use sys::mbedtls_x509write_crt_free as x509write_crt_free;
pub use sys::mbedtls_x509write_crt_init as x509write_crt_init;
pub use sys::mbedtls_x509write_crt_pem as x509write_crt_pem;
pub use sys::mbedtls_x509write_crt_set_authority_key_identifier as x509write_crt_set_authority_key_identifier;
pub use sys::mbedtls_x509write_crt_set_basic_constraints as x509write_crt_set_basic_constraints;
pub use sys::mbedtls_x509write_crt_set_extension as x509write_crt_set_extension;
pub use sys::mbedtls_x509write_crt_set_issuer_key as x509write_crt_set_issuer_key;
pub use sys::mbedtls_x509write_crt_set_issuer_name as x509write_crt_set_issuer_name;
pub use sys::mbedtls_x509write_crt_set_key_usage as x509write_crt_set_key_usage;
pub use sys::mbedtls_x509write_crt_set_md_alg as x509write_crt_set_md_alg;
pub use sys::mbedtls_x509write_crt_set_ns_cert_type as x509write_crt_set_ns_cert_type;
#[cfg(not(esp_idf_version_full = "5.1.0"))]
pub use sys::mbedtls_x509write_crt_set_serial as x509write_crt_set_serial;
#[cfg(esp_idf_version_full = "5.1.0")]
pub use sys::mbedtls_x509write_crt_set_serial_raw as x509write_crt_set_serial_raw;
pub use sys::mbedtls_x509write_crt_set_subject_key as x509write_crt_set_subject_key;
pub use sys::mbedtls_x509write_crt_set_subject_key_identifier as x509write_crt_set_subject_key_identifier;
pub use sys::mbedtls_x509write_crt_set_subject_name as x509write_crt_set_subject_name;
pub use sys::mbedtls_x509write_crt_set_validity as x509write_crt_set_validity;
pub use sys::mbedtls_x509write_crt_set_version as x509write_crt_set_version;
pub use sys::mbedtls_x509write_csr_der as x509write_csr_der;
pub use sys::mbedtls_x509write_csr_free as x509write_csr_free;
pub use sys::mbedtls_x509write_csr_init as x509write_csr_init;
pub use sys::mbedtls_x509write_csr_pem as x509write_csr_pem;
pub use sys::mbedtls_x509write_csr_set_extension as x509write_csr_set_extension;
pub use sys::mbedtls_x509write_csr_set_key as x509write_csr_set_key;
pub use sys::mbedtls_x509write_csr_set_key_usage as x509write_csr_set_key_usage;
pub use sys::mbedtls_x509write_csr_set_md_alg as x509write_csr_set_md_alg;
pub use sys::mbedtls_x509write_csr_set_ns_cert_type as x509write_csr_set_ns_cert_type;
pub use sys::mbedtls_x509write_csr_set_subject_name as x509write_csr_set_subject_name;

pub use sys::mbedtls_aria_context as aria_context;
pub use sys::mbedtls_asn1_bitstring as asn1_bitstring;
pub use sys::mbedtls_asn1_buf as asn1_buf;
pub use sys::mbedtls_asn1_named_data as asn1_named_data;
pub use sys::mbedtls_asn1_sequence as asn1_sequence;
pub use sys::mbedtls_camellia_context as camellia_context;
pub use sys::mbedtls_ccm_context as ccm_context;
pub use sys::mbedtls_chacha20_context as chacha20_context;
pub use sys::mbedtls_chachapoly_context as chachapoly_context;
pub use sys::mbedtls_cipher_base_t as cipher_base_t;
pub use sys::mbedtls_cipher_context_t as cipher_context_t;
pub use sys::mbedtls_cipher_info_t as cipher_info_t;
pub use sys::mbedtls_cmac_context_t as cmac_context_t;
pub use sys::mbedtls_ctr_drbg_context as ctr_drbg_context;
pub use sys::mbedtls_des3_context as des3_context;
pub use sys::mbedtls_des_context as des_context;
pub use sys::mbedtls_dhm_context as dhm_context;
pub use sys::mbedtls_dtls_srtp_info_t as dtls_srtp_info_t;
pub use sys::mbedtls_ecdh_context as ecdh_context;
#[cfg(not(esp_idf_mbedtls_ecdh_legacy_context))]
pub use sys::mbedtls_ecdh_context_mbed as ecdh_context_mbed;
pub use sys::mbedtls_ecjpake_context as ecjpake_context;
pub use sys::mbedtls_ecp_curve_info as ecp_curve_info;
pub use sys::mbedtls_ecp_group as ecp_group;
pub use sys::mbedtls_ecp_keypair as ecp_keypair;
pub use sys::mbedtls_ecp_point as ecp_point;
pub use sys::mbedtls_entropy_context as entropy_context;
pub use sys::mbedtls_entropy_source_state as entropy_source_state;
pub use sys::mbedtls_gcm_context as gcm_context;
pub use sys::mbedtls_hmac_drbg_context as hmac_drbg_context;
pub use sys::mbedtls_md_context_t as md_context_t;
pub use sys::mbedtls_md_info_t as md_info_t;
pub use sys::mbedtls_mpi as mpi;
pub use sys::mbedtls_net_context as net_context;
pub use sys::mbedtls_nist_kw_context as nist_kw_context;
pub use sys::mbedtls_oid_descriptor_t as oid_descriptor_t;
pub use sys::mbedtls_pem_context as pem_context;
pub use sys::mbedtls_pk_context as pk_context;
pub use sys::mbedtls_pk_debug_item as pk_debug_item;
pub use sys::mbedtls_pk_info_t as pk_info_t;
pub use sys::mbedtls_pk_rsassa_pss_options as pk_rsassa_pss_options;
pub use sys::mbedtls_platform_context as platform_context;
pub use sys::mbedtls_poly1305_context as poly1305_context;
pub use sys::mbedtls_psa_aead_operation_t as psa_aead_operation_t;
pub use sys::mbedtls_psa_cipher_operation_t as psa_cipher_operation_t;
pub use sys::mbedtls_psa_hash_operation_t as psa_hash_operation_t;
pub use sys::mbedtls_psa_hmac_operation_t as psa_hmac_operation_t;
pub use sys::mbedtls_psa_mac_operation_t as psa_mac_operation_t;
pub use sys::mbedtls_psa_stats_s as psa_stats_s;
pub use sys::mbedtls_ripemd160_context as ripemd160_context;
pub use sys::mbedtls_rsa_context as rsa_context;
pub use sys::mbedtls_sha1_context as sha1_context;
pub use sys::mbedtls_sha256_context as sha256_context;
pub use sys::mbedtls_sha512_context as sha512_context;
pub use sys::mbedtls_ssl_cache_context as ssl_cache_context;
pub use sys::mbedtls_ssl_cache_entry as ssl_cache_entry;
pub use sys::mbedtls_ssl_ciphersuite_t as ssl_ciphersuite_t;
pub use sys::mbedtls_ssl_config as ssl_config;
pub use sys::mbedtls_ssl_context as ssl_context;
pub use sys::mbedtls_ssl_cookie_ctx as ssl_cookie_ctx;
pub use sys::mbedtls_ssl_flight_item as ssl_flight_item;
pub use sys::mbedtls_ssl_handshake_params as ssl_handshake_params;
pub use sys::mbedtls_ssl_key_cert as ssl_key_cert;
pub use sys::mbedtls_ssl_session as ssl_session;
pub use sys::mbedtls_ssl_sig_hash_set_t as ssl_sig_hash_set_t;
pub use sys::mbedtls_ssl_ticket_context as ssl_ticket_context;
pub use sys::mbedtls_ssl_ticket_key as ssl_ticket_key;
pub use sys::mbedtls_ssl_tls13_application_secrets as ssl_tls13_application_secrets;
pub use sys::mbedtls_ssl_transform as ssl_transform;
pub use sys::mbedtls_timing_delay_context as timing_delay_context;
pub use sys::mbedtls_timing_hr_time as timing_hr_time;
pub use sys::mbedtls_x509_crl as x509_crl;
pub use sys::mbedtls_x509_crl_entry as x509_crl_entry;
pub use sys::mbedtls_x509_crt as x509_crt;
pub use sys::mbedtls_x509_crt_profile as x509_crt_profile;
pub use sys::mbedtls_x509_crt_verify_chain as x509_crt_verify_chain;
pub use sys::mbedtls_x509_crt_verify_chain_item as x509_crt_verify_chain_item;
pub use sys::mbedtls_x509_csr as x509_csr;
pub use sys::mbedtls_x509_san_other_name as x509_san_other_name;
pub use sys::mbedtls_x509_san_other_name__bindgen_ty_1__bindgen_ty_1 as x509_san_other_name__bindgen_ty_1__bindgen_ty_1;
pub use sys::mbedtls_x509_subject_alternative_name as x509_subject_alternative_name;
pub use sys::mbedtls_x509_time as x509_time;
pub use sys::mbedtls_x509write_cert as x509write_cert;
pub use sys::mbedtls_x509write_csr as x509write_csr;

// pub use sys::mbedtls_aes_context as aes_context;
// pub use sys::mbedtls_aes_xts_context as aes_xts_context;
pub use sys::mbedtls_chachapoly_mode_t as chachapoly_mode_t;
pub use sys::mbedtls_cipher_id_t as cipher_id_t;
pub use sys::mbedtls_cipher_mode_t as cipher_mode_t;
pub use sys::mbedtls_cipher_padding_t as cipher_padding_t;
pub use sys::mbedtls_cipher_type_t as cipher_type_t;
pub use sys::mbedtls_debug_ecdh_attr as debug_ecdh_attr;
pub use sys::mbedtls_dhm_parameter as dhm_parameter;
pub use sys::mbedtls_dtls_srtp_info as dtls_srtp_info;
pub use sys::mbedtls_ecdh_side as ecdh_side;
#[cfg(not(esp_idf_mbedtls_ecdh_legacy_context))]
pub use sys::mbedtls_ecdh_variant as ecdh_variant;
pub use sys::mbedtls_ecdsa_context as ecdsa_context;
pub use sys::mbedtls_ecdsa_restart_ctx as ecdsa_restart_ctx;
pub use sys::mbedtls_ecjpake_role as ecjpake_role;
pub use sys::mbedtls_ecp_curve_type as ecp_curve_type;
pub use sys::mbedtls_ecp_group_id as ecp_group_id;
pub use sys::mbedtls_ecp_restart_ctx as ecp_restart_ctx;
pub use sys::mbedtls_entropy_f_source_ptr as entropy_f_source_ptr;
pub use sys::mbedtls_f_rng_t as f_rng_t;
pub use sys::mbedtls_iso_c_forbids_empty_translation_units as iso_c_forbids_empty_translation_units;
pub use sys::mbedtls_key_exchange_type_t as key_exchange_type_t;
pub use sys::mbedtls_md5_context as md5_context;
pub use sys::mbedtls_md_type_t as md_type_t;
pub use sys::mbedtls_mpi_gen_prime_flag_t as mpi_gen_prime_flag_t;
pub use sys::mbedtls_mpi_sint as mpi_sint;
pub use sys::mbedtls_mpi_uint as mpi_uint;
pub use sys::mbedtls_nist_kw_mode_t as nist_kw_mode_t;
pub use sys::mbedtls_operation_t as operation_t;
pub use sys::mbedtls_pk_debug_type as pk_debug_type;
pub use sys::mbedtls_pk_restart_ctx as pk_restart_ctx;
pub use sys::mbedtls_pk_rsa_alt_decrypt_func as pk_rsa_alt_decrypt_func;
pub use sys::mbedtls_pk_rsa_alt_key_len_func as pk_rsa_alt_key_len_func;
pub use sys::mbedtls_pk_rsa_alt_sign_func as pk_rsa_alt_sign_func;
pub use sys::mbedtls_pk_type_t as pk_type_t;
pub use sys::mbedtls_psa_drbg_context_t as psa_drbg_context_t;
pub use sys::mbedtls_psa_stats_t as psa_stats_t;
pub use sys::mbedtls_ssl_cache_get_t as ssl_cache_get_t;
pub use sys::mbedtls_ssl_cache_set_t as ssl_cache_set_t;
pub use sys::mbedtls_ssl_cookie_check_t as ssl_cookie_check_t;
pub use sys::mbedtls_ssl_cookie_write_t as ssl_cookie_write_t;
pub use sys::mbedtls_ssl_export_keys_t as ssl_export_keys_t;
pub use sys::mbedtls_ssl_get_timer_t as ssl_get_timer_t;
pub use sys::mbedtls_ssl_hs_cb_t as ssl_hs_cb_t;
pub use sys::mbedtls_ssl_key_export_type as ssl_key_export_type;
pub use sys::mbedtls_ssl_protocol_version as ssl_protocol_version;
pub use sys::mbedtls_ssl_recv_t as ssl_recv_t;
pub use sys::mbedtls_ssl_recv_timeout_t as ssl_recv_timeout_t;
pub use sys::mbedtls_ssl_send_t as ssl_send_t;
pub use sys::mbedtls_ssl_set_timer_t as ssl_set_timer_t;
pub use sys::mbedtls_ssl_srtp_profile as ssl_srtp_profile;
pub use sys::mbedtls_ssl_states as ssl_states;
pub use sys::mbedtls_ssl_ticket_parse_t as ssl_ticket_parse_t;
pub use sys::mbedtls_ssl_ticket_write_t as ssl_ticket_write_t;
pub use sys::mbedtls_svc_key_id_t as svc_key_id_t;
pub use sys::mbedtls_t_udbl as t_udbl;
pub use sys::mbedtls_time_t as time_t;
pub use sys::mbedtls_tls_prf_types as tls_prf_types;
pub use sys::mbedtls_x509_bitstring as x509_bitstring;
pub use sys::mbedtls_x509_buf as x509_buf;
pub use sys::mbedtls_x509_crt_ca_cb_t as x509_crt_ca_cb_t;
pub use sys::mbedtls_x509_crt_ext_cb_t as x509_crt_ext_cb_t;
pub use sys::mbedtls_x509_crt_restart_ctx as x509_crt_restart_ctx;
pub use sys::mbedtls_x509_name as x509_name;
pub use sys::mbedtls_x509_sequence as x509_sequence;

pub use sys::mbedtls_psa_get_random as psa_get_random;
pub use sys::mbedtls_psa_random_state as psa_random_state;
pub use sys::mbedtls_x509_crt_profile_default as x509_crt_profile_default;
pub use sys::mbedtls_x509_crt_profile_next as x509_crt_profile_next;
pub use sys::mbedtls_x509_crt_profile_none as x509_crt_profile_none;
pub use sys::mbedtls_x509_crt_profile_suiteb as x509_crt_profile_suiteb;

pub use sys::mbedtls_chachapoly_mode_t_MBEDTLS_CHACHAPOLY_DECRYPT as CHACHAPOLY_DECRYPT;
pub use sys::mbedtls_chachapoly_mode_t_MBEDTLS_CHACHAPOLY_ENCRYPT as CHACHAPOLY_ENCRYPT;
pub use sys::mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_3DES as CIPHER_ID_3DES;
pub use sys::mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_AES as CIPHER_ID_AES;
pub use sys::mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_ARIA as CIPHER_ID_ARIA;
pub use sys::mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_CAMELLIA as CIPHER_ID_CAMELLIA;
pub use sys::mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_CHACHA20 as CIPHER_ID_CHACHA20;
pub use sys::mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_DES as CIPHER_ID_DES;
pub use sys::mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_NONE as CIPHER_ID_NONE;
pub use sys::mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_NULL as CIPHER_ID_NULL;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_CBC as MODE_CBC;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_CCM as MODE_CCM;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_CCM_STAR_NO_TAG as MODE_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_CFB as MODE_CFB;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_CHACHAPOLY as MODE_CHACHAPOLY;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_CTR as MODE_CTR;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_ECB as MODE_ECB;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_GCM as MODE_GCM;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_KW as MODE_KW;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_KWP as MODE_KWP;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_NONE as MODE_NONE;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_OFB as MODE_OFB;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_STREAM as MODE_STREAM;
pub use sys::mbedtls_cipher_mode_t_MBEDTLS_MODE_XTS as MODE_XTS;
pub use sys::mbedtls_cipher_padding_t_MBEDTLS_PADDING_NONE as PADDING_NONE;
pub use sys::mbedtls_cipher_padding_t_MBEDTLS_PADDING_ONE_AND_ZEROS as PADDING_ONE_AND_ZEROS;
pub use sys::mbedtls_cipher_padding_t_MBEDTLS_PADDING_PKCS7 as PADDING_PKCS7;
pub use sys::mbedtls_cipher_padding_t_MBEDTLS_PADDING_ZEROS as PADDING_ZEROS;
pub use sys::mbedtls_cipher_padding_t_MBEDTLS_PADDING_ZEROS_AND_LEN as PADDING_ZEROS_AND_LEN;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CBC as CIPHER_AES_128_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CCM as CIPHER_AES_128_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CCM_STAR_NO_TAG as CIPHER_AES_128_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CFB128 as CIPHER_AES_128_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CTR as CIPHER_AES_128_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_ECB as CIPHER_AES_128_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_GCM as CIPHER_AES_128_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_KW as CIPHER_AES_128_KW;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_KWP as CIPHER_AES_128_KWP;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_OFB as CIPHER_AES_128_OFB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_XTS as CIPHER_AES_128_XTS;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CBC as CIPHER_AES_192_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CCM as CIPHER_AES_192_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CCM_STAR_NO_TAG as CIPHER_AES_192_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CFB128 as CIPHER_AES_192_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CTR as CIPHER_AES_192_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_ECB as CIPHER_AES_192_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_GCM as CIPHER_AES_192_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_KW as CIPHER_AES_192_KW;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_KWP as CIPHER_AES_192_KWP;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_OFB as CIPHER_AES_192_OFB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CBC as CIPHER_AES_256_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CCM as CIPHER_AES_256_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CCM_STAR_NO_TAG as CIPHER_AES_256_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CFB128 as CIPHER_AES_256_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CTR as CIPHER_AES_256_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_ECB as CIPHER_AES_256_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_GCM as CIPHER_AES_256_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_KW as CIPHER_AES_256_KW;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_KWP as CIPHER_AES_256_KWP;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_OFB as CIPHER_AES_256_OFB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_XTS as CIPHER_AES_256_XTS;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CBC as CIPHER_ARIA_128_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CCM as CIPHER_ARIA_128_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CCM_STAR_NO_TAG as CIPHER_ARIA_128_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CFB128 as CIPHER_ARIA_128_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CTR as CIPHER_ARIA_128_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_ECB as CIPHER_ARIA_128_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_GCM as CIPHER_ARIA_128_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CBC as CIPHER_ARIA_192_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CCM as CIPHER_ARIA_192_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CCM_STAR_NO_TAG as CIPHER_ARIA_192_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CFB128 as CIPHER_ARIA_192_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CTR as CIPHER_ARIA_192_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_ECB as CIPHER_ARIA_192_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_GCM as CIPHER_ARIA_192_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CBC as CIPHER_ARIA_256_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CCM as CIPHER_ARIA_256_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CCM_STAR_NO_TAG as CIPHER_ARIA_256_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CFB128 as CIPHER_ARIA_256_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CTR as CIPHER_ARIA_256_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_ECB as CIPHER_ARIA_256_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_GCM as CIPHER_ARIA_256_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CBC as CIPHER_CAMELLIA_128_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CCM as CIPHER_CAMELLIA_128_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CCM_STAR_NO_TAG as CIPHER_CAMELLIA_128_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CFB128 as CIPHER_CAMELLIA_128_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CTR as CIPHER_CAMELLIA_128_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_ECB as CIPHER_CAMELLIA_128_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_GCM as CIPHER_CAMELLIA_128_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CBC as CIPHER_CAMELLIA_192_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CCM as CIPHER_CAMELLIA_192_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CCM_STAR_NO_TAG as CIPHER_CAMELLIA_192_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CFB128 as CIPHER_CAMELLIA_192_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CTR as CIPHER_CAMELLIA_192_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_ECB as CIPHER_CAMELLIA_192_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_GCM as CIPHER_CAMELLIA_192_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CBC as CIPHER_CAMELLIA_256_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CCM as CIPHER_CAMELLIA_256_CCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CCM_STAR_NO_TAG as CIPHER_CAMELLIA_256_CCM_STAR_NO_TAG;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CFB128 as CIPHER_CAMELLIA_256_CFB128;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CTR as CIPHER_CAMELLIA_256_CTR;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_ECB as CIPHER_CAMELLIA_256_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_GCM as CIPHER_CAMELLIA_256_GCM;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CHACHA20 as CIPHER_CHACHA20;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_CHACHA20_POLY1305 as CIPHER_CHACHA20_POLY1305;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_CBC as CIPHER_DES_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_ECB as CIPHER_DES_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_EDE3_CBC as CIPHER_DES_EDE3_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_EDE3_ECB as CIPHER_DES_EDE3_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_EDE_CBC as CIPHER_DES_EDE_CBC;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_EDE_ECB as CIPHER_DES_EDE_ECB;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_NONE as CIPHER_NONE;
pub use sys::mbedtls_cipher_type_t_MBEDTLS_CIPHER_NULL as CIPHER_NULL;
pub use sys::mbedtls_debug_ecdh_attr_MBEDTLS_DEBUG_ECDH_Q as DEBUG_ECDH_Q;
pub use sys::mbedtls_debug_ecdh_attr_MBEDTLS_DEBUG_ECDH_QP as DEBUG_ECDH_QP;
pub use sys::mbedtls_debug_ecdh_attr_MBEDTLS_DEBUG_ECDH_Z as DEBUG_ECDH_Z;
pub use sys::mbedtls_dhm_parameter_MBEDTLS_DHM_PARAM_G as DHM_PARAM_G;
pub use sys::mbedtls_dhm_parameter_MBEDTLS_DHM_PARAM_GX as DHM_PARAM_GX;
pub use sys::mbedtls_dhm_parameter_MBEDTLS_DHM_PARAM_GY as DHM_PARAM_GY;
pub use sys::mbedtls_dhm_parameter_MBEDTLS_DHM_PARAM_K as DHM_PARAM_K;
pub use sys::mbedtls_dhm_parameter_MBEDTLS_DHM_PARAM_P as DHM_PARAM_P;
pub use sys::mbedtls_dhm_parameter_MBEDTLS_DHM_PARAM_X as DHM_PARAM_X;
pub use sys::mbedtls_ecdh_side_MBEDTLS_ECDH_OURS as ECDH_OURS;
pub use sys::mbedtls_ecdh_side_MBEDTLS_ECDH_THEIRS as ECDH_THEIRS;
#[cfg(not(esp_idf_mbedtls_ecdh_legacy_context))]
pub use sys::mbedtls_ecdh_variant_MBEDTLS_ECDH_VARIANT_MBEDTLS_2_0 as ECDH_VARIANT_MBEDTLS_2_0;
#[cfg(not(esp_idf_mbedtls_ecdh_legacy_context))]
pub use sys::mbedtls_ecdh_variant_MBEDTLS_ECDH_VARIANT_NONE as ECDH_VARIANT_NONE;
pub use sys::mbedtls_ecjpake_role_MBEDTLS_ECJPAKE_CLIENT as ECJPAKE_CLIENT;
pub use sys::mbedtls_ecjpake_role_MBEDTLS_ECJPAKE_SERVER as ECJPAKE_SERVER;
pub use sys::mbedtls_ecp_curve_type_MBEDTLS_ECP_TYPE_MONTGOMERY as ECP_TYPE_MONTGOMERY;
pub use sys::mbedtls_ecp_curve_type_MBEDTLS_ECP_TYPE_NONE as ECP_TYPE_NONE;
pub use sys::mbedtls_ecp_curve_type_MBEDTLS_ECP_TYPE_SHORT_WEIERSTRASS as ECP_TYPE_SHORT_WEIERSTRASS;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_BP256R1 as ECP_DP_BP256R1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_BP384R1 as ECP_DP_BP384R1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_BP512R1 as ECP_DP_BP512R1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_CURVE25519 as ECP_DP_CURVE25519;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_CURVE448 as ECP_DP_CURVE448;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_NONE as ECP_DP_NONE;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP192K1 as ECP_DP_SECP192K1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP192R1 as ECP_DP_SECP192R1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP224K1 as ECP_DP_SECP224K1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP224R1 as ECP_DP_SECP224R1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP256K1 as ECP_DP_SECP256K1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP256R1 as ECP_DP_SECP256R1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP384R1 as ECP_DP_SECP384R1;
pub use sys::mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP521R1 as ECP_DP_SECP521R1;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_DHE_PSK as KEY_EXCHANGE_DHE_PSK;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_DHE_RSA as KEY_EXCHANGE_DHE_RSA;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA as KEY_EXCHANGE_ECDHE_ECDSA;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDHE_PSK as KEY_EXCHANGE_ECDHE_PSK;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA as KEY_EXCHANGE_ECDHE_RSA;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA as KEY_EXCHANGE_ECDH_ECDSA;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDH_RSA as KEY_EXCHANGE_ECDH_RSA;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECJPAKE as KEY_EXCHANGE_ECJPAKE;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_NONE as KEY_EXCHANGE_NONE;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_PSK as KEY_EXCHANGE_PSK;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_RSA as KEY_EXCHANGE_RSA;
pub use sys::mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_RSA_PSK as KEY_EXCHANGE_RSA_PSK;
pub use sys::mbedtls_md_type_t_MBEDTLS_MD_MD5 as MD_MD5;
pub use sys::mbedtls_md_type_t_MBEDTLS_MD_NONE as MD_NONE;
pub use sys::mbedtls_md_type_t_MBEDTLS_MD_RIPEMD160 as MD_RIPEMD160;
pub use sys::mbedtls_md_type_t_MBEDTLS_MD_SHA1 as MD_SHA1;
pub use sys::mbedtls_md_type_t_MBEDTLS_MD_SHA224 as MD_SHA224;
pub use sys::mbedtls_md_type_t_MBEDTLS_MD_SHA256 as MD_SHA256;
pub use sys::mbedtls_md_type_t_MBEDTLS_MD_SHA384 as MD_SHA384;
pub use sys::mbedtls_md_type_t_MBEDTLS_MD_SHA512 as MD_SHA512;
pub use sys::mbedtls_mpi_gen_prime_flag_t_MBEDTLS_MPI_GEN_PRIME_FLAG_DH as MPI_GEN_PRIME_FLAG_DH;
pub use sys::mbedtls_mpi_gen_prime_flag_t_MBEDTLS_MPI_GEN_PRIME_FLAG_LOW_ERR as MPI_GEN_PRIME_FLAG_LOW_ERR;
pub use sys::mbedtls_nist_kw_mode_t_MBEDTLS_KW_MODE_KW as KW_MODE_KW;
pub use sys::mbedtls_nist_kw_mode_t_MBEDTLS_KW_MODE_KWP as KW_MODE_KWP;
pub use sys::mbedtls_operation_t_MBEDTLS_DECRYPT as DECRYPT;
pub use sys::mbedtls_operation_t_MBEDTLS_ENCRYPT as ENCRYPT;
pub use sys::mbedtls_operation_t_MBEDTLS_OPERATION_NONE as OPERATION_NONE;
pub use sys::mbedtls_pk_debug_type_MBEDTLS_PK_DEBUG_ECP as PK_DEBUG_ECP;
pub use sys::mbedtls_pk_debug_type_MBEDTLS_PK_DEBUG_MPI as PK_DEBUG_MPI;
pub use sys::mbedtls_pk_debug_type_MBEDTLS_PK_DEBUG_NONE as PK_DEBUG_NONE;
pub use sys::mbedtls_pk_type_t_MBEDTLS_PK_ECDSA as PK_ECDSA;
pub use sys::mbedtls_pk_type_t_MBEDTLS_PK_ECKEY as PK_ECKEY;
pub use sys::mbedtls_pk_type_t_MBEDTLS_PK_ECKEY_DH as PK_ECKEY_DH;
pub use sys::mbedtls_pk_type_t_MBEDTLS_PK_NONE as PK_NONE;
pub use sys::mbedtls_pk_type_t_MBEDTLS_PK_OPAQUE as PK_OPAQUE;
pub use sys::mbedtls_pk_type_t_MBEDTLS_PK_RSA as PK_RSA;
pub use sys::mbedtls_pk_type_t_MBEDTLS_PK_RSASSA_PSS as PK_RSASSA_PSS;
pub use sys::mbedtls_pk_type_t_MBEDTLS_PK_RSA_ALT as PK_RSA_ALT;
pub use sys::mbedtls_ssl_key_export_type_MBEDTLS_SSL_KEY_EXPORT_TLS12_MASTER_SECRET as SSL_KEY_EXPORT_TLS12_MASTER_SECRET;
// pub use sys::mbedtls_ssl_key_export_type_MBEDTLS_SSL_KEY_EXPORT_TLS1_3_CLIENT_APPLICATION_TRAFFIC_SECRET as SSL_KEY_EXPORT_TLS1_3_CLIENT_APPLICATION_TRAFFIC_SECRET;
// pub use sys::mbedtls_ssl_key_export_type_MBEDTLS_SSL_KEY_EXPORT_TLS1_3_CLIENT_EARLY_SECRET as SSL_KEY_EXPORT_TLS1_3_CLIENT_EARLY_SECRET;
// pub use sys::mbedtls_ssl_key_export_type_MBEDTLS_SSL_KEY_EXPORT_TLS1_3_CLIENT_HANDSHAKE_TRAFFIC_SECRET as SSL_KEY_EXPORT_TLS1_3_CLIENT_HANDSHAKE_TRAFFIC_SECRET;
// pub use sys::mbedtls_ssl_key_export_type_MBEDTLS_SSL_KEY_EXPORT_TLS1_3_EARLY_EXPORTER_SECRET as SSL_KEY_EXPORT_TLS1_3_EARLY_EXPORTER_SECRET;
// pub use sys::mbedtls_ssl_key_export_type_MBEDTLS_SSL_KEY_EXPORT_TLS1_3_SERVER_APPLICATION_TRAFFIC_SECRET as SSL_KEY_EXPORT_TLS1_3_SERVER_APPLICATION_TRAFFIC_SECRET;
// pub use sys::mbedtls_ssl_key_export_type_MBEDTLS_SSL_KEY_EXPORT_TLS1_3_SERVER_HANDSHAKE_TRAFFIC_SECRET as SSL_KEY_EXPORT_TLS1_3_SERVER_HANDSHAKE_TRAFFIC_SECRET;
pub use sys::mbedtls_ssl_protocol_version_MBEDTLS_SSL_VERSION_TLS1_2 as SSL_VERSION_TLS1_2;
pub use sys::mbedtls_ssl_protocol_version_MBEDTLS_SSL_VERSION_TLS1_3 as SSL_VERSION_TLS1_3;
pub use sys::mbedtls_ssl_protocol_version_MBEDTLS_SSL_VERSION_UNKNOWN as SSL_VERSION_UNKNOWN;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CERTIFICATE_REQUEST as SSL_CERTIFICATE_REQUEST;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CERTIFICATE_VERIFY as SSL_CERTIFICATE_VERIFY;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_CCS_AFTER_SERVER_FINISHED as SSL_CLIENT_CCS_AFTER_SERVER_FINISHED;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_CCS_BEFORE_2ND_CLIENT_HELLO as SSL_CLIENT_CCS_BEFORE_2ND_CLIENT_HELLO;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_CERTIFICATE as SSL_CLIENT_CERTIFICATE;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_CERTIFICATE_VERIFY as SSL_CLIENT_CERTIFICATE_VERIFY;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_CHANGE_CIPHER_SPEC as SSL_CLIENT_CHANGE_CIPHER_SPEC;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_FINISHED as SSL_CLIENT_FINISHED;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_HELLO as SSL_CLIENT_HELLO;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_KEY_EXCHANGE as SSL_CLIENT_KEY_EXCHANGE;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_ENCRYPTED_EXTENSIONS as SSL_ENCRYPTED_EXTENSIONS;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_FLUSH_BUFFERS as SSL_FLUSH_BUFFERS;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_HANDSHAKE_OVER as SSL_HANDSHAKE_OVER;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_HANDSHAKE_WRAPUP as SSL_HANDSHAKE_WRAPUP;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_HELLO_REQUEST as SSL_HELLO_REQUEST;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_HELLO_RETRY_REQUEST as SSL_HELLO_RETRY_REQUEST;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_CCS_AFTER_HELLO_RETRY_REQUEST as SSL_SERVER_CCS_AFTER_HELLO_RETRY_REQUEST;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_CCS_AFTER_SERVER_HELLO as SSL_SERVER_CCS_AFTER_SERVER_HELLO;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_CERTIFICATE as SSL_SERVER_CERTIFICATE;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC as SSL_SERVER_CHANGE_CIPHER_SPEC;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_FINISHED as SSL_SERVER_FINISHED;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_HELLO as SSL_SERVER_HELLO;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_HELLO_DONE as SSL_SERVER_HELLO_DONE;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_HELLO_VERIFY_REQUEST_SENT as SSL_SERVER_HELLO_VERIFY_REQUEST_SENT;
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_KEY_EXCHANGE as SSL_SERVER_KEY_EXCHANGE;
#[cfg(not(any(esp_idf_version_full = "5.0.2", esp_idf_version_full = "5.1.0")))]
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET as SSL_SERVER_NEW_SESSION_TICKET;
#[cfg(not(esp_idf_version_minor = "0"))]
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_TLS1_3_NEW_SESSION_TICKET as SSL_SERVER_NEW_SESSION_TICKETSSL_TLS1_3_NEW_SESSION_TICKET;
#[cfg(not(esp_idf_version_minor = "0"))]
pub use sys::mbedtls_ssl_states_MBEDTLS_SSL_TLS1_3_NEW_SESSION_TICKET_FLUSH as SSL_SERVER_NEW_SESSION_TICKETSSL_TLS1_3_NEW_SESSION_TICKET_FLUSH;
pub use sys::mbedtls_tls_prf_types_MBEDTLS_SSL_HKDF_EXPAND_SHA256 as SSL_HKDF_EXPAND_SHA256;
pub use sys::mbedtls_tls_prf_types_MBEDTLS_SSL_HKDF_EXPAND_SHA384 as SSL_HKDF_EXPAND_SHA384;
pub use sys::mbedtls_tls_prf_types_MBEDTLS_SSL_TLS_PRF_NONE as SSL_TLS_PRF_NONE;
pub use sys::mbedtls_tls_prf_types_MBEDTLS_SSL_TLS_PRF_SHA256 as SSL_TLS_PRF_SHA256;
pub use sys::mbedtls_tls_prf_types_MBEDTLS_SSL_TLS_PRF_SHA384 as SSL_TLS_PRF_SHA384;

pub const VERSION_MAJOR: i32 = sys::MBEDTLS_VERSION_MAJOR as i32;
pub const VERSION_MINOR: i32 = sys::MBEDTLS_VERSION_MINOR as i32;
pub const VERSION_PATCH: i32 = sys::MBEDTLS_VERSION_PATCH as i32;
pub const VERSION_NUMBER: i32 = sys::MBEDTLS_VERSION_NUMBER as i32;
pub const SSL_IN_CONTENT_LEN: i32 = sys::MBEDTLS_SSL_IN_CONTENT_LEN as i32;
pub const SSL_OUT_CONTENT_LEN: i32 = sys::MBEDTLS_SSL_OUT_CONTENT_LEN as i32;
pub const MPI_MAX_LIMBS: i32 = sys::MBEDTLS_MPI_MAX_LIMBS as i32;
pub const MPI_WINDOW_SIZE: i32 = sys::MBEDTLS_MPI_WINDOW_SIZE as i32;
pub const MPI_MAX_SIZE: i32 = sys::MBEDTLS_MPI_MAX_SIZE as i32;
pub const MPI_MAX_BITS: i32 = sys::MBEDTLS_MPI_MAX_BITS as i32;
pub const MPI_MAX_BITS_SCALE100: i32 = sys::MBEDTLS_MPI_MAX_BITS_SCALE100 as i32;
pub const LN_2_DIV_LN_10_SCALE100: i32 = sys::MBEDTLS_LN_2_DIV_LN_10_SCALE100 as i32;
pub const MPI_RW_BUFFER_SIZE: i32 = sys::MBEDTLS_MPI_RW_BUFFER_SIZE as i32;
pub const ECP_DP_MAX: i32 = sys::MBEDTLS_ECP_DP_MAX as i32;
pub const ECP_WINDOW_SIZE: i32 = sys::MBEDTLS_ECP_WINDOW_SIZE as i32;
pub const ECP_FIXED_POINT_OPTIM: i32 = sys::MBEDTLS_ECP_FIXED_POINT_OPTIM as i32;
pub const ECP_MAX_BITS: i32 = sys::MBEDTLS_ECP_MAX_BITS as i32;
pub const ECP_MAX_BYTES: i32 = sys::MBEDTLS_ECP_MAX_BYTES as i32;
pub const ECP_MAX_PT_LEN: i32 = sys::MBEDTLS_ECP_MAX_PT_LEN as i32;
pub const ECP_PF_UNCOMPRESSED: i32 = sys::MBEDTLS_ECP_PF_UNCOMPRESSED as i32;
pub const ECP_PF_COMPRESSED: i32 = sys::MBEDTLS_ECP_PF_COMPRESSED as i32;
pub const ECP_TLS_NAMED_CURVE: i32 = sys::MBEDTLS_ECP_TLS_NAMED_CURVE as i32;
pub const MD_MAX_SIZE: i32 = sys::MBEDTLS_MD_MAX_SIZE as i32;
pub const MD_MAX_BLOCK_SIZE: i32 = sys::MBEDTLS_MD_MAX_BLOCK_SIZE as i32;
pub const RSA_PKCS_V15: i32 = sys::MBEDTLS_RSA_PKCS_V15 as i32;
pub const RSA_PKCS_V21: i32 = sys::MBEDTLS_RSA_PKCS_V21 as i32;
pub const RSA_SIGN: i32 = sys::MBEDTLS_RSA_SIGN as i32;
pub const RSA_CRYPT: i32 = sys::MBEDTLS_RSA_CRYPT as i32;
pub const PK_SIGNATURE_MAX_SIZE: i32 = sys::MBEDTLS_PK_SIGNATURE_MAX_SIZE as i32;
pub const PK_DEBUG_MAX_ITEMS: i32 = sys::MBEDTLS_PK_DEBUG_MAX_ITEMS as i32;
pub const CIPHER_VARIABLE_IV_LEN: i32 = sys::MBEDTLS_CIPHER_VARIABLE_IV_LEN as i32;
pub const CIPHER_VARIABLE_KEY_LEN: i32 = sys::MBEDTLS_CIPHER_VARIABLE_KEY_LEN as i32;
pub const MAX_IV_LENGTH: i32 = sys::MBEDTLS_MAX_IV_LENGTH as i32;
pub const MAX_BLOCK_LENGTH: i32 = sys::MBEDTLS_MAX_BLOCK_LENGTH as i32;
pub const MAX_KEY_LENGTH: i32 = sys::MBEDTLS_MAX_KEY_LENGTH as i32;
pub const TLS_RSA_WITH_NULL_MD5: i32 = sys::MBEDTLS_TLS_RSA_WITH_NULL_MD5 as i32;
pub const TLS_RSA_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_RSA_WITH_NULL_SHA as i32;
pub const TLS_PSK_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_PSK_WITH_NULL_SHA as i32;
pub const TLS_DHE_PSK_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA as i32;
pub const TLS_RSA_PSK_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA as i32;
pub const TLS_RSA_WITH_AES_128_CBC_SHA: i32 = sys::MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA as i32;
pub const TLS_DHE_RSA_WITH_AES_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA as i32;
pub const TLS_RSA_WITH_AES_256_CBC_SHA: i32 = sys::MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA as i32;
pub const TLS_DHE_RSA_WITH_AES_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA as i32;
pub const TLS_RSA_WITH_NULL_SHA256: i32 = sys::MBEDTLS_TLS_RSA_WITH_NULL_SHA256 as i32;
pub const TLS_RSA_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_RSA_WITH_AES_256_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA256 as i32;
pub const TLS_RSA_WITH_CAMELLIA_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA as i32;
pub const TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA as i32;
pub const TLS_DHE_RSA_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_DHE_RSA_WITH_AES_256_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 as i32;
pub const TLS_RSA_WITH_CAMELLIA_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA as i32;
pub const TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA as i32;
pub const TLS_PSK_WITH_AES_128_CBC_SHA: i32 = sys::MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA as i32;
pub const TLS_PSK_WITH_AES_256_CBC_SHA: i32 = sys::MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA as i32;
pub const TLS_DHE_PSK_WITH_AES_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA as i32;
pub const TLS_DHE_PSK_WITH_AES_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA as i32;
pub const TLS_RSA_PSK_WITH_AES_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA as i32;
pub const TLS_RSA_PSK_WITH_AES_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA as i32;
pub const TLS_RSA_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_RSA_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_DHE_RSA_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_DHE_RSA_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_PSK_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_PSK_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_DHE_PSK_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_DHE_PSK_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_RSA_PSK_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_RSA_PSK_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_PSK_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_PSK_WITH_AES_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA384 as i32;
pub const TLS_PSK_WITH_NULL_SHA256: i32 = sys::MBEDTLS_TLS_PSK_WITH_NULL_SHA256 as i32;
pub const TLS_PSK_WITH_NULL_SHA384: i32 = sys::MBEDTLS_TLS_PSK_WITH_NULL_SHA384 as i32;
pub const TLS_DHE_PSK_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_DHE_PSK_WITH_AES_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 as i32;
pub const TLS_DHE_PSK_WITH_NULL_SHA256: i32 = sys::MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA256 as i32;
pub const TLS_DHE_PSK_WITH_NULL_SHA384: i32 = sys::MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA384 as i32;
pub const TLS_RSA_PSK_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_RSA_PSK_WITH_AES_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 as i32;
pub const TLS_RSA_PSK_WITH_NULL_SHA256: i32 = sys::MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA256 as i32;
pub const TLS_RSA_PSK_WITH_NULL_SHA384: i32 = sys::MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA384 as i32;
pub const TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 as i32;
pub const TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 as i32;
pub const TLS_ECDH_ECDSA_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_NULL_SHA as i32;
pub const TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA as i32;
pub const TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA as i32;
pub const TLS_ECDHE_ECDSA_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_NULL_SHA as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA as i32;
pub const TLS_ECDH_RSA_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_ECDH_RSA_WITH_NULL_SHA as i32;
pub const TLS_ECDH_RSA_WITH_AES_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA as i32;
pub const TLS_ECDH_RSA_WITH_AES_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA as i32;
pub const TLS_ECDHE_RSA_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_ECDHE_RSA_WITH_NULL_SHA as i32;
pub const TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA as i32;
pub const TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 as i32;
pub const TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 as i32;
pub const TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 as i32;
pub const TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 as i32;
pub const TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 as i32;
pub const TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA as i32;
pub const TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA as i32;
pub const TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 as i32;
pub const TLS_ECDHE_PSK_WITH_NULL_SHA: i32 = sys::MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA as i32;
pub const TLS_ECDHE_PSK_WITH_NULL_SHA256: i32 = sys::MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA256 as i32;
pub const TLS_ECDHE_PSK_WITH_NULL_SHA384: i32 = sys::MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA384 as i32;
pub const TLS_RSA_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_RSA_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_RSA_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_RSA_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_PSK_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_PSK_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_PSK_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_PSK_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 as i32;
pub const TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 as i32;
pub const TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 as i32;
pub const TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 as i32;
pub const TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 as i32;
pub const TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 as i32;
pub const TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 as i32;
pub const TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 as i32;
pub const TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 as i32;
pub const TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 as i32;
pub const TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 as i32;
pub const TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 as i32;
pub const TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 as i32;
pub const TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 as i32;
pub const TLS_RSA_WITH_AES_128_CCM: i32 = sys::MBEDTLS_TLS_RSA_WITH_AES_128_CCM as i32;
pub const TLS_RSA_WITH_AES_256_CCM: i32 = sys::MBEDTLS_TLS_RSA_WITH_AES_256_CCM as i32;
pub const TLS_DHE_RSA_WITH_AES_128_CCM: i32 = sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CCM as i32;
pub const TLS_DHE_RSA_WITH_AES_256_CCM: i32 = sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CCM as i32;
pub const TLS_RSA_WITH_AES_128_CCM_8: i32 = sys::MBEDTLS_TLS_RSA_WITH_AES_128_CCM_8 as i32;
pub const TLS_RSA_WITH_AES_256_CCM_8: i32 = sys::MBEDTLS_TLS_RSA_WITH_AES_256_CCM_8 as i32;
pub const TLS_DHE_RSA_WITH_AES_128_CCM_8: i32 = sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CCM_8 as i32;
pub const TLS_DHE_RSA_WITH_AES_256_CCM_8: i32 = sys::MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CCM_8 as i32;
pub const TLS_PSK_WITH_AES_128_CCM: i32 = sys::MBEDTLS_TLS_PSK_WITH_AES_128_CCM as i32;
pub const TLS_PSK_WITH_AES_256_CCM: i32 = sys::MBEDTLS_TLS_PSK_WITH_AES_256_CCM as i32;
pub const TLS_DHE_PSK_WITH_AES_128_CCM: i32 = sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CCM as i32;
pub const TLS_DHE_PSK_WITH_AES_256_CCM: i32 = sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CCM as i32;
pub const TLS_PSK_WITH_AES_128_CCM_8: i32 = sys::MBEDTLS_TLS_PSK_WITH_AES_128_CCM_8 as i32;
pub const TLS_PSK_WITH_AES_256_CCM_8: i32 = sys::MBEDTLS_TLS_PSK_WITH_AES_256_CCM_8 as i32;
pub const TLS_DHE_PSK_WITH_AES_128_CCM_8: i32 = sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CCM_8 as i32;
pub const TLS_DHE_PSK_WITH_AES_256_CCM_8: i32 = sys::MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CCM_8 as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_128_CCM: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CCM as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_256_CCM: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CCM as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 as i32;
pub const TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 as i32;
pub const TLS_ECJPAKE_WITH_AES_128_CCM_8: i32 = sys::MBEDTLS_TLS_ECJPAKE_WITH_AES_128_CCM_8 as i32;
pub const TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 as i32;
pub const TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 as i32;
pub const TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 as i32;
pub const TLS_PSK_WITH_CHACHA20_POLY1305_SHA256: i32 =
    sys::MBEDTLS_TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 as i32;
pub const TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256: i32 =
    sys::MBEDTLS_TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 as i32;
pub const TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256: i32 =
    sys::MBEDTLS_TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 as i32;
pub const TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256: i32 =
    sys::MBEDTLS_TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 as i32;
pub const TLS1_3_AES_128_GCM_SHA256: i32 = sys::MBEDTLS_TLS1_3_AES_128_GCM_SHA256 as i32;
pub const TLS1_3_AES_256_GCM_SHA384: i32 = sys::MBEDTLS_TLS1_3_AES_256_GCM_SHA384 as i32;
pub const TLS1_3_CHACHA20_POLY1305_SHA256: i32 =
    sys::MBEDTLS_TLS1_3_CHACHA20_POLY1305_SHA256 as i32;
pub const TLS1_3_AES_128_CCM_SHA256: i32 = sys::MBEDTLS_TLS1_3_AES_128_CCM_SHA256 as i32;
pub const TLS1_3_AES_128_CCM_8_SHA256: i32 = sys::MBEDTLS_TLS1_3_AES_128_CCM_8_SHA256 as i32;
pub const CIPHERSUITE_WEAK: i32 = sys::MBEDTLS_CIPHERSUITE_WEAK as i32;
pub const CIPHERSUITE_SHORT_TAG: i32 = sys::MBEDTLS_CIPHERSUITE_SHORT_TAG as i32;
pub const CIPHERSUITE_NODTLS: i32 = sys::MBEDTLS_CIPHERSUITE_NODTLS as i32;
pub const ASN1_BOOLEAN: i32 = sys::MBEDTLS_ASN1_BOOLEAN as i32;
pub const ASN1_INTEGER: i32 = sys::MBEDTLS_ASN1_INTEGER as i32;
pub const ASN1_BIT_STRING: i32 = sys::MBEDTLS_ASN1_BIT_STRING as i32;
pub const ASN1_OCTET_STRING: i32 = sys::MBEDTLS_ASN1_OCTET_STRING as i32;
pub const ASN1_NULL: i32 = sys::MBEDTLS_ASN1_NULL as i32;
pub const ASN1_OID: i32 = sys::MBEDTLS_ASN1_OID as i32;
pub const ASN1_ENUMERATED: i32 = sys::MBEDTLS_ASN1_ENUMERATED as i32;
pub const ASN1_UTF8_STRING: i32 = sys::MBEDTLS_ASN1_UTF8_STRING as i32;
pub const ASN1_SEQUENCE: i32 = sys::MBEDTLS_ASN1_SEQUENCE as i32;
pub const ASN1_SET: i32 = sys::MBEDTLS_ASN1_SET as i32;
pub const ASN1_PRINTABLE_STRING: i32 = sys::MBEDTLS_ASN1_PRINTABLE_STRING as i32;
pub const ASN1_T61_STRING: i32 = sys::MBEDTLS_ASN1_T61_STRING as i32;
pub const ASN1_IA5_STRING: i32 = sys::MBEDTLS_ASN1_IA5_STRING as i32;
pub const ASN1_UTC_TIME: i32 = sys::MBEDTLS_ASN1_UTC_TIME as i32;
pub const ASN1_GENERALIZED_TIME: i32 = sys::MBEDTLS_ASN1_GENERALIZED_TIME as i32;
pub const ASN1_UNIVERSAL_STRING: i32 = sys::MBEDTLS_ASN1_UNIVERSAL_STRING as i32;
pub const ASN1_BMP_STRING: i32 = sys::MBEDTLS_ASN1_BMP_STRING as i32;
pub const ASN1_PRIMITIVE: i32 = sys::MBEDTLS_ASN1_PRIMITIVE as i32;
pub const ASN1_CONSTRUCTED: i32 = sys::MBEDTLS_ASN1_CONSTRUCTED as i32;
pub const ASN1_CONTEXT_SPECIFIC: i32 = sys::MBEDTLS_ASN1_CONTEXT_SPECIFIC as i32;
pub const ASN1_TAG_CLASS_MASK: i32 = sys::MBEDTLS_ASN1_TAG_CLASS_MASK as i32;
pub const ASN1_TAG_PC_MASK: i32 = sys::MBEDTLS_ASN1_TAG_PC_MASK as i32;
pub const ASN1_TAG_VALUE_MASK: i32 = sys::MBEDTLS_ASN1_TAG_VALUE_MASK as i32;
pub const X509_MAX_INTERMEDIATE_CA: i32 = sys::MBEDTLS_X509_MAX_INTERMEDIATE_CA as i32;
pub const X509_BADCERT_EXPIRED: i32 = sys::MBEDTLS_X509_BADCERT_EXPIRED as i32;
pub const X509_BADCERT_REVOKED: i32 = sys::MBEDTLS_X509_BADCERT_REVOKED as i32;
pub const X509_BADCERT_CN_MISMATCH: i32 = sys::MBEDTLS_X509_BADCERT_CN_MISMATCH as i32;
pub const X509_BADCERT_NOT_TRUSTED: i32 = sys::MBEDTLS_X509_BADCERT_NOT_TRUSTED as i32;
pub const X509_BADCRL_NOT_TRUSTED: i32 = sys::MBEDTLS_X509_BADCRL_NOT_TRUSTED as i32;
pub const X509_BADCRL_EXPIRED: i32 = sys::MBEDTLS_X509_BADCRL_EXPIRED as i32;
pub const X509_BADCERT_MISSING: i32 = sys::MBEDTLS_X509_BADCERT_MISSING as i32;
pub const X509_BADCERT_SKIP_VERIFY: i32 = sys::MBEDTLS_X509_BADCERT_SKIP_VERIFY as i32;
pub const X509_BADCERT_OTHER: i32 = sys::MBEDTLS_X509_BADCERT_OTHER as i32;
pub const X509_BADCERT_FUTURE: i32 = sys::MBEDTLS_X509_BADCERT_FUTURE as i32;
pub const X509_BADCRL_FUTURE: i32 = sys::MBEDTLS_X509_BADCRL_FUTURE as i32;
pub const X509_BADCERT_KEY_USAGE: i32 = sys::MBEDTLS_X509_BADCERT_KEY_USAGE as i32;
pub const X509_BADCERT_EXT_KEY_USAGE: i32 = sys::MBEDTLS_X509_BADCERT_EXT_KEY_USAGE as i32;
pub const X509_BADCERT_NS_CERT_TYPE: i32 = sys::MBEDTLS_X509_BADCERT_NS_CERT_TYPE as i32;
pub const X509_BADCERT_BAD_MD: i32 = sys::MBEDTLS_X509_BADCERT_BAD_MD as i32;
pub const X509_BADCERT_BAD_PK: i32 = sys::MBEDTLS_X509_BADCERT_BAD_PK as i32;
pub const X509_BADCERT_BAD_KEY: i32 = sys::MBEDTLS_X509_BADCERT_BAD_KEY as i32;
pub const X509_BADCRL_BAD_MD: i32 = sys::MBEDTLS_X509_BADCRL_BAD_MD as i32;
pub const X509_BADCRL_BAD_PK: i32 = sys::MBEDTLS_X509_BADCRL_BAD_PK as i32;
pub const X509_BADCRL_BAD_KEY: i32 = sys::MBEDTLS_X509_BADCRL_BAD_KEY as i32;
pub const X509_SAN_OTHER_NAME: i32 = sys::MBEDTLS_X509_SAN_OTHER_NAME as i32;
pub const X509_SAN_RFC822_NAME: i32 = sys::MBEDTLS_X509_SAN_RFC822_NAME as i32;
pub const X509_SAN_DNS_NAME: i32 = sys::MBEDTLS_X509_SAN_DNS_NAME as i32;
pub const X509_SAN_X400_ADDRESS_NAME: i32 = sys::MBEDTLS_X509_SAN_X400_ADDRESS_NAME as i32;
pub const X509_SAN_DIRECTORY_NAME: i32 = sys::MBEDTLS_X509_SAN_DIRECTORY_NAME as i32;
pub const X509_SAN_EDI_PARTY_NAME: i32 = sys::MBEDTLS_X509_SAN_EDI_PARTY_NAME as i32;
pub const X509_SAN_UNIFORM_RESOURCE_IDENTIFIER: i32 =
    sys::MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER as i32;
pub const X509_SAN_IP_ADDRESS: i32 = sys::MBEDTLS_X509_SAN_IP_ADDRESS as i32;
pub const X509_SAN_REGISTERED_ID: i32 = sys::MBEDTLS_X509_SAN_REGISTERED_ID as i32;
pub const X509_KU_DIGITAL_SIGNATURE: i32 = sys::MBEDTLS_X509_KU_DIGITAL_SIGNATURE as i32;
pub const X509_KU_NON_REPUDIATION: i32 = sys::MBEDTLS_X509_KU_NON_REPUDIATION as i32;
pub const X509_KU_KEY_ENCIPHERMENT: i32 = sys::MBEDTLS_X509_KU_KEY_ENCIPHERMENT as i32;
pub const X509_KU_DATA_ENCIPHERMENT: i32 = sys::MBEDTLS_X509_KU_DATA_ENCIPHERMENT as i32;
pub const X509_KU_KEY_AGREEMENT: i32 = sys::MBEDTLS_X509_KU_KEY_AGREEMENT as i32;
pub const X509_KU_KEY_CERT_SIGN: i32 = sys::MBEDTLS_X509_KU_KEY_CERT_SIGN as i32;
pub const X509_KU_CRL_SIGN: i32 = sys::MBEDTLS_X509_KU_CRL_SIGN as i32;
pub const X509_KU_ENCIPHER_ONLY: i32 = sys::MBEDTLS_X509_KU_ENCIPHER_ONLY as i32;
pub const X509_KU_DECIPHER_ONLY: i32 = sys::MBEDTLS_X509_KU_DECIPHER_ONLY as i32;
pub const X509_NS_CERT_TYPE_SSL_CLIENT: i32 = sys::MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT as i32;
pub const X509_NS_CERT_TYPE_SSL_SERVER: i32 = sys::MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER as i32;
pub const X509_NS_CERT_TYPE_EMAIL: i32 = sys::MBEDTLS_X509_NS_CERT_TYPE_EMAIL as i32;
pub const X509_NS_CERT_TYPE_OBJECT_SIGNING: i32 =
    sys::MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING as i32;
pub const X509_NS_CERT_TYPE_RESERVED: i32 = sys::MBEDTLS_X509_NS_CERT_TYPE_RESERVED as i32;
pub const X509_NS_CERT_TYPE_SSL_CA: i32 = sys::MBEDTLS_X509_NS_CERT_TYPE_SSL_CA as i32;
pub const X509_NS_CERT_TYPE_EMAIL_CA: i32 = sys::MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA as i32;
pub const X509_NS_CERT_TYPE_OBJECT_SIGNING_CA: i32 =
    sys::MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA as i32;
pub const X509_FORMAT_DER: i32 = sys::MBEDTLS_X509_FORMAT_DER as i32;
pub const X509_FORMAT_PEM: i32 = sys::MBEDTLS_X509_FORMAT_PEM as i32;
pub const X509_MAX_DN_NAME_SIZE: i32 = sys::MBEDTLS_X509_MAX_DN_NAME_SIZE as i32;
pub const X509_CRT_VERSION_1: i32 = sys::MBEDTLS_X509_CRT_VERSION_1 as i32;
pub const X509_CRT_VERSION_2: i32 = sys::MBEDTLS_X509_CRT_VERSION_2 as i32;
pub const X509_CRT_VERSION_3: i32 = sys::MBEDTLS_X509_CRT_VERSION_3 as i32;
pub const X509_RFC5280_MAX_SERIAL_LEN: i32 = sys::MBEDTLS_X509_RFC5280_MAX_SERIAL_LEN as i32;
pub const X509_RFC5280_UTC_TIME_LEN: i32 = sys::MBEDTLS_X509_RFC5280_UTC_TIME_LEN as i32;
pub const X509_MAX_FILE_PATH_LEN: i32 = sys::MBEDTLS_X509_MAX_FILE_PATH_LEN as i32;
pub const X509_MAX_VERIFY_CHAIN_SIZE: i32 = sys::MBEDTLS_X509_MAX_VERIFY_CHAIN_SIZE as i32;
pub const SSL_IANA_TLS_GROUP_NONE: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_NONE as i32;
pub const SSL_IANA_TLS_GROUP_SECP192K1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_SECP192K1 as i32;
pub const SSL_IANA_TLS_GROUP_SECP192R1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_SECP192R1 as i32;
pub const SSL_IANA_TLS_GROUP_SECP224K1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_SECP224K1 as i32;
pub const SSL_IANA_TLS_GROUP_SECP224R1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_SECP224R1 as i32;
pub const SSL_IANA_TLS_GROUP_SECP256K1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_SECP256K1 as i32;
pub const SSL_IANA_TLS_GROUP_SECP256R1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_SECP256R1 as i32;
pub const SSL_IANA_TLS_GROUP_SECP384R1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_SECP384R1 as i32;
pub const SSL_IANA_TLS_GROUP_SECP521R1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_SECP521R1 as i32;
pub const SSL_IANA_TLS_GROUP_BP256R1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_BP256R1 as i32;
pub const SSL_IANA_TLS_GROUP_BP384R1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_BP384R1 as i32;
pub const SSL_IANA_TLS_GROUP_BP512R1: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_BP512R1 as i32;
pub const SSL_IANA_TLS_GROUP_X25519: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_X25519 as i32;
pub const SSL_IANA_TLS_GROUP_X448: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_X448 as i32;
pub const SSL_IANA_TLS_GROUP_FFDHE2048: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_FFDHE2048 as i32;
pub const SSL_IANA_TLS_GROUP_FFDHE3072: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_FFDHE3072 as i32;
pub const SSL_IANA_TLS_GROUP_FFDHE4096: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_FFDHE4096 as i32;
pub const SSL_IANA_TLS_GROUP_FFDHE6144: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_FFDHE6144 as i32;
pub const SSL_IANA_TLS_GROUP_FFDHE8192: i32 = sys::MBEDTLS_SSL_IANA_TLS_GROUP_FFDHE8192 as i32;
pub const SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK: i32 =
    sys::MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK as i32;
pub const SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL: i32 =
    sys::MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL as i32;
pub const SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL: i32 =
    sys::MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_EPHEMERAL as i32;
pub const SSL_TLS1_3_KEY_EXCHANGE_MODE_ALL: i32 =
    sys::MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_ALL as i32;
pub const SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_ALL: i32 =
    sys::MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_ALL as i32;
pub const SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ALL: i32 =
    sys::MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_EPHEMERAL_ALL as i32;
pub const SSL_TRANSPORT_STREAM: i32 = sys::MBEDTLS_SSL_TRANSPORT_STREAM as i32;
pub const SSL_TRANSPORT_DATAGRAM: i32 = sys::MBEDTLS_SSL_TRANSPORT_DATAGRAM as i32;
pub const SSL_MAX_HOST_NAME_LEN: i32 = sys::MBEDTLS_SSL_MAX_HOST_NAME_LEN as i32;
pub const SSL_MAX_ALPN_NAME_LEN: i32 = sys::MBEDTLS_SSL_MAX_ALPN_NAME_LEN as i32;
pub const SSL_MAX_ALPN_LIST_LEN: i32 = sys::MBEDTLS_SSL_MAX_ALPN_LIST_LEN as i32;
pub const SSL_MAX_FRAG_LEN_NONE: i32 = sys::MBEDTLS_SSL_MAX_FRAG_LEN_NONE as i32;
pub const SSL_MAX_FRAG_LEN_512: i32 = sys::MBEDTLS_SSL_MAX_FRAG_LEN_512 as i32;
pub const SSL_MAX_FRAG_LEN_1024: i32 = sys::MBEDTLS_SSL_MAX_FRAG_LEN_1024 as i32;
pub const SSL_MAX_FRAG_LEN_2048: i32 = sys::MBEDTLS_SSL_MAX_FRAG_LEN_2048 as i32;
pub const SSL_MAX_FRAG_LEN_4096: i32 = sys::MBEDTLS_SSL_MAX_FRAG_LEN_4096 as i32;
pub const SSL_MAX_FRAG_LEN_INVALID: i32 = sys::MBEDTLS_SSL_MAX_FRAG_LEN_INVALID as i32;
pub const SSL_IS_CLIENT: i32 = sys::MBEDTLS_SSL_IS_CLIENT as i32;
pub const SSL_IS_SERVER: i32 = sys::MBEDTLS_SSL_IS_SERVER as i32;
pub const SSL_EXTENDED_MS_DISABLED: i32 = sys::MBEDTLS_SSL_EXTENDED_MS_DISABLED as i32;
pub const SSL_EXTENDED_MS_ENABLED: i32 = sys::MBEDTLS_SSL_EXTENDED_MS_ENABLED as i32;
pub const SSL_CID_DISABLED: i32 = sys::MBEDTLS_SSL_CID_DISABLED as i32;
pub const SSL_CID_ENABLED: i32 = sys::MBEDTLS_SSL_CID_ENABLED as i32;
pub const SSL_ETM_DISABLED: i32 = sys::MBEDTLS_SSL_ETM_DISABLED as i32;
pub const SSL_ETM_ENABLED: i32 = sys::MBEDTLS_SSL_ETM_ENABLED as i32;
pub const SSL_COMPRESS_NULL: i32 = sys::MBEDTLS_SSL_COMPRESS_NULL as i32;
pub const SSL_VERIFY_NONE: i32 = sys::MBEDTLS_SSL_VERIFY_NONE as i32;
pub const SSL_VERIFY_OPTIONAL: i32 = sys::MBEDTLS_SSL_VERIFY_OPTIONAL as i32;
pub const SSL_VERIFY_REQUIRED: i32 = sys::MBEDTLS_SSL_VERIFY_REQUIRED as i32;
pub const SSL_VERIFY_UNSET: i32 = sys::MBEDTLS_SSL_VERIFY_UNSET as i32;
pub const SSL_LEGACY_RENEGOTIATION: i32 = sys::MBEDTLS_SSL_LEGACY_RENEGOTIATION as i32;
pub const SSL_SECURE_RENEGOTIATION: i32 = sys::MBEDTLS_SSL_SECURE_RENEGOTIATION as i32;
pub const SSL_RENEGOTIATION_DISABLED: i32 = sys::MBEDTLS_SSL_RENEGOTIATION_DISABLED as i32;
pub const SSL_RENEGOTIATION_ENABLED: i32 = sys::MBEDTLS_SSL_RENEGOTIATION_ENABLED as i32;
pub const SSL_ANTI_REPLAY_DISABLED: i32 = sys::MBEDTLS_SSL_ANTI_REPLAY_DISABLED as i32;
pub const SSL_ANTI_REPLAY_ENABLED: i32 = sys::MBEDTLS_SSL_ANTI_REPLAY_ENABLED as i32;
pub const SSL_RENEGO_MAX_RECORDS_DEFAULT: i32 = sys::MBEDTLS_SSL_RENEGO_MAX_RECORDS_DEFAULT as i32;
pub const SSL_LEGACY_NO_RENEGOTIATION: i32 = sys::MBEDTLS_SSL_LEGACY_NO_RENEGOTIATION as i32;
pub const SSL_LEGACY_ALLOW_RENEGOTIATION: i32 = sys::MBEDTLS_SSL_LEGACY_ALLOW_RENEGOTIATION as i32;
pub const SSL_LEGACY_BREAK_HANDSHAKE: i32 = sys::MBEDTLS_SSL_LEGACY_BREAK_HANDSHAKE as i32;
pub const SSL_TRUNC_HMAC_DISABLED: i32 = sys::MBEDTLS_SSL_TRUNC_HMAC_DISABLED as i32;
pub const SSL_TRUNC_HMAC_ENABLED: i32 = sys::MBEDTLS_SSL_TRUNC_HMAC_ENABLED as i32;
pub const SSL_TRUNCATED_HMAC_LEN: i32 = sys::MBEDTLS_SSL_TRUNCATED_HMAC_LEN as i32;
pub const SSL_SESSION_TICKETS_DISABLED: i32 = sys::MBEDTLS_SSL_SESSION_TICKETS_DISABLED as i32;
pub const SSL_SESSION_TICKETS_ENABLED: i32 = sys::MBEDTLS_SSL_SESSION_TICKETS_ENABLED as i32;
pub const SSL_PRESET_DEFAULT: i32 = sys::MBEDTLS_SSL_PRESET_DEFAULT as i32;
pub const SSL_PRESET_SUITEB: i32 = sys::MBEDTLS_SSL_PRESET_SUITEB as i32;
pub const SSL_CERT_REQ_CA_LIST_ENABLED: i32 = sys::MBEDTLS_SSL_CERT_REQ_CA_LIST_ENABLED as i32;
pub const SSL_CERT_REQ_CA_LIST_DISABLED: i32 = sys::MBEDTLS_SSL_CERT_REQ_CA_LIST_DISABLED as i32;
pub const SSL_DTLS_SRTP_MKI_UNSUPPORTED: i32 = sys::MBEDTLS_SSL_DTLS_SRTP_MKI_UNSUPPORTED as i32;
pub const SSL_DTLS_SRTP_MKI_SUPPORTED: i32 = sys::MBEDTLS_SSL_DTLS_SRTP_MKI_SUPPORTED as i32;
pub const SSL_SRV_CIPHERSUITE_ORDER_CLIENT: i32 =
    sys::MBEDTLS_SSL_SRV_CIPHERSUITE_ORDER_CLIENT as i32;
pub const SSL_SRV_CIPHERSUITE_ORDER_SERVER: i32 =
    sys::MBEDTLS_SSL_SRV_CIPHERSUITE_ORDER_SERVER as i32;
pub const SSL_DTLS_TIMEOUT_DFL_MIN: i32 = sys::MBEDTLS_SSL_DTLS_TIMEOUT_DFL_MIN as i32;
pub const SSL_DTLS_TIMEOUT_DFL_MAX: i32 = sys::MBEDTLS_SSL_DTLS_TIMEOUT_DFL_MAX as i32;
pub const SSL_DTLS_MAX_BUFFERING: i32 = sys::MBEDTLS_SSL_DTLS_MAX_BUFFERING as i32;
pub const SSL_CID_IN_LEN_MAX: i32 = sys::MBEDTLS_SSL_CID_IN_LEN_MAX as i32;
pub const SSL_CID_OUT_LEN_MAX: i32 = sys::MBEDTLS_SSL_CID_OUT_LEN_MAX as i32;
pub const SSL_CID_TLS1_3_PADDING_GRANULARITY: i32 =
    sys::MBEDTLS_SSL_CID_TLS1_3_PADDING_GRANULARITY as i32;
pub const SSL_VERIFY_DATA_MAX_LEN: i32 = sys::MBEDTLS_SSL_VERIFY_DATA_MAX_LEN as i32;
pub const SSL_EMPTY_RENEGOTIATION_INFO: i32 = sys::MBEDTLS_SSL_EMPTY_RENEGOTIATION_INFO as i32;
pub const SSL_HASH_NONE: i32 = sys::MBEDTLS_SSL_HASH_NONE as i32;
pub const SSL_HASH_MD5: i32 = sys::MBEDTLS_SSL_HASH_MD5 as i32;
pub const SSL_HASH_SHA1: i32 = sys::MBEDTLS_SSL_HASH_SHA1 as i32;
pub const SSL_HASH_SHA224: i32 = sys::MBEDTLS_SSL_HASH_SHA224 as i32;
pub const SSL_HASH_SHA256: i32 = sys::MBEDTLS_SSL_HASH_SHA256 as i32;
pub const SSL_HASH_SHA384: i32 = sys::MBEDTLS_SSL_HASH_SHA384 as i32;
pub const SSL_HASH_SHA512: i32 = sys::MBEDTLS_SSL_HASH_SHA512 as i32;
pub const SSL_SIG_ANON: i32 = sys::MBEDTLS_SSL_SIG_ANON as i32;
pub const SSL_SIG_RSA: i32 = sys::MBEDTLS_SSL_SIG_RSA as i32;
pub const SSL_SIG_ECDSA: i32 = sys::MBEDTLS_SSL_SIG_ECDSA as i32;
pub const TLS1_3_SIG_RSA_PKCS1_SHA256: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PKCS1_SHA256 as i32;
pub const TLS1_3_SIG_RSA_PKCS1_SHA384: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PKCS1_SHA384 as i32;
pub const TLS1_3_SIG_RSA_PKCS1_SHA512: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PKCS1_SHA512 as i32;
pub const TLS1_3_SIG_ECDSA_SECP256R1_SHA256: i32 =
    sys::MBEDTLS_TLS1_3_SIG_ECDSA_SECP256R1_SHA256 as i32;
pub const TLS1_3_SIG_ECDSA_SECP384R1_SHA384: i32 =
    sys::MBEDTLS_TLS1_3_SIG_ECDSA_SECP384R1_SHA384 as i32;
pub const TLS1_3_SIG_ECDSA_SECP521R1_SHA512: i32 =
    sys::MBEDTLS_TLS1_3_SIG_ECDSA_SECP521R1_SHA512 as i32;
pub const TLS1_3_SIG_RSA_PSS_RSAE_SHA256: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PSS_RSAE_SHA256 as i32;
pub const TLS1_3_SIG_RSA_PSS_RSAE_SHA384: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PSS_RSAE_SHA384 as i32;
pub const TLS1_3_SIG_RSA_PSS_RSAE_SHA512: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PSS_RSAE_SHA512 as i32;
pub const TLS1_3_SIG_ED25519: i32 = sys::MBEDTLS_TLS1_3_SIG_ED25519 as i32;
pub const TLS1_3_SIG_ED448: i32 = sys::MBEDTLS_TLS1_3_SIG_ED448 as i32;
pub const TLS1_3_SIG_RSA_PSS_PSS_SHA256: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PSS_PSS_SHA256 as i32;
pub const TLS1_3_SIG_RSA_PSS_PSS_SHA384: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PSS_PSS_SHA384 as i32;
pub const TLS1_3_SIG_RSA_PSS_PSS_SHA512: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PSS_PSS_SHA512 as i32;
pub const TLS1_3_SIG_RSA_PKCS1_SHA1: i32 = sys::MBEDTLS_TLS1_3_SIG_RSA_PKCS1_SHA1 as i32;
pub const TLS1_3_SIG_ECDSA_SHA1: i32 = sys::MBEDTLS_TLS1_3_SIG_ECDSA_SHA1 as i32;
pub const TLS1_3_SIG_NONE: i32 = sys::MBEDTLS_TLS1_3_SIG_NONE as i32;
pub const SSL_CERT_TYPE_RSA_SIGN: i32 = sys::MBEDTLS_SSL_CERT_TYPE_RSA_SIGN as i32;
pub const SSL_CERT_TYPE_ECDSA_SIGN: i32 = sys::MBEDTLS_SSL_CERT_TYPE_ECDSA_SIGN as i32;
pub const SSL_MSG_CHANGE_CIPHER_SPEC: i32 = sys::MBEDTLS_SSL_MSG_CHANGE_CIPHER_SPEC as i32;
pub const SSL_MSG_ALERT: i32 = sys::MBEDTLS_SSL_MSG_ALERT as i32;
pub const SSL_MSG_HANDSHAKE: i32 = sys::MBEDTLS_SSL_MSG_HANDSHAKE as i32;
pub const SSL_MSG_APPLICATION_DATA: i32 = sys::MBEDTLS_SSL_MSG_APPLICATION_DATA as i32;
pub const SSL_MSG_CID: i32 = sys::MBEDTLS_SSL_MSG_CID as i32;
pub const SSL_ALERT_LEVEL_WARNING: i32 = sys::MBEDTLS_SSL_ALERT_LEVEL_WARNING as i32;
pub const SSL_ALERT_LEVEL_FATAL: i32 = sys::MBEDTLS_SSL_ALERT_LEVEL_FATAL as i32;
pub const SSL_ALERT_MSG_CLOSE_NOTIFY: i32 = sys::MBEDTLS_SSL_ALERT_MSG_CLOSE_NOTIFY as i32;
pub const SSL_ALERT_MSG_UNEXPECTED_MESSAGE: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE as i32;
pub const SSL_ALERT_MSG_BAD_RECORD_MAC: i32 = sys::MBEDTLS_SSL_ALERT_MSG_BAD_RECORD_MAC as i32;
pub const SSL_ALERT_MSG_DECRYPTION_FAILED: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_DECRYPTION_FAILED as i32;
pub const SSL_ALERT_MSG_RECORD_OVERFLOW: i32 = sys::MBEDTLS_SSL_ALERT_MSG_RECORD_OVERFLOW as i32;
pub const SSL_ALERT_MSG_DECOMPRESSION_FAILURE: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_DECOMPRESSION_FAILURE as i32;
pub const SSL_ALERT_MSG_HANDSHAKE_FAILURE: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE as i32;
pub const SSL_ALERT_MSG_NO_CERT: i32 = sys::MBEDTLS_SSL_ALERT_MSG_NO_CERT as i32;
pub const SSL_ALERT_MSG_BAD_CERT: i32 = sys::MBEDTLS_SSL_ALERT_MSG_BAD_CERT as i32;
pub const SSL_ALERT_MSG_UNSUPPORTED_CERT: i32 = sys::MBEDTLS_SSL_ALERT_MSG_UNSUPPORTED_CERT as i32;
pub const SSL_ALERT_MSG_CERT_REVOKED: i32 = sys::MBEDTLS_SSL_ALERT_MSG_CERT_REVOKED as i32;
pub const SSL_ALERT_MSG_CERT_EXPIRED: i32 = sys::MBEDTLS_SSL_ALERT_MSG_CERT_EXPIRED as i32;
pub const SSL_ALERT_MSG_CERT_UNKNOWN: i32 = sys::MBEDTLS_SSL_ALERT_MSG_CERT_UNKNOWN as i32;
pub const SSL_ALERT_MSG_ILLEGAL_PARAMETER: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER as i32;
pub const SSL_ALERT_MSG_UNKNOWN_CA: i32 = sys::MBEDTLS_SSL_ALERT_MSG_UNKNOWN_CA as i32;
pub const SSL_ALERT_MSG_ACCESS_DENIED: i32 = sys::MBEDTLS_SSL_ALERT_MSG_ACCESS_DENIED as i32;
pub const SSL_ALERT_MSG_DECODE_ERROR: i32 = sys::MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR as i32;
pub const SSL_ALERT_MSG_DECRYPT_ERROR: i32 = sys::MBEDTLS_SSL_ALERT_MSG_DECRYPT_ERROR as i32;
pub const SSL_ALERT_MSG_EXPORT_RESTRICTION: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_EXPORT_RESTRICTION as i32;
pub const SSL_ALERT_MSG_PROTOCOL_VERSION: i32 = sys::MBEDTLS_SSL_ALERT_MSG_PROTOCOL_VERSION as i32;
pub const SSL_ALERT_MSG_INSUFFICIENT_SECURITY: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_INSUFFICIENT_SECURITY as i32;
pub const SSL_ALERT_MSG_INTERNAL_ERROR: i32 = sys::MBEDTLS_SSL_ALERT_MSG_INTERNAL_ERROR as i32;
pub const SSL_ALERT_MSG_INAPROPRIATE_FALLBACK: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_INAPROPRIATE_FALLBACK as i32;
pub const SSL_ALERT_MSG_USER_CANCELED: i32 = sys::MBEDTLS_SSL_ALERT_MSG_USER_CANCELED as i32;
pub const SSL_ALERT_MSG_NO_RENEGOTIATION: i32 = sys::MBEDTLS_SSL_ALERT_MSG_NO_RENEGOTIATION as i32;
pub const SSL_ALERT_MSG_MISSING_EXTENSION: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_MISSING_EXTENSION as i32;
pub const SSL_ALERT_MSG_UNSUPPORTED_EXT: i32 = sys::MBEDTLS_SSL_ALERT_MSG_UNSUPPORTED_EXT as i32;
pub const SSL_ALERT_MSG_UNRECOGNIZED_NAME: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_UNRECOGNIZED_NAME as i32;
pub const SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY as i32;
pub const SSL_ALERT_MSG_CERT_REQUIRED: i32 = sys::MBEDTLS_SSL_ALERT_MSG_CERT_REQUIRED as i32;
pub const SSL_ALERT_MSG_NO_APPLICATION_PROTOCOL: i32 =
    sys::MBEDTLS_SSL_ALERT_MSG_NO_APPLICATION_PROTOCOL as i32;
pub const SSL_HS_HELLO_REQUEST: i32 = sys::MBEDTLS_SSL_HS_HELLO_REQUEST as i32;
pub const SSL_HS_CLIENT_HELLO: i32 = sys::MBEDTLS_SSL_HS_CLIENT_HELLO as i32;
pub const SSL_HS_SERVER_HELLO: i32 = sys::MBEDTLS_SSL_HS_SERVER_HELLO as i32;
pub const SSL_HS_HELLO_VERIFY_REQUEST: i32 = sys::MBEDTLS_SSL_HS_HELLO_VERIFY_REQUEST as i32;
pub const SSL_HS_NEW_SESSION_TICKET: i32 = sys::MBEDTLS_SSL_HS_NEW_SESSION_TICKET as i32;
pub const SSL_HS_ENCRYPTED_EXTENSIONS: i32 = sys::MBEDTLS_SSL_HS_ENCRYPTED_EXTENSIONS as i32;
pub const SSL_HS_CERTIFICATE: i32 = sys::MBEDTLS_SSL_HS_CERTIFICATE as i32;
pub const SSL_HS_SERVER_KEY_EXCHANGE: i32 = sys::MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE as i32;
pub const SSL_HS_CERTIFICATE_REQUEST: i32 = sys::MBEDTLS_SSL_HS_CERTIFICATE_REQUEST as i32;
pub const SSL_HS_SERVER_HELLO_DONE: i32 = sys::MBEDTLS_SSL_HS_SERVER_HELLO_DONE as i32;
pub const SSL_HS_CERTIFICATE_VERIFY: i32 = sys::MBEDTLS_SSL_HS_CERTIFICATE_VERIFY as i32;
pub const SSL_HS_CLIENT_KEY_EXCHANGE: i32 = sys::MBEDTLS_SSL_HS_CLIENT_KEY_EXCHANGE as i32;
pub const SSL_HS_FINISHED: i32 = sys::MBEDTLS_SSL_HS_FINISHED as i32;
pub const SSL_HS_MESSAGE_HASH: i32 = sys::MBEDTLS_SSL_HS_MESSAGE_HASH as i32;
pub const TLS_EXT_SERVERNAME: i32 = sys::MBEDTLS_TLS_EXT_SERVERNAME as i32;
pub const TLS_EXT_SERVERNAME_HOSTNAME: i32 = sys::MBEDTLS_TLS_EXT_SERVERNAME_HOSTNAME as i32;
pub const TLS_EXT_MAX_FRAGMENT_LENGTH: i32 = sys::MBEDTLS_TLS_EXT_MAX_FRAGMENT_LENGTH as i32;
pub const TLS_EXT_TRUNCATED_HMAC: i32 = sys::MBEDTLS_TLS_EXT_TRUNCATED_HMAC as i32;
pub const TLS_EXT_STATUS_REQUEST: i32 = sys::MBEDTLS_TLS_EXT_STATUS_REQUEST as i32;
pub const TLS_EXT_SUPPORTED_ELLIPTIC_CURVES: i32 =
    sys::MBEDTLS_TLS_EXT_SUPPORTED_ELLIPTIC_CURVES as i32;
pub const TLS_EXT_SUPPORTED_GROUPS: i32 = sys::MBEDTLS_TLS_EXT_SUPPORTED_GROUPS as i32;
pub const TLS_EXT_SUPPORTED_POINT_FORMATS: i32 =
    sys::MBEDTLS_TLS_EXT_SUPPORTED_POINT_FORMATS as i32;
pub const TLS_EXT_SIG_ALG: i32 = sys::MBEDTLS_TLS_EXT_SIG_ALG as i32;
pub const TLS_EXT_USE_SRTP: i32 = sys::MBEDTLS_TLS_EXT_USE_SRTP as i32;
pub const TLS_EXT_HEARTBEAT: i32 = sys::MBEDTLS_TLS_EXT_HEARTBEAT as i32;
pub const TLS_EXT_ALPN: i32 = sys::MBEDTLS_TLS_EXT_ALPN as i32;
pub const TLS_EXT_SCT: i32 = sys::MBEDTLS_TLS_EXT_SCT as i32;
pub const TLS_EXT_CLI_CERT_TYPE: i32 = sys::MBEDTLS_TLS_EXT_CLI_CERT_TYPE as i32;
pub const TLS_EXT_SERV_CERT_TYPE: i32 = sys::MBEDTLS_TLS_EXT_SERV_CERT_TYPE as i32;
pub const TLS_EXT_PADDING: i32 = sys::MBEDTLS_TLS_EXT_PADDING as i32;
pub const TLS_EXT_ENCRYPT_THEN_MAC: i32 = sys::MBEDTLS_TLS_EXT_ENCRYPT_THEN_MAC as i32;
pub const TLS_EXT_EXTENDED_MASTER_SECRET: i32 = sys::MBEDTLS_TLS_EXT_EXTENDED_MASTER_SECRET as i32;
pub const TLS_EXT_SESSION_TICKET: i32 = sys::MBEDTLS_TLS_EXT_SESSION_TICKET as i32;
pub const TLS_EXT_PRE_SHARED_KEY: i32 = sys::MBEDTLS_TLS_EXT_PRE_SHARED_KEY as i32;
pub const TLS_EXT_EARLY_DATA: i32 = sys::MBEDTLS_TLS_EXT_EARLY_DATA as i32;
pub const TLS_EXT_SUPPORTED_VERSIONS: i32 = sys::MBEDTLS_TLS_EXT_SUPPORTED_VERSIONS as i32;
pub const TLS_EXT_COOKIE: i32 = sys::MBEDTLS_TLS_EXT_COOKIE as i32;
pub const TLS_EXT_PSK_KEY_EXCHANGE_MODES: i32 = sys::MBEDTLS_TLS_EXT_PSK_KEY_EXCHANGE_MODES as i32;
pub const TLS_EXT_CERT_AUTH: i32 = sys::MBEDTLS_TLS_EXT_CERT_AUTH as i32;
pub const TLS_EXT_OID_FILTERS: i32 = sys::MBEDTLS_TLS_EXT_OID_FILTERS as i32;
pub const TLS_EXT_POST_HANDSHAKE_AUTH: i32 = sys::MBEDTLS_TLS_EXT_POST_HANDSHAKE_AUTH as i32;
pub const TLS_EXT_SIG_ALG_CERT: i32 = sys::MBEDTLS_TLS_EXT_SIG_ALG_CERT as i32;
pub const TLS_EXT_KEY_SHARE: i32 = sys::MBEDTLS_TLS_EXT_KEY_SHARE as i32;
pub const TLS_EXT_CID: i32 = sys::MBEDTLS_TLS_EXT_CID as i32;
pub const TLS_EXT_ECJPAKE_KKPP: i32 = sys::MBEDTLS_TLS_EXT_ECJPAKE_KKPP as i32;
pub const TLS_EXT_RENEGOTIATION_INFO: i32 = sys::MBEDTLS_TLS_EXT_RENEGOTIATION_INFO as i32;
pub const PSK_MAX_LEN: i32 = sys::MBEDTLS_PSK_MAX_LEN as i32;
pub const TLS1_3_MD_MAX_SIZE: i32 = sys::MBEDTLS_TLS1_3_MD_MAX_SIZE as i32;
pub const SSL_SEQUENCE_NUMBER_LEN: i32 = sys::MBEDTLS_SSL_SEQUENCE_NUMBER_LEN as i32;
pub const TLS_SRTP_MAX_MKI_LENGTH: i32 = sys::MBEDTLS_TLS_SRTP_MAX_MKI_LENGTH as i32;
pub const TLS_SRTP_MAX_PROFILE_LIST_LENGTH: i32 =
    sys::MBEDTLS_TLS_SRTP_MAX_PROFILE_LIST_LENGTH as i32;
pub const AES_ENCRYPT: i32 = sys::MBEDTLS_AES_ENCRYPT as i32;
pub const AES_DECRYPT: i32 = sys::MBEDTLS_AES_DECRYPT as i32;
pub const ARIA_ENCRYPT: i32 = sys::MBEDTLS_ARIA_ENCRYPT as i32;
pub const ARIA_DECRYPT: i32 = sys::MBEDTLS_ARIA_DECRYPT as i32;
pub const ARIA_BLOCKSIZE: i32 = sys::MBEDTLS_ARIA_BLOCKSIZE as i32;
pub const ARIA_MAX_ROUNDS: i32 = sys::MBEDTLS_ARIA_MAX_ROUNDS as i32;
pub const ARIA_MAX_KEYSIZE: i32 = sys::MBEDTLS_ARIA_MAX_KEYSIZE as i32;
pub const CAMELLIA_ENCRYPT: i32 = sys::MBEDTLS_CAMELLIA_ENCRYPT as i32;
pub const CAMELLIA_DECRYPT: i32 = sys::MBEDTLS_CAMELLIA_DECRYPT as i32;
pub const CCM_DECRYPT: i32 = sys::MBEDTLS_CCM_DECRYPT as i32;
pub const CCM_ENCRYPT: i32 = sys::MBEDTLS_CCM_ENCRYPT as i32;
pub const CCM_STAR_DECRYPT: i32 = sys::MBEDTLS_CCM_STAR_DECRYPT as i32;
pub const CCM_STAR_ENCRYPT: i32 = sys::MBEDTLS_CCM_STAR_ENCRYPT as i32;
pub const AES_BLOCK_SIZE: i32 = sys::MBEDTLS_AES_BLOCK_SIZE as i32;
pub const DES3_BLOCK_SIZE: i32 = sys::MBEDTLS_DES3_BLOCK_SIZE as i32;
pub const CIPHER_BLKSIZE_MAX: i32 = sys::MBEDTLS_CIPHER_BLKSIZE_MAX as i32;
pub const PSA_BUILTIN_ALG_CCM: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_CCM as i32;
pub const PSA_BUILTIN_ALG_CCM_STAR_NO_TAG: i32 =
    sys::MBEDTLS_PSA_BUILTIN_ALG_CCM_STAR_NO_TAG as i32;
pub const PSA_BUILTIN_ALG_CMAC: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_CMAC as i32;
pub const PSA_BUILTIN_ALG_ECDH: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_ECDH as i32;
pub const PSA_BUILTIN_ALG_ECDSA: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_ECDSA as i32;
pub const PSA_BUILTIN_ALG_DETERMINISTIC_ECDSA: i32 =
    sys::MBEDTLS_PSA_BUILTIN_ALG_DETERMINISTIC_ECDSA as i32;
pub const PSA_BUILTIN_KEY_TYPE_ECC_KEY_PAIR: i32 =
    sys::MBEDTLS_PSA_BUILTIN_KEY_TYPE_ECC_KEY_PAIR as i32;
pub const PSA_BUILTIN_KEY_TYPE_ECC_PUBLIC_KEY: i32 =
    sys::MBEDTLS_PSA_BUILTIN_KEY_TYPE_ECC_PUBLIC_KEY as i32;
pub const PSA_BUILTIN_ALG_GCM: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_GCM as i32;
pub const PSA_BUILTIN_ALG_HMAC: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_HMAC as i32;
// pub const PSA_BUILTIN_ALG_HKDF: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_HKDF as i32;
// pub const PSA_BUILTIN_ALG_HKDF_EXTRACT: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_HKDF_EXTRACT as i32;
// pub const PSA_BUILTIN_ALG_HKDF_EXPAND: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_HKDF_EXPAND as i32;
pub const PSA_BUILTIN_ALG_TLS12_PRF: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_TLS12_PRF as i32;
pub const PSA_BUILTIN_ALG_TLS12_PSK_TO_MS: i32 =
    sys::MBEDTLS_PSA_BUILTIN_ALG_TLS12_PSK_TO_MS as i32;
pub const PSA_BUILTIN_ALG_MD5: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_MD5 as i32;
pub const PSA_BUILTIN_ALG_RSA_PKCS1V15_CRYPT: i32 =
    sys::MBEDTLS_PSA_BUILTIN_ALG_RSA_PKCS1V15_CRYPT as i32;
pub const PSA_BUILTIN_ALG_RSA_PKCS1V15_SIGN: i32 =
    sys::MBEDTLS_PSA_BUILTIN_ALG_RSA_PKCS1V15_SIGN as i32;
pub const PSA_BUILTIN_ALG_RSA_OAEP: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_RSA_OAEP as i32;
pub const PSA_BUILTIN_ALG_RSA_PSS: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_RSA_PSS as i32;
pub const PSA_BUILTIN_KEY_TYPE_RSA_KEY_PAIR: i32 =
    sys::MBEDTLS_PSA_BUILTIN_KEY_TYPE_RSA_KEY_PAIR as i32;
pub const PSA_BUILTIN_KEY_TYPE_RSA_PUBLIC_KEY: i32 =
    sys::MBEDTLS_PSA_BUILTIN_KEY_TYPE_RSA_PUBLIC_KEY as i32;
pub const PSA_BUILTIN_ALG_SHA_1: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_SHA_1 as i32;
pub const PSA_BUILTIN_ALG_SHA_224: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_SHA_224 as i32;
pub const PSA_BUILTIN_ALG_SHA_256: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_SHA_256 as i32;
pub const PSA_BUILTIN_ALG_SHA_384: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_SHA_384 as i32;
pub const PSA_BUILTIN_ALG_SHA_512: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_SHA_512 as i32;
pub const PSA_BUILTIN_KEY_TYPE_AES: i32 = sys::MBEDTLS_PSA_BUILTIN_KEY_TYPE_AES as i32;
pub const PSA_BUILTIN_KEY_TYPE_ARIA: i32 = sys::MBEDTLS_PSA_BUILTIN_KEY_TYPE_ARIA as i32;
pub const PSA_BUILTIN_ALG_CBC_NO_PADDING: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_CBC_NO_PADDING as i32;
pub const PSA_BUILTIN_ALG_CBC_PKCS7: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_CBC_PKCS7 as i32;
pub const PSA_BUILTIN_ALG_ECB_NO_PADDING: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_ECB_NO_PADDING as i32;
pub const PSA_BUILTIN_ALG_CFB: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_CFB as i32;
pub const PSA_BUILTIN_ALG_CTR: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_CTR as i32;
pub const PSA_BUILTIN_ALG_OFB: i32 = sys::MBEDTLS_PSA_BUILTIN_ALG_OFB as i32;
pub const PSA_BUILTIN_ECC_BRAINPOOL_P_R1_256: i32 =
    sys::MBEDTLS_PSA_BUILTIN_ECC_BRAINPOOL_P_R1_256 as i32;
pub const PSA_BUILTIN_ECC_BRAINPOOL_P_R1_384: i32 =
    sys::MBEDTLS_PSA_BUILTIN_ECC_BRAINPOOL_P_R1_384 as i32;
pub const PSA_BUILTIN_ECC_BRAINPOOL_P_R1_512: i32 =
    sys::MBEDTLS_PSA_BUILTIN_ECC_BRAINPOOL_P_R1_512 as i32;
pub const PSA_BUILTIN_ECC_MONTGOMERY_255: i32 = sys::MBEDTLS_PSA_BUILTIN_ECC_MONTGOMERY_255 as i32;
pub const PSA_BUILTIN_ECC_SECP_R1_192: i32 = sys::MBEDTLS_PSA_BUILTIN_ECC_SECP_R1_192 as i32;
pub const PSA_BUILTIN_ECC_SECP_R1_224: i32 = sys::MBEDTLS_PSA_BUILTIN_ECC_SECP_R1_224 as i32;
pub const PSA_BUILTIN_ECC_SECP_R1_256: i32 = sys::MBEDTLS_PSA_BUILTIN_ECC_SECP_R1_256 as i32;
pub const PSA_BUILTIN_ECC_SECP_R1_384: i32 = sys::MBEDTLS_PSA_BUILTIN_ECC_SECP_R1_384 as i32;
pub const PSA_BUILTIN_ECC_SECP_R1_521: i32 = sys::MBEDTLS_PSA_BUILTIN_ECC_SECP_R1_521 as i32;
pub const PSA_BUILTIN_ECC_SECP_K1_192: i32 = sys::MBEDTLS_PSA_BUILTIN_ECC_SECP_K1_192 as i32;
pub const PSA_BUILTIN_ECC_SECP_K1_256: i32 = sys::MBEDTLS_PSA_BUILTIN_ECC_SECP_K1_256 as i32;
pub const CTR_DRBG_BLOCKSIZE: i32 = sys::MBEDTLS_CTR_DRBG_BLOCKSIZE as i32;
pub const CTR_DRBG_KEYSIZE: i32 = sys::MBEDTLS_CTR_DRBG_KEYSIZE as i32;
pub const CTR_DRBG_KEYBITS: i32 = sys::MBEDTLS_CTR_DRBG_KEYBITS as i32;
pub const CTR_DRBG_SEEDLEN: i32 = sys::MBEDTLS_CTR_DRBG_SEEDLEN as i32;
pub const CTR_DRBG_ENTROPY_LEN: i32 = sys::MBEDTLS_CTR_DRBG_ENTROPY_LEN as i32;
pub const CTR_DRBG_RESEED_INTERVAL: i32 = sys::MBEDTLS_CTR_DRBG_RESEED_INTERVAL as i32;
pub const CTR_DRBG_MAX_INPUT: i32 = sys::MBEDTLS_CTR_DRBG_MAX_INPUT as i32;
pub const CTR_DRBG_MAX_REQUEST: i32 = sys::MBEDTLS_CTR_DRBG_MAX_REQUEST as i32;
pub const CTR_DRBG_MAX_SEED_INPUT: i32 = sys::MBEDTLS_CTR_DRBG_MAX_SEED_INPUT as i32;
pub const CTR_DRBG_PR_OFF: i32 = sys::MBEDTLS_CTR_DRBG_PR_OFF as i32;
pub const CTR_DRBG_PR_ON: i32 = sys::MBEDTLS_CTR_DRBG_PR_ON as i32;
pub const CTR_DRBG_ENTROPY_NONCE_LEN: i32 = sys::MBEDTLS_CTR_DRBG_ENTROPY_NONCE_LEN as i32;
pub const DES_ENCRYPT: i32 = sys::MBEDTLS_DES_ENCRYPT as i32;
pub const DES_DECRYPT: i32 = sys::MBEDTLS_DES_DECRYPT as i32;
pub const DES_KEY_SIZE: i32 = sys::MBEDTLS_DES_KEY_SIZE as i32;
pub const ENTROPY_MAX_SOURCES: i32 = sys::MBEDTLS_ENTROPY_MAX_SOURCES as i32;
pub const ENTROPY_MAX_GATHER: i32 = sys::MBEDTLS_ENTROPY_MAX_GATHER as i32;
pub const ENTROPY_BLOCK_SIZE: i32 = sys::MBEDTLS_ENTROPY_BLOCK_SIZE as i32;
pub const ENTROPY_MAX_SEED_SIZE: i32 = sys::MBEDTLS_ENTROPY_MAX_SEED_SIZE as i32;
pub const ENTROPY_SOURCE_MANUAL: i32 = sys::MBEDTLS_ENTROPY_SOURCE_MANUAL as i32;
pub const ENTROPY_SOURCE_STRONG: i32 = sys::MBEDTLS_ENTROPY_SOURCE_STRONG as i32;
pub const ENTROPY_SOURCE_WEAK: i32 = sys::MBEDTLS_ENTROPY_SOURCE_WEAK as i32;
pub const GCM_ENCRYPT: i32 = sys::MBEDTLS_GCM_ENCRYPT as i32;
pub const GCM_DECRYPT: i32 = sys::MBEDTLS_GCM_DECRYPT as i32;
pub const HMAC_DRBG_RESEED_INTERVAL: i32 = sys::MBEDTLS_HMAC_DRBG_RESEED_INTERVAL as i32;
pub const HMAC_DRBG_MAX_INPUT: i32 = sys::MBEDTLS_HMAC_DRBG_MAX_INPUT as i32;
pub const HMAC_DRBG_MAX_REQUEST: i32 = sys::MBEDTLS_HMAC_DRBG_MAX_REQUEST as i32;
pub const HMAC_DRBG_MAX_SEED_INPUT: i32 = sys::MBEDTLS_HMAC_DRBG_MAX_SEED_INPUT as i32;
pub const HMAC_DRBG_PR_OFF: i32 = sys::MBEDTLS_HMAC_DRBG_PR_OFF as i32;
pub const HMAC_DRBG_PR_ON: i32 = sys::MBEDTLS_HMAC_DRBG_PR_ON as i32;
pub const MEMORY_ALIGN_MULTIPLE: i32 = sys::MBEDTLS_MEMORY_ALIGN_MULTIPLE as i32;
pub const MEMORY_VERIFY_NONE: i32 = sys::MBEDTLS_MEMORY_VERIFY_NONE as i32;
pub const MEMORY_VERIFY_ALLOC: i32 = sys::MBEDTLS_MEMORY_VERIFY_ALLOC as i32;
pub const MEMORY_VERIFY_FREE: i32 = sys::MBEDTLS_MEMORY_VERIFY_FREE as i32;
pub const MEMORY_VERIFY_ALWAYS: i32 = sys::MBEDTLS_MEMORY_VERIFY_ALWAYS as i32;
pub const NET_LISTEN_BACKLOG: i32 = sys::MBEDTLS_NET_LISTEN_BACKLOG as i32;
pub const NET_PROTO_TCP: i32 = sys::MBEDTLS_NET_PROTO_TCP as i32;
pub const NET_PROTO_UDP: i32 = sys::MBEDTLS_NET_PROTO_UDP as i32;
pub const NET_POLL_READ: i32 = sys::MBEDTLS_NET_POLL_READ as i32;
pub const NET_POLL_WRITE: i32 = sys::MBEDTLS_NET_POLL_WRITE as i32;
pub const OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER: i32 =
    sys::MBEDTLS_OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER as i32;
pub const OID_X509_EXT_SUBJECT_KEY_IDENTIFIER: i32 =
    sys::MBEDTLS_OID_X509_EXT_SUBJECT_KEY_IDENTIFIER as i32;
pub const OID_X509_EXT_KEY_USAGE: i32 = sys::MBEDTLS_OID_X509_EXT_KEY_USAGE as i32;
pub const OID_X509_EXT_CERTIFICATE_POLICIES: i32 =
    sys::MBEDTLS_OID_X509_EXT_CERTIFICATE_POLICIES as i32;
pub const OID_X509_EXT_POLICY_MAPPINGS: i32 = sys::MBEDTLS_OID_X509_EXT_POLICY_MAPPINGS as i32;
pub const OID_X509_EXT_SUBJECT_ALT_NAME: i32 = sys::MBEDTLS_OID_X509_EXT_SUBJECT_ALT_NAME as i32;
pub const OID_X509_EXT_ISSUER_ALT_NAME: i32 = sys::MBEDTLS_OID_X509_EXT_ISSUER_ALT_NAME as i32;
pub const OID_X509_EXT_SUBJECT_DIRECTORY_ATTRS: i32 =
    sys::MBEDTLS_OID_X509_EXT_SUBJECT_DIRECTORY_ATTRS as i32;
pub const OID_X509_EXT_BASIC_CONSTRAINTS: i32 = sys::MBEDTLS_OID_X509_EXT_BASIC_CONSTRAINTS as i32;
pub const OID_X509_EXT_NAME_CONSTRAINTS: i32 = sys::MBEDTLS_OID_X509_EXT_NAME_CONSTRAINTS as i32;
pub const OID_X509_EXT_POLICY_CONSTRAINTS: i32 =
    sys::MBEDTLS_OID_X509_EXT_POLICY_CONSTRAINTS as i32;
pub const OID_X509_EXT_EXTENDED_KEY_USAGE: i32 =
    sys::MBEDTLS_OID_X509_EXT_EXTENDED_KEY_USAGE as i32;
pub const OID_X509_EXT_CRL_DISTRIBUTION_POINTS: i32 =
    sys::MBEDTLS_OID_X509_EXT_CRL_DISTRIBUTION_POINTS as i32;
pub const OID_X509_EXT_INIHIBIT_ANYPOLICY: i32 =
    sys::MBEDTLS_OID_X509_EXT_INIHIBIT_ANYPOLICY as i32;
pub const OID_X509_EXT_FRESHEST_CRL: i32 = sys::MBEDTLS_OID_X509_EXT_FRESHEST_CRL as i32;
pub const OID_X509_EXT_NS_CERT_TYPE: i32 = sys::MBEDTLS_OID_X509_EXT_NS_CERT_TYPE as i32;
pub const PKCS5_DECRYPT: i32 = sys::MBEDTLS_PKCS5_DECRYPT as i32;
pub const PKCS5_ENCRYPT: i32 = sys::MBEDTLS_PKCS5_ENCRYPT as i32;
pub const PKCS12_DERIVE_KEY: i32 = sys::MBEDTLS_PKCS12_DERIVE_KEY as i32;
pub const PKCS12_DERIVE_IV: i32 = sys::MBEDTLS_PKCS12_DERIVE_IV as i32;
pub const PKCS12_DERIVE_MAC_KEY: i32 = sys::MBEDTLS_PKCS12_DERIVE_MAC_KEY as i32;
pub const PKCS12_PBE_DECRYPT: i32 = sys::MBEDTLS_PKCS12_PBE_DECRYPT as i32;
pub const PKCS12_PBE_ENCRYPT: i32 = sys::MBEDTLS_PKCS12_PBE_ENCRYPT as i32;
pub const PLATFORM_STD_EXIT_SUCCESS: i32 = sys::MBEDTLS_PLATFORM_STD_EXIT_SUCCESS as i32;
pub const PLATFORM_STD_EXIT_FAILURE: i32 = sys::MBEDTLS_PLATFORM_STD_EXIT_FAILURE as i32;
pub const EXIT_SUCCESS: i32 = sys::MBEDTLS_EXIT_SUCCESS as i32;
pub const EXIT_FAILURE: i32 = sys::MBEDTLS_EXIT_FAILURE as i32;
pub const PSA_BUILTIN_CIPHER: i32 = sys::MBEDTLS_PSA_BUILTIN_CIPHER as i32;
pub const PSA_BUILTIN_AEAD: i32 = sys::MBEDTLS_PSA_BUILTIN_AEAD as i32;
pub const PSA_KA_MASK_DUAL_USE: i32 = sys::MBEDTLS_PSA_KA_MASK_DUAL_USE as i32;
pub const PSA_KEY_SLOT_COUNT: i32 = sys::MBEDTLS_PSA_KEY_SLOT_COUNT as i32;
pub const SSL_CACHE_DEFAULT_TIMEOUT: i32 = sys::MBEDTLS_SSL_CACHE_DEFAULT_TIMEOUT as i32;
pub const SSL_CACHE_DEFAULT_MAX_ENTRIES: i32 = sys::MBEDTLS_SSL_CACHE_DEFAULT_MAX_ENTRIES as i32;
pub const SSL_COOKIE_TIMEOUT: i32 = sys::MBEDTLS_SSL_COOKIE_TIMEOUT as i32;
pub const SSL_TICKET_MAX_KEY_BYTES: i32 = sys::MBEDTLS_SSL_TICKET_MAX_KEY_BYTES as i32;
pub const SSL_TICKET_KEY_NAME_BYTES: i32 = sys::MBEDTLS_SSL_TICKET_KEY_NAME_BYTES as i32;

pub use sys::MBEDTLS_OID_AES as OID_AES;
pub use sys::MBEDTLS_OID_AES128_KW as OID_AES128_KW;
pub use sys::MBEDTLS_OID_AES128_KWP as OID_AES128_KWP;
pub use sys::MBEDTLS_OID_AES192_KW as OID_AES192_KW;
pub use sys::MBEDTLS_OID_AES192_KWP as OID_AES192_KWP;
pub use sys::MBEDTLS_OID_AES256_KW as OID_AES256_KW;
pub use sys::MBEDTLS_OID_AES256_KWP as OID_AES256_KWP;
pub use sys::MBEDTLS_OID_ANSI_X9_62 as OID_ANSI_X9_62;
pub use sys::MBEDTLS_OID_ANSI_X9_62_FIELD_TYPE as OID_ANSI_X9_62_FIELD_TYPE;
pub use sys::MBEDTLS_OID_ANSI_X9_62_PRIME_FIELD as OID_ANSI_X9_62_PRIME_FIELD;
pub use sys::MBEDTLS_OID_ANSI_X9_62_SIG as OID_ANSI_X9_62_SIG;
pub use sys::MBEDTLS_OID_ANSI_X9_62_SIG_SHA2 as OID_ANSI_X9_62_SIG_SHA2;
pub use sys::MBEDTLS_OID_ANY_EXTENDED_KEY_USAGE as OID_ANY_EXTENDED_KEY_USAGE;
pub use sys::MBEDTLS_OID_ANY_POLICY as OID_ANY_POLICY;
pub use sys::MBEDTLS_OID_AT as OID_AT;
pub use sys::MBEDTLS_OID_AT_CN as OID_AT_CN;
pub use sys::MBEDTLS_OID_AT_COUNTRY as OID_AT_COUNTRY;
pub use sys::MBEDTLS_OID_AT_DN_QUALIFIER as OID_AT_DN_QUALIFIER;
pub use sys::MBEDTLS_OID_AT_GENERATION_QUALIFIER as OID_AT_GENERATION_QUALIFIER;
pub use sys::MBEDTLS_OID_AT_GIVEN_NAME as OID_AT_GIVEN_NAME;
pub use sys::MBEDTLS_OID_AT_INITIALS as OID_AT_INITIALS;
pub use sys::MBEDTLS_OID_AT_LOCALITY as OID_AT_LOCALITY;
pub use sys::MBEDTLS_OID_AT_ORGANIZATION as OID_AT_ORGANIZATION;
pub use sys::MBEDTLS_OID_AT_ORG_UNIT as OID_AT_ORG_UNIT;
pub use sys::MBEDTLS_OID_AT_POSTAL_ADDRESS as OID_AT_POSTAL_ADDRESS;
pub use sys::MBEDTLS_OID_AT_POSTAL_CODE as OID_AT_POSTAL_CODE;
pub use sys::MBEDTLS_OID_AT_PSEUDONYM as OID_AT_PSEUDONYM;
pub use sys::MBEDTLS_OID_AT_SERIAL_NUMBER as OID_AT_SERIAL_NUMBER;
pub use sys::MBEDTLS_OID_AT_STATE as OID_AT_STATE;
pub use sys::MBEDTLS_OID_AT_SUR_NAME as OID_AT_SUR_NAME;
pub use sys::MBEDTLS_OID_AT_TITLE as OID_AT_TITLE;
pub use sys::MBEDTLS_OID_AT_UNIQUE_IDENTIFIER as OID_AT_UNIQUE_IDENTIFIER;
pub use sys::MBEDTLS_OID_AUTHORITY_KEY_IDENTIFIER as OID_AUTHORITY_KEY_IDENTIFIER;
pub use sys::MBEDTLS_OID_BASIC_CONSTRAINTS as OID_BASIC_CONSTRAINTS;
pub use sys::MBEDTLS_OID_CERTICOM as OID_CERTICOM;
pub use sys::MBEDTLS_OID_CERTIFICATE_POLICIES as OID_CERTIFICATE_POLICIES;
pub use sys::MBEDTLS_OID_CLIENT_AUTH as OID_CLIENT_AUTH;
pub use sys::MBEDTLS_OID_CODE_SIGNING as OID_CODE_SIGNING;
pub use sys::MBEDTLS_OID_COUNTRY_US as OID_COUNTRY_US;
pub use sys::MBEDTLS_OID_CRL_DISTRIBUTION_POINTS as OID_CRL_DISTRIBUTION_POINTS;
pub use sys::MBEDTLS_OID_CRL_NUMBER as OID_CRL_NUMBER;
pub use sys::MBEDTLS_OID_DES_CBC as OID_DES_CBC;
pub use sys::MBEDTLS_OID_DES_EDE3_CBC as OID_DES_EDE3_CBC;
pub use sys::MBEDTLS_OID_DIGEST_ALG_MD5 as OID_DIGEST_ALG_MD5;
pub use sys::MBEDTLS_OID_DIGEST_ALG_RIPEMD160 as OID_DIGEST_ALG_RIPEMD160;
pub use sys::MBEDTLS_OID_DIGEST_ALG_SHA1 as OID_DIGEST_ALG_SHA1;
pub use sys::MBEDTLS_OID_DIGEST_ALG_SHA224 as OID_DIGEST_ALG_SHA224;
pub use sys::MBEDTLS_OID_DIGEST_ALG_SHA256 as OID_DIGEST_ALG_SHA256;
pub use sys::MBEDTLS_OID_DIGEST_ALG_SHA384 as OID_DIGEST_ALG_SHA384;
pub use sys::MBEDTLS_OID_DIGEST_ALG_SHA512 as OID_DIGEST_ALG_SHA512;
pub use sys::MBEDTLS_OID_DOMAIN_COMPONENT as OID_DOMAIN_COMPONENT;
pub use sys::MBEDTLS_OID_ECDSA_SHA1 as OID_ECDSA_SHA1;
pub use sys::MBEDTLS_OID_ECDSA_SHA224 as OID_ECDSA_SHA224;
pub use sys::MBEDTLS_OID_ECDSA_SHA256 as OID_ECDSA_SHA256;
pub use sys::MBEDTLS_OID_ECDSA_SHA384 as OID_ECDSA_SHA384;
pub use sys::MBEDTLS_OID_ECDSA_SHA512 as OID_ECDSA_SHA512;
pub use sys::MBEDTLS_OID_EC_ALG_ECDH as OID_EC_ALG_ECDH;
pub use sys::MBEDTLS_OID_EC_ALG_UNRESTRICTED as OID_EC_ALG_UNRESTRICTED;
pub use sys::MBEDTLS_OID_EC_BRAINPOOL_V1 as OID_EC_BRAINPOOL_V1;
pub use sys::MBEDTLS_OID_EC_GRP_BP256R1 as OID_EC_GRP_BP256R1;
pub use sys::MBEDTLS_OID_EC_GRP_BP384R1 as OID_EC_GRP_BP384R1;
pub use sys::MBEDTLS_OID_EC_GRP_BP512R1 as OID_EC_GRP_BP512R1;
pub use sys::MBEDTLS_OID_EC_GRP_SECP192K1 as OID_EC_GRP_SECP192K1;
pub use sys::MBEDTLS_OID_EC_GRP_SECP192R1 as OID_EC_GRP_SECP192R1;
pub use sys::MBEDTLS_OID_EC_GRP_SECP224K1 as OID_EC_GRP_SECP224K1;
pub use sys::MBEDTLS_OID_EC_GRP_SECP224R1 as OID_EC_GRP_SECP224R1;
pub use sys::MBEDTLS_OID_EC_GRP_SECP256K1 as OID_EC_GRP_SECP256K1;
pub use sys::MBEDTLS_OID_EC_GRP_SECP256R1 as OID_EC_GRP_SECP256R1;
pub use sys::MBEDTLS_OID_EC_GRP_SECP384R1 as OID_EC_GRP_SECP384R1;
pub use sys::MBEDTLS_OID_EC_GRP_SECP521R1 as OID_EC_GRP_SECP521R1;
pub use sys::MBEDTLS_OID_EMAIL_PROTECTION as OID_EMAIL_PROTECTION;
pub use sys::MBEDTLS_OID_EXTENDED_KEY_USAGE as OID_EXTENDED_KEY_USAGE;
pub use sys::MBEDTLS_OID_FRESHEST_CRL as OID_FRESHEST_CRL;
pub use sys::MBEDTLS_OID_GOV as OID_GOV;
pub use sys::MBEDTLS_OID_HMAC_SHA1 as OID_HMAC_SHA1;
pub use sys::MBEDTLS_OID_HMAC_SHA224 as OID_HMAC_SHA224;
pub use sys::MBEDTLS_OID_HMAC_SHA256 as OID_HMAC_SHA256;
pub use sys::MBEDTLS_OID_HMAC_SHA384 as OID_HMAC_SHA384;
pub use sys::MBEDTLS_OID_HMAC_SHA512 as OID_HMAC_SHA512;
pub use sys::MBEDTLS_OID_ID_CE as OID_ID_CE;
pub use sys::MBEDTLS_OID_INIHIBIT_ANYPOLICY as OID_INIHIBIT_ANYPOLICY;
pub use sys::MBEDTLS_OID_INTERNET as OID_INTERNET;
pub use sys::MBEDTLS_OID_ISO_CCITT_DS as OID_ISO_CCITT_DS;
pub use sys::MBEDTLS_OID_ISO_IDENTIFIED_ORG as OID_ISO_IDENTIFIED_ORG;
pub use sys::MBEDTLS_OID_ISO_ITU_COUNTRY as OID_ISO_ITU_COUNTRY;
pub use sys::MBEDTLS_OID_ISO_ITU_US_ORG as OID_ISO_ITU_US_ORG;
pub use sys::MBEDTLS_OID_ISO_MEMBER_BODIES as OID_ISO_MEMBER_BODIES;
pub use sys::MBEDTLS_OID_ISSUER_ALT_NAME as OID_ISSUER_ALT_NAME;
pub use sys::MBEDTLS_OID_KEY_USAGE as OID_KEY_USAGE;
pub use sys::MBEDTLS_OID_KP as OID_KP;
pub use sys::MBEDTLS_OID_MGF1 as OID_MGF1;
pub use sys::MBEDTLS_OID_NAME_CONSTRAINTS as OID_NAME_CONSTRAINTS;
pub use sys::MBEDTLS_OID_NETSCAPE as OID_NETSCAPE;
pub use sys::MBEDTLS_OID_NIST_ALG as OID_NIST_ALG;
pub use sys::MBEDTLS_OID_NS_BASE_URL as OID_NS_BASE_URL;
pub use sys::MBEDTLS_OID_NS_CA_POLICY_URL as OID_NS_CA_POLICY_URL;
pub use sys::MBEDTLS_OID_NS_CA_REVOCATION_URL as OID_NS_CA_REVOCATION_URL;
pub use sys::MBEDTLS_OID_NS_CERT as OID_NS_CERT;
pub use sys::MBEDTLS_OID_NS_CERT_SEQUENCE as OID_NS_CERT_SEQUENCE;
pub use sys::MBEDTLS_OID_NS_CERT_TYPE as OID_NS_CERT_TYPE;
pub use sys::MBEDTLS_OID_NS_COMMENT as OID_NS_COMMENT;
pub use sys::MBEDTLS_OID_NS_DATA_TYPE as OID_NS_DATA_TYPE;
pub use sys::MBEDTLS_OID_NS_RENEWAL_URL as OID_NS_RENEWAL_URL;
pub use sys::MBEDTLS_OID_NS_REVOCATION_URL as OID_NS_REVOCATION_URL;
pub use sys::MBEDTLS_OID_NS_SSL_SERVER_NAME as OID_NS_SSL_SERVER_NAME;
pub use sys::MBEDTLS_OID_OCSP_SIGNING as OID_OCSP_SIGNING;
pub use sys::MBEDTLS_OID_OIW_SECSIG as OID_OIW_SECSIG;
pub use sys::MBEDTLS_OID_OIW_SECSIG_ALG as OID_OIW_SECSIG_ALG;
pub use sys::MBEDTLS_OID_OIW_SECSIG_SHA1 as OID_OIW_SECSIG_SHA1;
pub use sys::MBEDTLS_OID_ON as OID_ON;
pub use sys::MBEDTLS_OID_ON_HW_MODULE_NAME as OID_ON_HW_MODULE_NAME;
pub use sys::MBEDTLS_OID_ORGANIZATION as OID_ORGANIZATION;
pub use sys::MBEDTLS_OID_ORG_ANSI_X9_62 as OID_ORG_ANSI_X9_62;
pub use sys::MBEDTLS_OID_ORG_CERTICOM as OID_ORG_CERTICOM;
pub use sys::MBEDTLS_OID_ORG_DOD as OID_ORG_DOD;
pub use sys::MBEDTLS_OID_ORG_GOV as OID_ORG_GOV;
pub use sys::MBEDTLS_OID_ORG_NETSCAPE as OID_ORG_NETSCAPE;
pub use sys::MBEDTLS_OID_ORG_OIW as OID_ORG_OIW;
pub use sys::MBEDTLS_OID_ORG_RSA_DATA_SECURITY as OID_ORG_RSA_DATA_SECURITY;
pub use sys::MBEDTLS_OID_ORG_TELETRUST as OID_ORG_TELETRUST;
pub use sys::MBEDTLS_OID_PKCS as OID_PKCS;
pub use sys::MBEDTLS_OID_PKCS1 as OID_PKCS1;
pub use sys::MBEDTLS_OID_PKCS12 as OID_PKCS12;
pub use sys::MBEDTLS_OID_PKCS12_PBE as OID_PKCS12_PBE;
pub use sys::MBEDTLS_OID_PKCS12_PBE_SHA1_DES2_EDE_CBC as OID_PKCS12_PBE_SHA1_DES2_EDE_CBC;
pub use sys::MBEDTLS_OID_PKCS12_PBE_SHA1_DES3_EDE_CBC as OID_PKCS12_PBE_SHA1_DES3_EDE_CBC;
pub use sys::MBEDTLS_OID_PKCS12_PBE_SHA1_RC2_128_CBC as OID_PKCS12_PBE_SHA1_RC2_128_CBC;
pub use sys::MBEDTLS_OID_PKCS12_PBE_SHA1_RC2_40_CBC as OID_PKCS12_PBE_SHA1_RC2_40_CBC;
pub use sys::MBEDTLS_OID_PKCS1_MD5 as OID_PKCS1_MD5;
pub use sys::MBEDTLS_OID_PKCS1_RSA as OID_PKCS1_RSA;
pub use sys::MBEDTLS_OID_PKCS1_SHA1 as OID_PKCS1_SHA1;
pub use sys::MBEDTLS_OID_PKCS1_SHA224 as OID_PKCS1_SHA224;
pub use sys::MBEDTLS_OID_PKCS1_SHA256 as OID_PKCS1_SHA256;
pub use sys::MBEDTLS_OID_PKCS1_SHA384 as OID_PKCS1_SHA384;
pub use sys::MBEDTLS_OID_PKCS1_SHA512 as OID_PKCS1_SHA512;
pub use sys::MBEDTLS_OID_PKCS5 as OID_PKCS5;
pub use sys::MBEDTLS_OID_PKCS5_PBES2 as OID_PKCS5_PBES2;
pub use sys::MBEDTLS_OID_PKCS5_PBE_MD5_DES_CBC as OID_PKCS5_PBE_MD5_DES_CBC;
pub use sys::MBEDTLS_OID_PKCS5_PBE_MD5_RC2_CBC as OID_PKCS5_PBE_MD5_RC2_CBC;
pub use sys::MBEDTLS_OID_PKCS5_PBE_SHA1_DES_CBC as OID_PKCS5_PBE_SHA1_DES_CBC;
pub use sys::MBEDTLS_OID_PKCS5_PBE_SHA1_RC2_CBC as OID_PKCS5_PBE_SHA1_RC2_CBC;
pub use sys::MBEDTLS_OID_PKCS5_PBKDF2 as OID_PKCS5_PBKDF2;
pub use sys::MBEDTLS_OID_PKCS5_PBMAC1 as OID_PKCS5_PBMAC1;
pub use sys::MBEDTLS_OID_PKCS9 as OID_PKCS9;
pub use sys::MBEDTLS_OID_PKCS9_CSR_EXT_REQ as OID_PKCS9_CSR_EXT_REQ;
pub use sys::MBEDTLS_OID_PKCS9_EMAIL as OID_PKCS9_EMAIL;
pub use sys::MBEDTLS_OID_PKIX as OID_PKIX;
pub use sys::MBEDTLS_OID_POLICY_CONSTRAINTS as OID_POLICY_CONSTRAINTS;
pub use sys::MBEDTLS_OID_POLICY_MAPPINGS as OID_POLICY_MAPPINGS;
pub use sys::MBEDTLS_OID_PRIVATE_KEY_USAGE_PERIOD as OID_PRIVATE_KEY_USAGE_PERIOD;
pub use sys::MBEDTLS_OID_RSASSA_PSS as OID_RSASSA_PSS;
pub use sys::MBEDTLS_OID_RSA_COMPANY as OID_RSA_COMPANY;
pub use sys::MBEDTLS_OID_RSA_SHA_OBS as OID_RSA_SHA_OBS;
pub use sys::MBEDTLS_OID_SERVER_AUTH as OID_SERVER_AUTH;
pub use sys::MBEDTLS_OID_SUBJECT_ALT_NAME as OID_SUBJECT_ALT_NAME;
pub use sys::MBEDTLS_OID_SUBJECT_DIRECTORY_ATTRS as OID_SUBJECT_DIRECTORY_ATTRS;
pub use sys::MBEDTLS_OID_SUBJECT_KEY_IDENTIFIER as OID_SUBJECT_KEY_IDENTIFIER;
pub use sys::MBEDTLS_OID_TELETRUST as OID_TELETRUST;
pub use sys::MBEDTLS_OID_TIME_STAMPING as OID_TIME_STAMPING;
pub use sys::MBEDTLS_OID_UID as OID_UID;
pub use sys::MBEDTLS_OID_WISUN_FAN as OID_WISUN_FAN;
pub use sys::MBEDTLS_PLATFORM_STD_NV_SEED_FILE as PLATFORM_STD_NV_SEED_FILE;
pub use sys::MBEDTLS_PRINTF_LONGLONG as PRINTF_LONGLONG;
pub use sys::MBEDTLS_PRINTF_SIZET as PRINTF_SIZET;
pub use sys::MBEDTLS_RSA_SALT_LEN_ANY as RSA_SALT_LEN_ANY;
pub use sys::MBEDTLS_SSL_RENEGOTIATION_NOT_ENFORCED as SSL_RENEGOTIATION_NOT_ENFORCED;
pub use sys::MBEDTLS_VERSION_STRING as VERSION_STRING;
pub use sys::MBEDTLS_VERSION_STRING_FULL as VERSION_STRING_FULL;

pub use sys::MBEDTLS_ERR_AES_BAD_INPUT_DATA as ERR_AES_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_AES_INVALID_INPUT_LENGTH as ERR_AES_INVALID_INPUT_LENGTH;
pub use sys::MBEDTLS_ERR_AES_INVALID_KEY_LENGTH as ERR_AES_INVALID_KEY_LENGTH;
pub use sys::MBEDTLS_ERR_ARIA_BAD_INPUT_DATA as ERR_ARIA_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_ARIA_INVALID_INPUT_LENGTH as ERR_ARIA_INVALID_INPUT_LENGTH;
pub use sys::MBEDTLS_ERR_ASN1_ALLOC_FAILED as ERR_ASN1_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_ASN1_BUF_TOO_SMALL as ERR_ASN1_BUF_TOO_SMALL;
pub use sys::MBEDTLS_ERR_ASN1_INVALID_DATA as ERR_ASN1_INVALID_DATA;
pub use sys::MBEDTLS_ERR_ASN1_INVALID_LENGTH as ERR_ASN1_INVALID_LENGTH;
pub use sys::MBEDTLS_ERR_ASN1_LENGTH_MISMATCH as ERR_ASN1_LENGTH_MISMATCH;
pub use sys::MBEDTLS_ERR_ASN1_OUT_OF_DATA as ERR_ASN1_OUT_OF_DATA;
pub use sys::MBEDTLS_ERR_ASN1_UNEXPECTED_TAG as ERR_ASN1_UNEXPECTED_TAG;
pub use sys::MBEDTLS_ERR_BASE64_BUFFER_TOO_SMALL as ERR_BASE64_BUFFER_TOO_SMALL;
pub use sys::MBEDTLS_ERR_BASE64_INVALID_CHARACTER as ERR_BASE64_INVALID_CHARACTER;
pub use sys::MBEDTLS_ERR_CAMELLIA_BAD_INPUT_DATA as ERR_CAMELLIA_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_CAMELLIA_INVALID_INPUT_LENGTH as ERR_CAMELLIA_INVALID_INPUT_LENGTH;
pub use sys::MBEDTLS_ERR_CCM_AUTH_FAILED as ERR_CCM_AUTH_FAILED;
pub use sys::MBEDTLS_ERR_CCM_BAD_INPUT as ERR_CCM_BAD_INPUT;
pub use sys::MBEDTLS_ERR_CHACHA20_BAD_INPUT_DATA as ERR_CHACHA20_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_CHACHAPOLY_AUTH_FAILED as ERR_CHACHAPOLY_AUTH_FAILED;
pub use sys::MBEDTLS_ERR_CHACHAPOLY_BAD_STATE as ERR_CHACHAPOLY_BAD_STATE;
pub use sys::MBEDTLS_ERR_CIPHER_ALLOC_FAILED as ERR_CIPHER_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_CIPHER_AUTH_FAILED as ERR_CIPHER_AUTH_FAILED;
pub use sys::MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA as ERR_CIPHER_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE as ERR_CIPHER_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED as ERR_CIPHER_FULL_BLOCK_EXPECTED;
pub use sys::MBEDTLS_ERR_CIPHER_INVALID_CONTEXT as ERR_CIPHER_INVALID_CONTEXT;
pub use sys::MBEDTLS_ERR_CIPHER_INVALID_PADDING as ERR_CIPHER_INVALID_PADDING;
pub use sys::MBEDTLS_ERR_CTR_DRBG_ENTROPY_SOURCE_FAILED as ERR_CTR_DRBG_ENTROPY_SOURCE_FAILED;
pub use sys::MBEDTLS_ERR_CTR_DRBG_FILE_IO_ERROR as ERR_CTR_DRBG_FILE_IO_ERROR;
pub use sys::MBEDTLS_ERR_CTR_DRBG_INPUT_TOO_BIG as ERR_CTR_DRBG_INPUT_TOO_BIG;
pub use sys::MBEDTLS_ERR_CTR_DRBG_REQUEST_TOO_BIG as ERR_CTR_DRBG_REQUEST_TOO_BIG;
pub use sys::MBEDTLS_ERR_DES_INVALID_INPUT_LENGTH as ERR_DES_INVALID_INPUT_LENGTH;
pub use sys::MBEDTLS_ERR_DHM_ALLOC_FAILED as ERR_DHM_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_DHM_BAD_INPUT_DATA as ERR_DHM_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_DHM_CALC_SECRET_FAILED as ERR_DHM_CALC_SECRET_FAILED;
pub use sys::MBEDTLS_ERR_DHM_FILE_IO_ERROR as ERR_DHM_FILE_IO_ERROR;
pub use sys::MBEDTLS_ERR_DHM_INVALID_FORMAT as ERR_DHM_INVALID_FORMAT;
pub use sys::MBEDTLS_ERR_DHM_MAKE_PARAMS_FAILED as ERR_DHM_MAKE_PARAMS_FAILED;
pub use sys::MBEDTLS_ERR_DHM_MAKE_PUBLIC_FAILED as ERR_DHM_MAKE_PUBLIC_FAILED;
pub use sys::MBEDTLS_ERR_DHM_READ_PARAMS_FAILED as ERR_DHM_READ_PARAMS_FAILED;
pub use sys::MBEDTLS_ERR_DHM_READ_PUBLIC_FAILED as ERR_DHM_READ_PUBLIC_FAILED;
pub use sys::MBEDTLS_ERR_DHM_SET_GROUP_FAILED as ERR_DHM_SET_GROUP_FAILED;
pub use sys::MBEDTLS_ERR_ECP_ALLOC_FAILED as ERR_ECP_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_ECP_BAD_INPUT_DATA as ERR_ECP_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_ECP_BUFFER_TOO_SMALL as ERR_ECP_BUFFER_TOO_SMALL;
pub use sys::MBEDTLS_ERR_ECP_FEATURE_UNAVAILABLE as ERR_ECP_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_ECP_INVALID_KEY as ERR_ECP_INVALID_KEY;
pub use sys::MBEDTLS_ERR_ECP_IN_PROGRESS as ERR_ECP_IN_PROGRESS;
pub use sys::MBEDTLS_ERR_ECP_RANDOM_FAILED as ERR_ECP_RANDOM_FAILED;
pub use sys::MBEDTLS_ERR_ECP_SIG_LEN_MISMATCH as ERR_ECP_SIG_LEN_MISMATCH;
pub use sys::MBEDTLS_ERR_ECP_VERIFY_FAILED as ERR_ECP_VERIFY_FAILED;
pub use sys::MBEDTLS_ERR_ENTROPY_FILE_IO_ERROR as ERR_ENTROPY_FILE_IO_ERROR;
pub use sys::MBEDTLS_ERR_ENTROPY_MAX_SOURCES as ERR_ENTROPY_MAX_SOURCES;
pub use sys::MBEDTLS_ERR_ENTROPY_NO_SOURCES_DEFINED as ERR_ENTROPY_NO_SOURCES_DEFINED;
pub use sys::MBEDTLS_ERR_ENTROPY_NO_STRONG_SOURCE as ERR_ENTROPY_NO_STRONG_SOURCE;
pub use sys::MBEDTLS_ERR_ENTROPY_SOURCE_FAILED as ERR_ENTROPY_SOURCE_FAILED;
pub use sys::MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED as ERR_ERROR_CORRUPTION_DETECTED;
pub use sys::MBEDTLS_ERR_ERROR_GENERIC_ERROR as ERR_ERROR_GENERIC_ERROR;
pub use sys::MBEDTLS_ERR_GCM_AUTH_FAILED as ERR_GCM_AUTH_FAILED;
pub use sys::MBEDTLS_ERR_GCM_BAD_INPUT as ERR_GCM_BAD_INPUT;
pub use sys::MBEDTLS_ERR_GCM_BUFFER_TOO_SMALL as ERR_GCM_BUFFER_TOO_SMALL;
pub use sys::MBEDTLS_ERR_HKDF_BAD_INPUT_DATA as ERR_HKDF_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_HMAC_DRBG_ENTROPY_SOURCE_FAILED as ERR_HMAC_DRBG_ENTROPY_SOURCE_FAILED;
pub use sys::MBEDTLS_ERR_HMAC_DRBG_FILE_IO_ERROR as ERR_HMAC_DRBG_FILE_IO_ERROR;
pub use sys::MBEDTLS_ERR_HMAC_DRBG_INPUT_TOO_BIG as ERR_HMAC_DRBG_INPUT_TOO_BIG;
pub use sys::MBEDTLS_ERR_HMAC_DRBG_REQUEST_TOO_BIG as ERR_HMAC_DRBG_REQUEST_TOO_BIG;
pub use sys::MBEDTLS_ERR_MD_ALLOC_FAILED as ERR_MD_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_MD_BAD_INPUT_DATA as ERR_MD_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_MD_FEATURE_UNAVAILABLE as ERR_MD_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_MD_FILE_IO_ERROR as ERR_MD_FILE_IO_ERROR;
pub use sys::MBEDTLS_ERR_MPI_ALLOC_FAILED as ERR_MPI_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_MPI_BAD_INPUT_DATA as ERR_MPI_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_MPI_BUFFER_TOO_SMALL as ERR_MPI_BUFFER_TOO_SMALL;
pub use sys::MBEDTLS_ERR_MPI_DIVISION_BY_ZERO as ERR_MPI_DIVISION_BY_ZERO;
pub use sys::MBEDTLS_ERR_MPI_FILE_IO_ERROR as ERR_MPI_FILE_IO_ERROR;
pub use sys::MBEDTLS_ERR_MPI_INVALID_CHARACTER as ERR_MPI_INVALID_CHARACTER;
pub use sys::MBEDTLS_ERR_MPI_NEGATIVE_VALUE as ERR_MPI_NEGATIVE_VALUE;
pub use sys::MBEDTLS_ERR_MPI_NOT_ACCEPTABLE as ERR_MPI_NOT_ACCEPTABLE;
pub use sys::MBEDTLS_ERR_NET_ACCEPT_FAILED as ERR_NET_ACCEPT_FAILED;
pub use sys::MBEDTLS_ERR_NET_BAD_INPUT_DATA as ERR_NET_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_NET_BIND_FAILED as ERR_NET_BIND_FAILED;
pub use sys::MBEDTLS_ERR_NET_BUFFER_TOO_SMALL as ERR_NET_BUFFER_TOO_SMALL;
pub use sys::MBEDTLS_ERR_NET_CONNECT_FAILED as ERR_NET_CONNECT_FAILED;
pub use sys::MBEDTLS_ERR_NET_CONN_RESET as ERR_NET_CONN_RESET;
pub use sys::MBEDTLS_ERR_NET_INVALID_CONTEXT as ERR_NET_INVALID_CONTEXT;
pub use sys::MBEDTLS_ERR_NET_LISTEN_FAILED as ERR_NET_LISTEN_FAILED;
pub use sys::MBEDTLS_ERR_NET_POLL_FAILED as ERR_NET_POLL_FAILED;
pub use sys::MBEDTLS_ERR_NET_RECV_FAILED as ERR_NET_RECV_FAILED;
pub use sys::MBEDTLS_ERR_NET_SEND_FAILED as ERR_NET_SEND_FAILED;
pub use sys::MBEDTLS_ERR_NET_SOCKET_FAILED as ERR_NET_SOCKET_FAILED;
pub use sys::MBEDTLS_ERR_NET_UNKNOWN_HOST as ERR_NET_UNKNOWN_HOST;
pub use sys::MBEDTLS_ERR_OID_BUF_TOO_SMALL as ERR_OID_BUF_TOO_SMALL;
pub use sys::MBEDTLS_ERR_OID_NOT_FOUND as ERR_OID_NOT_FOUND;
pub use sys::MBEDTLS_ERR_PEM_ALLOC_FAILED as ERR_PEM_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_PEM_BAD_INPUT_DATA as ERR_PEM_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_PEM_FEATURE_UNAVAILABLE as ERR_PEM_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_PEM_INVALID_DATA as ERR_PEM_INVALID_DATA;
pub use sys::MBEDTLS_ERR_PEM_INVALID_ENC_IV as ERR_PEM_INVALID_ENC_IV;
pub use sys::MBEDTLS_ERR_PEM_NO_HEADER_FOOTER_PRESENT as ERR_PEM_NO_HEADER_FOOTER_PRESENT;
pub use sys::MBEDTLS_ERR_PEM_PASSWORD_MISMATCH as ERR_PEM_PASSWORD_MISMATCH;
pub use sys::MBEDTLS_ERR_PEM_PASSWORD_REQUIRED as ERR_PEM_PASSWORD_REQUIRED;
pub use sys::MBEDTLS_ERR_PEM_UNKNOWN_ENC_ALG as ERR_PEM_UNKNOWN_ENC_ALG;
pub use sys::MBEDTLS_ERR_PKCS12_BAD_INPUT_DATA as ERR_PKCS12_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_PKCS12_FEATURE_UNAVAILABLE as ERR_PKCS12_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_PKCS12_PASSWORD_MISMATCH as ERR_PKCS12_PASSWORD_MISMATCH;
pub use sys::MBEDTLS_ERR_PKCS12_PBE_INVALID_FORMAT as ERR_PKCS12_PBE_INVALID_FORMAT;
pub use sys::MBEDTLS_ERR_PKCS5_BAD_INPUT_DATA as ERR_PKCS5_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_PKCS5_FEATURE_UNAVAILABLE as ERR_PKCS5_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_PKCS5_INVALID_FORMAT as ERR_PKCS5_INVALID_FORMAT;
pub use sys::MBEDTLS_ERR_PKCS5_PASSWORD_MISMATCH as ERR_PKCS5_PASSWORD_MISMATCH;
pub use sys::MBEDTLS_ERR_PK_ALLOC_FAILED as ERR_PK_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_PK_BAD_INPUT_DATA as ERR_PK_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_PK_BUFFER_TOO_SMALL as ERR_PK_BUFFER_TOO_SMALL;
pub use sys::MBEDTLS_ERR_PK_FEATURE_UNAVAILABLE as ERR_PK_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_PK_FILE_IO_ERROR as ERR_PK_FILE_IO_ERROR;
pub use sys::MBEDTLS_ERR_PK_INVALID_ALG as ERR_PK_INVALID_ALG;
pub use sys::MBEDTLS_ERR_PK_INVALID_PUBKEY as ERR_PK_INVALID_PUBKEY;
pub use sys::MBEDTLS_ERR_PK_KEY_INVALID_FORMAT as ERR_PK_KEY_INVALID_FORMAT;
pub use sys::MBEDTLS_ERR_PK_KEY_INVALID_VERSION as ERR_PK_KEY_INVALID_VERSION;
pub use sys::MBEDTLS_ERR_PK_PASSWORD_MISMATCH as ERR_PK_PASSWORD_MISMATCH;
pub use sys::MBEDTLS_ERR_PK_PASSWORD_REQUIRED as ERR_PK_PASSWORD_REQUIRED;
pub use sys::MBEDTLS_ERR_PK_SIG_LEN_MISMATCH as ERR_PK_SIG_LEN_MISMATCH;
pub use sys::MBEDTLS_ERR_PK_TYPE_MISMATCH as ERR_PK_TYPE_MISMATCH;
pub use sys::MBEDTLS_ERR_PK_UNKNOWN_NAMED_CURVE as ERR_PK_UNKNOWN_NAMED_CURVE;
pub use sys::MBEDTLS_ERR_PK_UNKNOWN_PK_ALG as ERR_PK_UNKNOWN_PK_ALG;
pub use sys::MBEDTLS_ERR_PLATFORM_FEATURE_UNSUPPORTED as ERR_PLATFORM_FEATURE_UNSUPPORTED;
pub use sys::MBEDTLS_ERR_PLATFORM_HW_ACCEL_FAILED as ERR_PLATFORM_HW_ACCEL_FAILED;
pub use sys::MBEDTLS_ERR_POLY1305_BAD_INPUT_DATA as ERR_POLY1305_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_RSA_BAD_INPUT_DATA as ERR_RSA_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_RSA_INVALID_PADDING as ERR_RSA_INVALID_PADDING;
pub use sys::MBEDTLS_ERR_RSA_KEY_CHECK_FAILED as ERR_RSA_KEY_CHECK_FAILED;
pub use sys::MBEDTLS_ERR_RSA_KEY_GEN_FAILED as ERR_RSA_KEY_GEN_FAILED;
pub use sys::MBEDTLS_ERR_RSA_OUTPUT_TOO_LARGE as ERR_RSA_OUTPUT_TOO_LARGE;
pub use sys::MBEDTLS_ERR_RSA_PRIVATE_FAILED as ERR_RSA_PRIVATE_FAILED;
pub use sys::MBEDTLS_ERR_RSA_PUBLIC_FAILED as ERR_RSA_PUBLIC_FAILED;
pub use sys::MBEDTLS_ERR_RSA_RNG_FAILED as ERR_RSA_RNG_FAILED;
pub use sys::MBEDTLS_ERR_RSA_VERIFY_FAILED as ERR_RSA_VERIFY_FAILED;
pub use sys::MBEDTLS_ERR_SHA1_BAD_INPUT_DATA as ERR_SHA1_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_SHA256_BAD_INPUT_DATA as ERR_SHA256_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_SHA512_BAD_INPUT_DATA as ERR_SHA512_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_SSL_ALLOC_FAILED as ERR_SSL_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_SSL_ASYNC_IN_PROGRESS as ERR_SSL_ASYNC_IN_PROGRESS;
pub use sys::MBEDTLS_ERR_SSL_BAD_CERTIFICATE as ERR_SSL_BAD_CERTIFICATE;
pub use sys::MBEDTLS_ERR_SSL_BAD_CONFIG as ERR_SSL_BAD_CONFIG;
pub use sys::MBEDTLS_ERR_SSL_BAD_INPUT_DATA as ERR_SSL_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_SSL_BAD_PROTOCOL_VERSION as ERR_SSL_BAD_PROTOCOL_VERSION;
pub use sys::MBEDTLS_ERR_SSL_BUFFER_TOO_SMALL as ERR_SSL_BUFFER_TOO_SMALL;
pub use sys::MBEDTLS_ERR_SSL_CA_CHAIN_REQUIRED as ERR_SSL_CA_CHAIN_REQUIRED;
pub use sys::MBEDTLS_ERR_SSL_CLIENT_RECONNECT as ERR_SSL_CLIENT_RECONNECT;
pub use sys::MBEDTLS_ERR_SSL_CONN_EOF as ERR_SSL_CONN_EOF;
pub use sys::MBEDTLS_ERR_SSL_CONTINUE_PROCESSING as ERR_SSL_CONTINUE_PROCESSING;
pub use sys::MBEDTLS_ERR_SSL_COUNTER_WRAPPING as ERR_SSL_COUNTER_WRAPPING;
pub use sys::MBEDTLS_ERR_SSL_CRYPTO_IN_PROGRESS as ERR_SSL_CRYPTO_IN_PROGRESS;
pub use sys::MBEDTLS_ERR_SSL_DECODE_ERROR as ERR_SSL_DECODE_ERROR;
pub use sys::MBEDTLS_ERR_SSL_EARLY_MESSAGE as ERR_SSL_EARLY_MESSAGE;
pub use sys::MBEDTLS_ERR_SSL_FATAL_ALERT_MESSAGE as ERR_SSL_FATAL_ALERT_MESSAGE;
pub use sys::MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE as ERR_SSL_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_SSL_HANDSHAKE_FAILURE as ERR_SSL_HANDSHAKE_FAILURE;
pub use sys::MBEDTLS_ERR_SSL_HELLO_VERIFY_REQUIRED as ERR_SSL_HELLO_VERIFY_REQUIRED;
pub use sys::MBEDTLS_ERR_SSL_HW_ACCEL_FAILED as ERR_SSL_HW_ACCEL_FAILED;
pub use sys::MBEDTLS_ERR_SSL_HW_ACCEL_FALLTHROUGH as ERR_SSL_HW_ACCEL_FALLTHROUGH;
pub use sys::MBEDTLS_ERR_SSL_ILLEGAL_PARAMETER as ERR_SSL_ILLEGAL_PARAMETER;
pub use sys::MBEDTLS_ERR_SSL_INTERNAL_ERROR as ERR_SSL_INTERNAL_ERROR;
pub use sys::MBEDTLS_ERR_SSL_INVALID_MAC as ERR_SSL_INVALID_MAC;
pub use sys::MBEDTLS_ERR_SSL_INVALID_RECORD as ERR_SSL_INVALID_RECORD;
pub use sys::MBEDTLS_ERR_SSL_NON_FATAL as ERR_SSL_NON_FATAL;
pub use sys::MBEDTLS_ERR_SSL_NO_APPLICATION_PROTOCOL as ERR_SSL_NO_APPLICATION_PROTOCOL;
pub use sys::MBEDTLS_ERR_SSL_NO_CLIENT_CERTIFICATE as ERR_SSL_NO_CLIENT_CERTIFICATE;
pub use sys::MBEDTLS_ERR_SSL_NO_RNG as ERR_SSL_NO_RNG;
pub use sys::MBEDTLS_ERR_SSL_PEER_CLOSE_NOTIFY as ERR_SSL_PEER_CLOSE_NOTIFY;
pub use sys::MBEDTLS_ERR_SSL_PK_TYPE_MISMATCH as ERR_SSL_PK_TYPE_MISMATCH;
pub use sys::MBEDTLS_ERR_SSL_PRIVATE_KEY_REQUIRED as ERR_SSL_PRIVATE_KEY_REQUIRED;
pub use sys::MBEDTLS_ERR_SSL_SESSION_TICKET_EXPIRED as ERR_SSL_SESSION_TICKET_EXPIRED;
pub use sys::MBEDTLS_ERR_SSL_TIMEOUT as ERR_SSL_TIMEOUT;
pub use sys::MBEDTLS_ERR_SSL_UNEXPECTED_CID as ERR_SSL_UNEXPECTED_CID;
pub use sys::MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE as ERR_SSL_UNEXPECTED_MESSAGE;
pub use sys::MBEDTLS_ERR_SSL_UNEXPECTED_RECORD as ERR_SSL_UNEXPECTED_RECORD;
pub use sys::MBEDTLS_ERR_SSL_UNKNOWN_IDENTITY as ERR_SSL_UNKNOWN_IDENTITY;
pub use sys::MBEDTLS_ERR_SSL_UNRECOGNIZED_NAME as ERR_SSL_UNRECOGNIZED_NAME;
pub use sys::MBEDTLS_ERR_SSL_UNSUPPORTED_EXTENSION as ERR_SSL_UNSUPPORTED_EXTENSION;
pub use sys::MBEDTLS_ERR_SSL_VERSION_MISMATCH as ERR_SSL_VERSION_MISMATCH;
pub use sys::MBEDTLS_ERR_SSL_WAITING_SERVER_HELLO_RENEGO as ERR_SSL_WAITING_SERVER_HELLO_RENEGO;
pub use sys::MBEDTLS_ERR_SSL_WANT_READ as ERR_SSL_WANT_READ;
pub use sys::MBEDTLS_ERR_SSL_WANT_WRITE as ERR_SSL_WANT_WRITE;
pub use sys::MBEDTLS_ERR_THREADING_BAD_INPUT_DATA as ERR_THREADING_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_THREADING_MUTEX_ERROR as ERR_THREADING_MUTEX_ERROR;
pub use sys::MBEDTLS_ERR_X509_ALLOC_FAILED as ERR_X509_ALLOC_FAILED;
pub use sys::MBEDTLS_ERR_X509_BAD_INPUT_DATA as ERR_X509_BAD_INPUT_DATA;
pub use sys::MBEDTLS_ERR_X509_BUFFER_TOO_SMALL as ERR_X509_BUFFER_TOO_SMALL;
pub use sys::MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT as ERR_X509_CERT_UNKNOWN_FORMAT;
pub use sys::MBEDTLS_ERR_X509_CERT_VERIFY_FAILED as ERR_X509_CERT_VERIFY_FAILED;
pub use sys::MBEDTLS_ERR_X509_FATAL_ERROR as ERR_X509_FATAL_ERROR;
pub use sys::MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE as ERR_X509_FEATURE_UNAVAILABLE;
pub use sys::MBEDTLS_ERR_X509_FILE_IO_ERROR as ERR_X509_FILE_IO_ERROR;
pub use sys::MBEDTLS_ERR_X509_INVALID_ALG as ERR_X509_INVALID_ALG;
pub use sys::MBEDTLS_ERR_X509_INVALID_DATE as ERR_X509_INVALID_DATE;
pub use sys::MBEDTLS_ERR_X509_INVALID_EXTENSIONS as ERR_X509_INVALID_EXTENSIONS;
pub use sys::MBEDTLS_ERR_X509_INVALID_FORMAT as ERR_X509_INVALID_FORMAT;
pub use sys::MBEDTLS_ERR_X509_INVALID_NAME as ERR_X509_INVALID_NAME;
pub use sys::MBEDTLS_ERR_X509_INVALID_SERIAL as ERR_X509_INVALID_SERIAL;
pub use sys::MBEDTLS_ERR_X509_INVALID_SIGNATURE as ERR_X509_INVALID_SIGNATURE;
pub use sys::MBEDTLS_ERR_X509_INVALID_VERSION as ERR_X509_INVALID_VERSION;
pub use sys::MBEDTLS_ERR_X509_SIG_MISMATCH as ERR_X509_SIG_MISMATCH;
pub use sys::MBEDTLS_ERR_X509_UNKNOWN_OID as ERR_X509_UNKNOWN_OID;
pub use sys::MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG as ERR_X509_UNKNOWN_SIG_ALG;
pub use sys::MBEDTLS_ERR_X509_UNKNOWN_VERSION as ERR_X509_UNKNOWN_VERSION;

pub use sys::esp_aes_128_decrypt_t as aes_128_decrypt_t;
pub use sys::esp_aes_128_encrypt_t as aes_128_encrypt_t;
cfg_if::cfg_if! {
    if #[cfg(esp_idf_mbedtls_hardware_aes)] {
        pub use sys::esp_aes_acquire_hardware as aes_acquire_hardware;
        pub use sys::esp_aes_context as aes_context;
        pub use sys::esp_aes_crypt_cbc as aes_crypt_cbc;
        pub use sys::esp_aes_crypt_cfb128 as aes_crypt_cfb128;
        pub use sys::esp_aes_crypt_cfb8 as aes_crypt_cfb8;
        pub use sys::esp_aes_crypt_ctr as aes_crypt_ctr;
        pub use sys::esp_aes_crypt_ecb as aes_crypt_ecb;
        pub use sys::esp_aes_crypt_ofb as aes_crypt_ofb;
        pub use sys::esp_aes_crypt_xts as aes_crypt_xts;
        pub use sys::esp_aes_decrypt as aes_decrypt;
    }
}
pub use sys::esp_aes_decrypt_deinit_t as aes_decrypt_deinit_t;
pub use sys::esp_aes_decrypt_init_t as aes_decrypt_init_t;
pub use sys::esp_aes_decrypt_t as aes_decrypt_t;
pub use sys::esp_aes_encrypt_deinit_t as aes_encrypt_deinit_t;
pub use sys::esp_aes_encrypt_init_t as aes_encrypt_init_t;
pub use sys::esp_aes_encrypt_t as aes_encrypt_t;
pub use sys::esp_aes_gmac_t as aes_gmac_t;
cfg_if::cfg_if! {
    if #[cfg(esp_idf_mbedtls_hardware_aes)] {
        pub use sys::esp_aes_encrypt as aes_encrypt;
        pub use sys::esp_aes_free as aes_free;
        pub use sys::esp_aes_init as aes_init;
        pub use sys::esp_aes_mode_t as aes_mode_t;
        pub use sys::esp_aes_mode_t_ESP_AES_BLOCK_MODE_CBC as AES_BLOCK_MODE_CBC;
        pub use sys::esp_aes_mode_t_ESP_AES_BLOCK_MODE_CFB128 as AES_BLOCK_MODE_CFB128;
        pub use sys::esp_aes_mode_t_ESP_AES_BLOCK_MODE_CFB8 as AES_BLOCK_MODE_CFB8;
        pub use sys::esp_aes_mode_t_ESP_AES_BLOCK_MODE_CTR as AES_BLOCK_MODE_CTR;
        pub use sys::esp_aes_mode_t_ESP_AES_BLOCK_MODE_ECB as AES_BLOCK_MODE_ECB;
        pub use sys::esp_aes_mode_t_ESP_AES_BLOCK_MODE_GCM as AES_BLOCK_MODE_GCM;
        pub use sys::esp_aes_mode_t_ESP_AES_BLOCK_MODE_MAX as AES_BLOCK_MODE_MAX;
        pub use sys::esp_aes_mode_t_ESP_AES_BLOCK_MODE_OFB as AES_BLOCK_MODE_OFB;
        pub use sys::esp_aes_release_hardware as aes_release_hardware;
        pub use sys::esp_aes_setkey as aes_setkey;
        pub use sys::esp_aes_xts_context as aes_xts_context;
        pub use sys::esp_aes_xts_free as aes_xts_free;
        pub use sys::esp_aes_xts_init as aes_xts_init;
        pub use sys::esp_aes_xts_setkey_dec as aes_xts_setkey_dec;
        pub use sys::esp_aes_xts_setkey_enc as aes_xts_setkey_enc;
    }
}
pub use sys::esp_aes_unwrap_t as aes_unwrap_t;
pub use sys::esp_aes_wrap_t as aes_wrap_t;
pub use sys::esp_mbedtls_mem_calloc as calloc;
pub use sys::esp_mbedtls_mem_free as free;
pub use sys::esp_md5_vector_t as md5_vector_t;
pub use sys::esp_rom_md5_final as md5_final;
pub use sys::esp_rom_md5_init as md5_init;
pub use sys::esp_rom_md5_update as md5_update;
pub use sys::ESP_ROM_MD5_DIGEST_LEN as MD5_DIGEST_LEN;

/* This value is defined by a C function macro, something which is not supported by bindgen currently
   https://github.com/rust-lang-nursery/rust-bindgen/issues/231
*/
pub const ECDSA_MAX_LEN: u32 = 141;

pub const ERR_MD_HW_ACCEL_FAILED: i32 = -21120;
pub const ERR_THREADING_FEATURE_UNAVAILABLE: i32 = -26;
pub const ERR_ECP_HW_ACCEL_FAILED: i32 = -19328;
pub const ERR_RSA_UNSUPPORTED_OPERATION: i32 = -17664;
pub const ERR_RSA_HW_ACCEL_FAILED: i32 = -17792;
pub const ERR_PK_HW_ACCEL_FAILED: i32 = -14464;
pub const ERR_CIPHER_HW_ACCEL_FAILED: i32 = -25600;
pub const ERR_AES_FEATURE_UNAVAILABLE: i32 = -35;
pub const ERR_AES_HW_ACCEL_FAILED: i32 = -37;
pub const ERR_DHM_HW_ACCEL_FAILED: i32 = -13568;
pub const ERR_SSL_UNKNOWN_CIPHER: i32 = -29440;
pub const ERR_SSL_NO_CIPHER_CHOSEN: i32 = -29568;
pub const ERR_SSL_CERTIFICATE_TOO_LARGE: i32 = -29952;
pub const ERR_SSL_CERTIFICATE_REQUIRED: i32 = -30080;
pub const ERR_SSL_PEER_VERIFY_FAILED: i32 = -30720;
pub const ERR_SSL_BAD_HS_CLIENT_HELLO: i32 = -30976;
pub const ERR_SSL_BAD_HS_SERVER_HELLO: i32 = -31104;
pub const ERR_SSL_BAD_HS_CERTIFICATE: i32 = -31232;
pub const ERR_SSL_BAD_HS_CERTIFICATE_REQUEST: i32 = -31360;
pub const ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE: i32 = -31488;
pub const ERR_SSL_BAD_HS_SERVER_HELLO_DONE: i32 = -31616;
pub const ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE: i32 = -31744;
pub const ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP: i32 = -31872;
pub const ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_CS: i32 = -32000;
pub const ERR_SSL_BAD_HS_CERTIFICATE_VERIFY: i32 = -32128;
pub const ERR_SSL_BAD_HS_CHANGE_CIPHER_SPEC: i32 = -32256;
pub const ERR_SSL_BAD_HS_FINISHED: i32 = -32384;
pub const ERR_SSL_COMPRESSION_FAILED: i32 = -28416;
pub const ERR_SSL_BAD_HS_PROTOCOL_VERSION: i32 = -28288;
pub const ERR_SSL_BAD_HS_NEW_SESSION_TICKET: i32 = -28160;
pub const ERR_SSL_NO_USABLE_CIPHERSUITE: i32 = -27008;
pub const ERR_SSL_INVALID_VERIFY_HASH: i32 = -26112;
pub const ERR_MD5_HW_ACCEL_FAILED: i32 = -47;
pub const ERR_SHA1_HW_ACCEL_FAILED: i32 = -53;
pub const ERR_SHA256_HW_ACCEL_FAILED: i32 = -55;
pub const ERR_SHA512_HW_ACCEL_FAILED: i32 = -57;
pub const ERR_POLY1305_FEATURE_UNAVAILABLE: i32 = -89;
pub const ERR_POLY1305_HW_ACCEL_FAILED: i32 = -91;
pub const ERR_CHACHA20_FEATURE_UNAVAILABLE: i32 = -83;
pub const ERR_CHACHA20_HW_ACCEL_FAILED: i32 = -85;
pub const ERR_XTEA_INVALID_INPUT_LENGTH: i32 = -40;
pub const ERR_XTEA_HW_ACCEL_FAILED: i32 = -41;
pub const ERR_RIPEMD160_HW_ACCEL_FAILED: i32 = -49;
pub const ERR_PADLOCK_DATA_MISALIGNED: i32 = -48;
pub const ERR_MD4_HW_ACCEL_FAILED: i32 = -45;
pub const ERR_MD2_HW_ACCEL_FAILED: i32 = -43;
pub const ERR_GCM_HW_ACCEL_FAILED: i32 = -19;
pub const ERR_DES_HW_ACCEL_FAILED: i32 = -51;
pub const ERR_CMAC_HW_ACCEL_FAILED: i32 = -122;
pub const ERR_CCM_HW_ACCEL_FAILED: i32 = -17;
pub const ERR_CAMELLIA_HW_ACCEL_FAILED: i32 = -39;
pub const ERR_BLOWFISH_BAD_INPUT_DATA: i32 = -22;
pub const ERR_BLOWFISH_INVALID_INPUT_LENGTH: i32 = -24;
pub const ERR_BLOWFISH_HW_ACCEL_FAILED: i32 = -23;
pub const ERR_ARIA_FEATURE_UNAVAILABLE: i32 = -90;
pub const ERR_ARIA_HW_ACCEL_FAILED: i32 = -88;
pub const ERR_ARC4_HW_ACCEL_FAILED: i32 = -25;
